head     1.2;
branch   ;
access   ;
symbols  ;
locks    jamie:1.2; strict;
comment  @% @;


1.2
date     94.03.09.13.22.04;  author jamie;  state Exp;
branches ;
next     1.1;

1.1
date     94.03.09.13.16.17;  author jamie;  state Exp;
branches ;
next     ;


desc
@initial checkin
@


1.2
log
@ changes for html by sqpr
@
text
@\chapter{CERNLIB rules}
The purpose of the rules described below is to improve
the quality of the CERNLIB software whilst reducing
the support effort.

\section{Submission of material for installation}

Material should preferably be submitted in one of the
following formats:
\begin{itemize}
\item
{\bf PATCHY} {\it car} format.
\item
{\bf CMZ} binary file.
\item
A flat file containing Fortran or C.
\item
A {\it tar} file containing a automatic build procedure,
e.g. a makefile.
\end{itemize}

The CERN Program Library team will document a set of
{\bf PATCHY/CMZ} flags and {\it cpp} tags which
should be used by developers. 

If, for historical or other reasons, the standard flags
cannot be used, an interface should be provided to ease
the installation process.

The CERN Program Library team will provide a tool that
will enable developers to request the installation of
one or more packages in the {\bf DEV} area.

The log files from such installations will be written
into {\bf /afs}.

A brief summary of the installation request will be
returned by mail to the requestor.

The CERN Program Library team will provide a tool that
will allow developers (and installers) to monitor the
progress of the installation and see, in tabular form,
what is installed in the {\bf DEV}, {\bf NEW} and {\bf PRO}
areas on the various platforms.

\section{Movement of packages into the {\bf NEW} area}

Packages may be moved from the {\bf DEV} to {\bf NEW}
area provided that a few basic criteria are met.

\begin{itemize}
\item
The package(s) compile(s) on all {\it reference platforms}.
\item
The appropriate, automatic, tests are passed. 
\item
A {\bf README} file is provided describing the important
changes.
\item
The CERN Program Library team reserves the right to add
additional criteria in the light of experience.
\item
Packages will be moved on the reference platforms from {\bf DEV} to {\bf NEW}
on a regular basis, typically overnight.
\item
The {\bf NEW} area on the reference server, currently {\bf asis01.cern.ch},
will be updated from the reference platforms following checking of the
installation logs and a posting of new features (e.g. the {\bf README} file)
to the {\bf HEPLIB} distribution list.
\end{itemize}

\section{Movement of packages from {\bf NEW} to {\bf PRO}}

Packages will normally only move into the {\bf PRO} area
when a {\tt Program Library Release} is performed.

Any new features relative to the previous release should 
be documented.

Certain packages, such as event generators, which are not
maintained by the CN/ASD group, may move into {\bf PRO}
at the discretion of the CERN Program Librarian.

Routines that are in the {\bf PRO} area should not generate
any compilation warnings.

Testing of new releases should be performed both by the CERN
Program Library team (the standard tests) and the developers
(new features).

New or updated test procedures should be given to the CERN Program Library
team as appropriate.

\section{Bug fixes to {\bf PRO}}

Bug fixes to {\bf PRO} will be made using {\bf PATCHY}
{\it cradles}.

The correction cradles must be relative to the current {\bf PRO}
version.

A test program which shows the effect of the bug (and fix)
is to be provided.

A {\bf README} file is to be provided.

Bug fixes will only be made if there is no reasonable
workaround.

\section{Release schedule}

There shall normally be no less than two releases per calendar
year and no more than four.

The approximate release date shall be announced (to HEPLIB
and in the CERN news groups) at least {\bf two months} in advance.

The approximate content shall be discussed and agreed at
least {\bf one month} in advance.

The exact content shall be discussed and agreed at least
{\bf two weeks} in advance.

The {\it final} versions of the various packages should be
made available to the CERN Program Library team to permit
installation in the public {\bf NEW} area together
with an appropriate announcement in the HEPLIB news group
at least {\bf one week} prior to the announced release date.

In the case of minor last minute corrections uncovered
during user testing, the final code
should be delivered at least {\bf one working day} prior to
the release.

In the event that such a deadline cannot be met, the
CERN Program Librarian may decide to delay the release
or to revert to a previous version of the package.

\section{Documentation}

Packages or routines must in all cases be documented.

The documentation should preferably be marked up in
\LaTeX, using the {\it cernman} style.

Should this not be the case, a postscript file should
be provided.

Whereever possible, the documentation should be made
available online, using the {\it World Wide Web}.

\section{The reference environment}

The reference environment shall be defined by the
so-called {\it reference platforms} installed in
the CERN Computer Centre.

These platforms will define things such as the
{\it compiler release level}, {\it operating system level},
versions and revision levels of various products etc.,
that are used to generate the CERN Program Library.

The Program Library source and binaries will be made
available via a reference server, currently {\bf asis01.cern.ch}.

Certain services in the CERN Computer Centre may decide
to install private copies of the CERN Program Library (e.g.
PARC, Shift, VXCERN).

These copies should in no way be considered to be the reference
versions.

The CERN Program Library office will attempt to announce changes
in the reference environment to HEPLIB at least 2 months in
advance.

\section{Support of various platforms}

The supported platforms shall be defined by the {\it reference platforms}.

The CERN Program Library may decide to subcontract support for
various operating systems or packages to outside institutes.

Platforms that are not in the reference environment nor subject
to an agreement with an outside institute will be supported
on a best-effort basis. Typically, this involves incorporating
feedback from outside users who have installed the library
on the appropriate platform (e.g. DESY for MVS).

\section{Submission of ready-built packages}

The CERN Program Librarian reserves the right to accept
ready-built packages for redistribution. In such cases
the author is responsible for providing a {\it tar} file
containing ready-built libraries and/or executables
for all packages that they are prepared to support.
@


1.1
log
@Initial revision
@
text
@d144 1
a144 1
\LaTeX{}, using the {\it cernman} style.
@

head     1.1;
branch   ;
access   ;
symbols  ;
locks    jamie:1.1; strict;
comment  @% @;


1.1
date     94.03.09.13.15.14;  author jamie;  state Exp;
branches ;
next     ;


desc
@initial checkin
@



1.1
log
@Initial revision
@
text
@\chapter{Adding a new package to CERNLIB}

The following information is normally only required by members
of the CERN Program Library team. 

To add a new package to CERNLIB, the following steps must be
performed.

\section{Unix systems}

\section{VMS systems}

The file {\bf CERN\_ROOT:[MGR]MAKE.COM} must be modified to add
the appropriate entries.

\subsection{Adding a new stand-alone library}

This is normally required when a new version of a Monte-Carlo
generator is released. All that is required is that the appropriate
source file (.CAR) and cradle (.CRA) are installed in the /cern/new/src/car
area.

\subsection{Adding a new CERN module}

A new CERN module is added by updating the entry
{\bf l\_cernpgm}, as shown below.

\begin{XMPt}{Updating the list of CERN modules}

$! Initial configuration
$!
$ l\_cernpgm ="SYSREQ  ,FATMEN  ,ZFTP    ,ZSERV   ,PAWSERV ,VAXTAP  ,"+ -
             "FLOP    ,TREE    ,CERNLIB ,FCASPLIT,XBANNER ,WYLBUR  ,"+ -
             "HIGZCONV,F2H     ,FCONV   "+ -
             l\_packpgm+l\_products

$! With ASTUCE added
$!
$ l\_cernpgm ="SYSREQ  ,FATMEN  ,ZFTP    ,ZSERV   ,PAWSERV ,VAXTAP  ,"+ -
             "FLOP    ,TREE    ,CERNLIB ,FCASPLIT,XBANNER ,WYLBUR  ,"+ -
             "HIGZCONV,F2H     ,FCONV   ,ASTUCE  "+ -
             l\_packpgm+l\_products

\end{XMPt}

Finally, the appropriate cradle (ASTUCE.CRA) is added to /cern/new/src/car.

\subsection{Adding a new {\it user} module}

A new user module is added in a similar manner, except that the
list {\bf l\_userpgm} is updated (and the appropriate cradle
added to /cern/new/src/car).

\subsection{Adding a new module to an existing {\it set}}

Let us take the example of the {\bf HEPDB} modules. These
are defined by the entry {\bf hepdbset}. 

\begin{XMPt}{Initial definition of {\bf hepdbset}}

$ l\_hepdbset="CDSERV  ,HEPDB   "

\end{XMPt}

The above definition will cause the modules {\bf CDSERV} (the HEPDB
server) and {\bf HEPDB} (the interactive interface) to be built.
We now wish to add two new modules: {\bf CDMAKE}, to create new
database files, and {\bf CDMOVE}, the module responsibile for
distribution of journal files between different servers.

This is done as follows:

\begin{enumerate}
\item
Update the definition of {\bf hepdbset}.
\item
Add the appropriate {\it cradles} to the {\bf /cern/new/src/car} area.
\end{enumerate}

The definition of {\bf hepdbset} is now as follows:

\begin{XMPt}{New definition of {\bf hepdbset}}

$ l\_hepdbset="CDSERV  ,HEPDB   ,CDMOVE  ,CDMAKE  "

\end{XMPt}

\subsection{Adding a new package to {\bf PACKLIB}}

If we suppose that the initial definition of PACKLIB 
is as follows:

\begin{XMPt}{Initial definition of PACKLIB}

$ l_packlib ="CSPACK  ,EPIO    ,FATLIB  ,FFREAD  ,HBOOK   ,KAPACK  ,"+ -
             "KUIP    ,MINUIT  ,ZBOOK   ,ZEBRA   ,CDLIB   "

\end{XMPt}

we can add a new component simply by updating this list
and adding the appropriate cradle.

\section{VM/CMS systems}

On VM/CMS systems, we must modify the file {\bf MAKELIB NAMES}
as appropriate.

\subsection{Adding a new module to an existing {\it set}}

In the following example we wish to add two new modules
to the set {\bf HEPDBSET}. This is initially defined
as shown below.

\begin{XMPt}{Initial definition of HEPDBSET}

* CERNPGM subentries      ----------------------------------------------

:NICK.MAKE_FATSET
:JOB.FATSET    :BOPT.TIME  0:00 JOBID FATSET
               :QSUB.
:FROM.FATMEN FATNEW FATSRV FATSEND

:NICK.MAKE_HEPDBSET
:JOB.HEPDBSET  :BOPT.TIME  0:00 JOBID HEPDBSET
               :QSUB.
:FROM.CDSERV HEPDB

:NICK.MAKE_RZCONV
:JOB.RZCONV    :BOPT.TIME  0:00 JOBID RZCONV
               :QSUB.
:FROM.RTOX RTOA RFRX RFRA

\end{XMPt}

We now add the modules {\bf CDMAKE} and {\bf CDMOVE}, which gives
us the following entry.

\begin{XMPt}{New definition of HEPDBSET}

* CERNPGM subentries      ----------------------------------------------

:NICK.MAKE_FATSET
:JOB.FATSET    :BOPT.TIME  0:00 JOBID FATSET
               :QSUB.
:FROM.FATMEN FATNEW FATSRV FATSEND

:NICK.MAKE_HEPDBSET
:JOB.HEPDBSET  :BOPT.TIME  0:00 JOBID HEPDBSET
               :QSUB.
:FROM.CDSERV HEPDB CDMOVE CDMAKE

:NICK.MAKE_RZCONV
:JOB.RZCONV    :BOPT.TIME  0:00 JOBID RZCONV
               :QSUB.
:FROM.RTOX RTOA RFRX RFRA

\end{XMPt}

In addition, we must add entries for {\bf CDMOVE} and {\bf CDMAKE}
as shown below.

\begin{XMPt}{Build definitions for CDMAKE and CDMOVE}

:NICK.MAKE_CDMAKE
:JOB.CDMAKE    :BOPT.TIME  1:00 JOBID CDMAKE
               :QSUB.
:HASM.(BATCH   :FORTVS.(TERM TRMFLG FLAG(I)
:CERNLIB.PACKLIB ( LINK
:LOAD.CDMAKE  ( NOAUTO CLEAR
:INCLUDE.ENDMODU       :GENMOD.CDMAKE  ( TO ENDMODU RMODE ANY AMODE ANY

:NICK.MAKE_CDMOVE
:JOB.CDMOVE    :BOPT.TIME  1:00 JOBID CDMOVE
               :QSUB.
:HASM.(BATCH   :FORTVS.(TERM TRMFLG FLAG(I)
:CERNLIB.PACKLIB ( LINK
:LOAD.CDMOVE  ( NOAUTO CLEAR
:INCLUDE.ENDMODU       :GENMOD.CDMOVE  ( TO ENDMODU RMODE ANY AMODE ANY

\end{XMPt}
@

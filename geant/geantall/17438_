%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%                                                                 %
%  Last Mod. 8 June 1993  17:20  MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentstyle[11pt,fleqn,epsfig,bibunits]{cernman}
% 14 June 1993 
% 12 May 1992
\setlength{\textwidth}{165mm}
\setlength{\evensidemargin}{23mm}
\setlength{\oddsidemargin}{23mm}
\setlength{\marginparwidth}{25mm}
\setlength{\marginparsep}{25mm}
\setlength{\marginparpush}{25mm}
\setlength{\topmargin}{10mm}
\setlength{\headheight}{0mm}
\setlength{\headsep}{0mm}
\setlength{\textheight}{51\baselineskip}
\newlength{\LSubmit}\settowidth{\LSubmit}{\bf Submitted}% Length for Submitted box
\newcounter{Totalpage}\setcounter{Totalpage}{1}
\newcommand{\Cernhead}[1]{%
\newpage\parindent0pt%                               Start a new page with parindent 0pt
\setcounter{page}{1}%                                Reset page counter
\setcounter{section}{1}%                             Reset section counter
\setcounter{equation}{0}%                            Reset equation counter
\setcounter{footnote}{0}%                            Reset footnote counter
\begin{center}\begin{tabular*}{\textwidth}%          Define the top line with the left box
{@{}l@{\tabskip\fill}cr@{}}%                         the centered title and the right box
\fbox{\rule[-1ex]{0mm}{3.4ex}\bf\ \Vers\ }%          The actual left Box (Version \Vers)
&\bf\Title&%                                         The actual Title \Title centered
\fbox{\rule[-1ex]{0mm}{3.4ex}\bf\ \Rtnr\ }\\[3mm] %       The actual right Box (Routine id. \Rtnr)
\end{tabular*}\\ %                                   vertical space
\begin{tabular*}{\textwidth}%                        Define the second table
{@{}p{\LSubmit}@{\bf: }l@{\tabskip\fill}r@{}}%       Template
\bf Author(s)&\Auth&{\bf Library: }\Libr\\ %         Fill in authors and library
\bf Submitter&\Orig&{\bf Submitted: }\Subm\\ %       Original submitter and submission date
\bf Language&\Lang&{\bf Revised: }\Revi\\[3mm] %          Programming language and revision date
\end{tabular*}\\ %                                   End of table
{\large\bf#1}\end{center}%                           Finally center the title of the routine
\def\Revi{\hphantom{00.00.00}}%                        Default value of Revision date is blank
}% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        End of Cernhead
 
\immediate\newwrite\@maincrn
\immediate\openout\@maincrn=\jobname.crn%            Open file for cern specific info

\def\Authors#1{\xdef\Auth{#1}}\Authors{ }%  Define Author macro and initilize to blank
\def\Author#1{\xdef\Auth{#1}}\Author{ }%              Define Author macro and initilize to blank
\def\Documentation#1{\xdef\Docp{#1}}\Documentation{ }%              Define Author macro and initilize to blank
\def\Keywords{\bgroup\@sanitize\@Keywords}
\def\@Keywords#1{\immediate\write\@maincrn{Keywords: #1}\egroup}%  Keywords Write Routine Identifier
\def\Language#1{\xdef\Lang{#1}}\Language{ }%Define computer Language
\def\Library#1{\xdef\Libr{#1}}\Library{ }%  Define Library where routine can be found
\def\Origin#1{\xdef\Orig{#1}}\Origin{ }%    Define Origin macro and initialize to blank
\def\Revised#1{\edef\@temp{#1}\ifx\@temp\empty\else\xdef\Revi{#1}\fi}%
                \def\Revi{\hphantom{00.00.00}}%                        Initialize Revised to blank
\def\Revision#1{\xdef\Revp{#1}}\Revision{ }% Initialize Revision to blank
\def\Routid#1{\xdef\Rtnr{#1}
\immediate\write\@maincrn{Routine: \Rtnr}% Write Routine Identifier
}
\Routid{ }%    Define Routid macro and initilize to blank
\def\Submitter#1{\xdef\Orig{#1}}%           Define Origin macro and initialize to blank
\def\Submitted#1{\xdef\Subm{#1}}%           Define Submitted macro
     \def\Subm{\hphantom{00.00.00}}%                      Initialize Submitter to blank
\def\Version#1{\def\Vers{#1}%
\immediate\write\@maincrn{Version: \Vers}% Write Routine Identifier
}\Version{ }%  Define Version macro and initilize to blank
\def\Accuracy{\par\medskip{\bf Accuracy:}\par\medskip}%     Accuracy
\def\Errorh{\par\medskip{\bf Error handling:}\par\medskip}% Error handling
\def\Examples{\par\medskip{\bf Examples:}\par\medskip}%     Examples
\def\Longwr{\par\medskip{\bf Long Write-up:}\par\medskip}%  Long   Writeup
\def\Method{\par\medskip{\bf Method:}\par\medskip}%         Method
\def\Notes{\par\medskip{\bf Notes:}\par\medskip}%           Notes
\def\Refer{\par\medskip{\bf References:}\par\medskip}%      References
\def\Restrict{\par\medskip{\bf Restrictions:}\par\medskip}% Restrictions
\def\Source{\par\medskip{\bf Source:}\par\medskip}%         Source
\def\Structure{\par\medskip{\bf Structure:}\par\medskip}%   Structure
\def\Timing{\par\medskip{\bf Timing:}\par\medskip}%         Timing
\def\Usage{\par\medskip{\bf Usage:}\par\medskip}%           Usage
 
\newcommand{\Sectitle}[1]{%
\immediate\write\@maincrn{Title: \string\end{DLtt}}%
\immediate\write\@maincrn{Title: \string\section*{#1}}%
\immediate\write\@maincrn{Title: \string\begin{DLtt}{12345678901}}
}% End of Sectitle
 
\def\ps@plain{\let\@mkboth\markboth%                 Define page-numbering style
  \def\@oddfoot{\rm{\footnotesize\number\c@Totalpage}\hfil\Rtnr\ -- \thepage\hfil
    \protect\addtocounter{Totalpage}{1}}%              footer information
  \def\@evenfoot{\rm\hfil\Rtnr\ -- \thepage\hfil\footnotesize\number\c@Totalpage
    \protect\addtocounter{Totalpage}{1}}%              footer information
  \def\@oddhead{}\def\@evenhead{}}%                    Empty header
\pagestyle{plain}%                                   Pagestyle plain

\renewcommand{\LARGE}{\large}%                       Redefine fontsize LARGE to large
\renewcommand{\Large}{\large}%                       Redefine fontsize Large to large

\def\thesection       {\arabic{section}}
\def\thesubsection    {\thesection.\arabic{subsection}}
\def\thesubsubsection {\thesubsection.\arabic{subsubsection}}
\def\theparagraph     {\thesubsubsection.\arabic{paragraph}}
\def\thesubparagraph  {\theparagraph.\arabic{subparagraph}}
\def\theequation{\arabic{equation}}
\def\thefigure{\@arabic\c@figure}
 
%%%% From latex.tex
\newcount\@@Totalpage
\def\@include#1 {\clearpage\@@Totalpage\c@Totalpage%\advance\@@Totalpage by 1
\@input{#1.tex}\clearpage
}
\def\@wrindex#1{\let\thepage\relax
   \edef\@tempa{\write\@indexfile{\string
      \indexentry{#1}{\number\c@Totalpage}}}\expandafter\endgroup\@tempa
   \if@nobreak \ifvmode\nobreak\fi\fi\@esphack}
\def\enddocument{\@checkend{document}\clearpage
\immediate\closeout\@mainaux
\immediate\closeout\@maincrn
\deadcycles\z@\@@end}


\newcommand{\Makehead}[1]{%
\newpage\parindent0pt%                               Start a new page with parindent 0pt
\setcounter{page}{1}%                                Reset page counter
\setcounter{section}{0}%                             Reset section counter
\setcounter{equation}{0}%                            Reset equation counter
\setcounter{footnote}{0}%                            Reset footnote counter
\immediate\write\@maincrn{Title: \string\item[\Rtnr] #1}%
\immediate\write\@maincrn{Page: \number\@@Totalpage}%Write page number
\begin{center}\begin{tabular*}{\textwidth}%          Define the top line with the left box
{@{}l@{\tabskip\fill}cr@{}}%                         the centered title and the right box
\fbox{\rule[-1ex]{0mm}{3.4ex}\bf\ \Vers\ }%          The actual left Box (Version \Vers)
&\bf\Title&%                                         The actual Title \Title centered
\fbox{\rule[-1ex]{0mm}{3.4ex}\bf\ \Rtnr\ }\\ %       The actual right Box (Routine id. \Rtnr)
\rule{0mm}{4mm}%                                     Invisible rule of 5mm to generate
\end{tabular*}\\ % 
{\small%                                  vertical space
\begin{tabular*}{\textwidth}%                        Define the second table
{@{}l!{\bf: }l@{\tabskip\fill}r@{}}%       Template
\bf Origin&\Orig&{\bf Submitted: }\Subm\\[-.5mm] %       Fill in authors and submision date
\bf Revision&\Revp&{\bf Revised: }\Revi\\[-.5mm] %            Original submitter and revision date
\bf Documentation&\Docp\\ %            Original submitter and revision date
\end{tabular*}\\ %                                   End of table
\def\Revi{\hphantom{00.00.0000}}%                        Default value of Revision date is blank
}% end of \small
\rule{0mm}{3mm}\\ %                                  Invisible rule to generate 5mm
{\large\bf#1}\end{center}%                           Finally center the title of the routine
\Documentation{ }%
\Revision{ }%
\Origin{ }%
}% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        End of Makehead
\def\Revi{{\small\hphantom{00.00.0000}}}%                        Default value of Revision date is blank
\newcommand{\FComm}[2]{\par\vspace*{3mm}
   \framebox[.98\textwidth]{\rule[-1ex]{0mm}{3ex}{\tt+SEQ /#1/\quad#2}}
   \par\vspace*{3mm}\index{/#1/@{\protect\tt/#1/}|Sidef}}
\let\FCind\Cind

\newcommand{\UkeV}{\mbox{kev}}
\newcommand{\UMeV}{\mbox{Mev}}
\newcommand{\UGeV}{\mbox{Gev}}
\newcommand{\UTeV}{\mbox{Tev}}
\newcommand{\Pe}{\mbox{$\mathrm{e}$}}
\newcommand{\Pme}{\mbox{$m_{\mathrm{e}}$}}
\newcommand{\Pem}{\mbox{$\mathrm{e}^-$}}
\newcommand{\Pep}{\mbox{$\mathrm{e}^+$}}
\newcommand{\lambdar}{\lambda\kern-.6em\raise.6ex\hbox{$-$}}
\newcolumntype{C}{>{\displaystyle}c}
\newcolumntype{L}{>{\displaystyle}l}
\newcolumntype{R}{>{\displaystyle}r}
 
\newcommand{\Title}{GEANT User's Guide}%           Title for document
\psfigdriver{DVIPS}
\makeindex
\romanfont{times}
\PScommands% Initialize PS boxes
\newmathalphabet*{\mathtt}{cmtt}{m}{n}
\newmathalphabet*{\mathbf}{cmr}{b}{n}
\def\condbreak#1{}
\begin{document}
%  ==================== Front material ============================
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%   GEANT -- Short write ups -- LaTeX Source                      %
%                                                                 %
%   Front Material: Title page,                                   %
%                   Copyright Notice                              %
%                   Preliminary Remarks                           %
%                   Table of Contents                             %
%   EPS file      : cern15.eps, cnastit.eps                       %
%                                                                 %
%   Editor: Michel Goossens / CN-AS                               %
%   Last Mod.: 11 June 1993 10:30 mg                              %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Tile page                                                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\notHTML{\def\Ptitle#1{\special{ps: /Printstring (#1) def}
                       \epsfbox{eps/cnastit.eps}}}
\HTML{\def\Ptitle#1{{\Large#1}}}
 
\begin{titlepage}
\HTML{\PRE}%
\notHTML{\vspace*{-23mm}}%
\notHTML{\mbox{\epsfig{file=/usr/local/lib/tex/ps/cern15.eps,height=30mm}}}%
\HTML{\mbox{}}%
\hfill
\raise8mm\hbox{\Large\bf CERN Program Library Long Writeup W5013}
\hfill\mbox{}
\begin{center}
\mbox{}\\[6mm]
\HTML{<P>\\}
\mbox{\Ptitle{GEANT}}\\[3cm]
\HTML{<P>\\}
{\Huge Detector Description and}\\[2cm]
{\Huge Simulation Tool}\\[4cm]
\HTML{<P>\\}
%{\LARGE Version 3.16 --- June 1993}\\[3cm]
\HTML{<P>\\}
{\Large Application Software Group}\\[6mm]
{\Large Computing and Networks Division}\\[2cm]
\end{center}
\notHTML{\vfill}%
\HTML{<P>}\begin{center}\Large CERN Geneva, Switzerland\end{center}
\HTML{\ePRE}%
\end{titlepage}

\Filename{H1Preface}
\HTML{<H1>Preface</H1>}

\Filename{H2Copyright}
\HTML{<H2>Copyright page</H2>}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Copyright  page                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\HTML{\PRE}
\NODOC{\thispagestyle{empty}}
\framebox[\textwidth][t]{\hfill\begin{minipage}{0.96\textwidth}%
\NODOC{\vspace*{3mm}}
\begin{center}Copyright Notice\end{center}
\NODOC{\parskip\baselineskip}

\textbf{GEANT -- Detector Description and Simulation Tool}
 
\copyright{} Copyright CERN, Geneva 1993
 
Copyright and any other appropriate legal protection of these
computer programs and associated documentation reserved in all
countries of the world.
 
These programs or documentation may not be reproduced by any
method without prior written consent of the Director-General
of CERN or his delegate.
 
Permission for the usage of any programs described herein is
granted apriori to those scientific institutes associated with
the CERN experimental program or with whom CERN has concluded
a scientific collaboration agreement.
 
CERN welcomes comments concerning the Geant code
but undertakes no obligation for the maintenance of the programs,
nor responsibility for their correctness, and accepts no liability
whatsoever resulting from the use of its programs.
 
Requests for information should be addressed to:
\vspace*{-.5\baselineskip}
\begin{center}
\tt\begin{tabular}{l}
CERN Program Library Office              \\
CERN-CN Division                         \\
CH-1211 Geneva 23                        \\
Switzerland                              \\
Tel.      +41 22 767 4951                \\
Fax.      +41 22 767 7155                \\
Bitnet:   CERNLIB@CERNVM                 \\
DECnet:   VXCERN::CERNLIB (node 22.190)  \\
Internet: CERNLIB@CERNVM.CERN.CH
\end{tabular}
\end{center}
\vspace*{2mm}
\end{minipage}\hfill}%end of minipage in framebox
\NODOC{\vspace{6mm}}
\HTML{<P>}
 
{\bf Trademark notice: All trademarks appearing in this guide are acknowledged as such.}
\NODOC{\vfill}
\HTML{<P>}

\begin{tabular}{l@{\quad}l@{\quad}>{\small\tt}l}
%PERSONS ARE LISTED HERE & THEN THE NAMES ARE HER & & \kill
{\em Contact Persons\/}:       & CN/ASD/SImulation section & (SGIANI\atsign CERNVM.CERN.CH)\\[1mm]
 & & (RAVNDAL\atsign CERNVM.CERN.CH) \\[1cm]
{\em Technical Consultant\/}: & Michel Goossens /CN    & (GOOSSENS\atsign CERNVM.CERN.CH)\\[1cm]
\textem{Edition -- March 1994}
\end{tabular}
\HTML{\ePRE}
\newpage
 

%  ==================== Body of text ==============================
\pagenumbering{arabic}
\setcounter{page}{1}
 
%%%%%%   Catalog of Program packages and entries%%%%
 
\def\Rtnr{Catalog}%Dummy routine name to appear at bottom of page
% 24 Mar 1994 mg
\chapter{Catalog of Geant sections}
\begin{DLtt}{12345678}
\item[AAAA001] Foreword
\item[AAAA002] Introduction to the User's Guide
\item[BASE001] Introduction to GEANT
\item[BASE010] Simplified Program Flow Chart
\item[BASE020] The Data Structures and their Relationship
\item[BASE040] Summary of Data Records
\item[BASE090] The Reference Systems and Physical Units
\item[BASE100] Examples of MAIN Program and User Initialisation
\item[BASE110] The System Initialisation routines
\item[BASE200] Steering routines for Event Processing
\item[BASE280] Storing and retrieving {\tt JRUNG} and {\tt JHEAD} information
\item[BASE299] The banks \Lit{JRUNG} and \Lit{JHEAD}
\item[BASE300] Example of User Termination and related routines
\item[BASE400] Debugging facilities
\item[BASE410] Utility Routines
\item[BASE420] The random number generator
\item[CONS001] Introduction to the section \Lit{CONS}
\item[CONS100] Standard Material definition and related routines
\item[CONS101] Fetch Material Cross-sections
\item[CONS110] Mixtures and Compounds
\item[CONS199] The Material data structure {\tt JMATE}
\item[CONS200] Tracking Medium Parameters and related routines
\item[CONS210] Special Tracking Parameters
\item[CONS300] Standard Particle definition and related routines
\item[CONS310] Branching Ratios and Particle Decay Modes
\item[DRAW001] Introduction to the Drawing package
\item[DRAW010] The Ray-tracing package
\item[DRAW110] Drawing a Volume -- Case 1
\item[DRAW115] Drawing a Volume Projection view -- Case 2
\item[DRAW120] Draw a volume cut view
\item[DRAW130] Draw Particle Trajectories
\item[DRAW140] Drawing Track Hits in Sensitive Detectors
\item[DRAW210] Drawing the Geometrical Tree
\item[DRAW220] Drawing Volume Specifications
\item[DRAW300] Handling View banks
\item[DRAW399] The View data structure {\tt JDRAW}
\item[DRAW400] Other routines of the Drawing package
\item[GEOM001] Introduction to the Geometry package
\item[GEOM010] Tracking inside volumes and optimisation
\item[GEOM020] ``{\tt MANY}'' Volumes and boolean operations on volumes
\item[GEOM050] The System Shapes
\item[GEOM100] Creation of a Volume
\item[GEOM110] Positioning a Volume inside its Mother - Case 1
\item[GEOM120] Positioning a Volume inside its Mother - Case 2
\item[GEOM130] Division of a Volume into a given Number of Cells
\item[GEOM140] Division of a Volume into Cells of a given Size
\item[GEOM150] Division of a Volume - General case
\item[GEOM199] The Volume data structure \Lit{JVOLUM}
\item[GEOM200] Handling Rotation Matrices
\item[GEOM299] The Rotation Matrix data structure \Lit{JROTM}
\item[GEOM300] Finding Volumes which correspond to given Space Point
\item[GEOM310] Finding Distance to Next Boundary
\item[GEOM320] Reference System Transformations
\item[GEOM400] Pseudo Division of a Mother Volume
\item[GEOM410] Ordering the Contents of a Volume
\item[GEOM500] Volume Attributes
\item[GEOM600] User Initialisation of the common block \Lit{/GCVOLU/}
\item[GEOM700] Medium Search Statistics
\item[GEOM900] End of Geometry Initialisation
\item[GEOM910] GEANT-SET interface CADINT 1.20
\item[HITS001] Introduction to the Detector Response package
\item[HITS100] Handling Sensitive DETector basic parameters
\item[HITS105] Handling Detector Aliases 
\item[HITS110] Handling Sensitive DETector Hit parameters
\item[HITS120] Handling Sensitive DETector Digitisation parameters
\item[HITS130] Storing and Retrieving User Detector parameters
\item[HITS199] The Detector Set data structure \Lit{JSET}
\item[HITS200] Routines to Communicate with the \Lit{JHITS} data structure
\item[HITS299] The Hit data structure \Lit{JHITS}
\item[HITS300] Routines to Communicate with the data structure \Lit{JDIGI}
\item[HITS399] The Digitisation data structure \Lit{JDIGI}
\item[HITS400] Intersection of a Track with a Cylinder or a Plane
\item[HITS500] Digitisation of Drift- or MWP- Chambers
\item[HITS510] Digitisation of Drift Chambers
\item[IOPA001] The I/O service routines
\item[IOPA200]  Open/Close FZ Zebra logical Units
\item[IOPA300] Read or Write Data Structures
\item[IOPA400] Open/Close RZ Zebra logical Units
\item[IOPA500] Read/Write RZ Data Structures
\item[KINE001] Introduction to the section KINE
\item[KINE100] Storing/Retrieving Vertex and Track parameters
\item[KINE199] The Kinematics data structures \Lit{JVERTX} and \Lit{JKINE}
\item[KINE200] GEANT Interface to the Lund Monte Carlo
\item[KINE210] $\tau^+\tau^-$ Generation and Decay
\item[PHYS001] Introduction to the section PHYS
\item[PHYS010] Compute the Occurrence of a Process
\item[PHYS100] Steering routine for Cross-section and Energy loss calculation
\item[PHYS210] Total cross-section for $e^+ e^-$-pair production by photons
\item[PHYS211] Simulation of $e^+ e^-$-pair production by photons
\item[PHYS220] Total cross-section for Compton scattering
\item[PHYS221] Simulation of Compton scattering
\item[PHYS230] Total cross-section for photoelectric effect
\item[PHYS231] Simulation of photoelectric effect
\item[PHYS240] Photon-induced fission on heavy materials
\item[Phys250] Total cross-section for Rayleigh scattering
\item[PHYS251] Simulation of Rayleigh scattering
\item[PHYS260] {\accent 20 C}erenkov photons
\item[PHYS320] Gaussian multiple scattering
\item[PHYS325] Moli\`ere Scattering
\item[PHYS328] Plural scattering
\item[PHYS330] Ionization processes induced by $e^{\pm}$
\item[PHYS331] Simulation of the delta-ray production
\item[PHYS332] Simulation of energy loss straggling
\item[PHYS333] Energy threshold for delta-ray production
\item[PHYS334] Models for energy loss fluctuations in thin layers
\item[PHYS337] Birks' saturation law
\item[PHYS340] Total cross-section and energy loss for Bremsstrahlung by $e^-e^+$
\item[PHYS341] Simulation of discrete Bremsstrahlung by electrons
\item[PHYS350] Total cross-section for $e^+e^-$ annihilation
\item[PHYS351] Simulation of $e^+e^-$ annihilation
\item[PHYS360] Synchrotron radiation
\item[PHYS400] Simulation of particle decays in flight
\item[PHYS410] Lorentz transformation and rotation
\item[PHYS430] Ionization processes induced by heavy particles
\item[PHYS431] Ionisation processes for heavy ions
\item[PHYS440] Total cross-section and energy loss for Bremsstrahlung by Muons
\item[PHYS441] Simulation of discrete Bremsstrahlung by muons
\item[PHYS450] Total cross-section and energy loss for $e^+e^-$-pair production by muons
\item[PHYS451] Simulation of $e^+e^-$-pair production by muons
\item[PHYS460] Muon-nucleus interactions
\item[PHYS510] The GEANT/GHEISHA Interface
\item[PHYS520] The GEANT/FLUKA Interface
\item[PHYS530] The GEANT/MICAP interface
\item[TRAK001] Introduction to the Tracking package
\item[TRAK110] Steering routine to Track one Event
\item[TRAK120] Steering routine to Track one Particle
\item[TRAK130] Tracking one Particle through a physical Volume
\item[TRAK200] The Tracking routines
\item[TRAK300] Storing Shower Tracks in the Stack
\item[TRAK310] Altering the order of tracking secondary particles
\item[TRAK399] The Shower Stack data structure \Lit{JSTAK}
\item[TRAK400] Track Space Points
\item[TRAK499] The Space Point data structure \Lit{JXYZ}
\item[TRAK500] Tracking routines in a Magnetic Field
\item[XINT001] The interactive version of GEANT
\item[XINT002] Introduction to the Interactive version of GEANT
\item[ZZZZ010] List of COMMON Blocks
\item[ZZZZ999] Index of Documented GEANT routines
\end{DLtt}

 
\let\LARGE\large
\let\Large\large
\let\DL\DLtt 

% Here come the different files to be included
 
%%     AAAA part     %%
 
\begin{bibunit}[unsrt]
\renewcommand{\bibname}{AAAA Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%       GEANTR manual in LaTeX form                               %
%                                                                 %
%  Version 1.00                                                   %
%                                                                 %
%  Last Mod. 12 June 1993 1900   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\Authors{GEANT team}      \Origin{all contributors}              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Version{Geant 3.21}\Routid{AAAA001}
\Submitted{01.10.84}        \Revised{20.04.94}
\Makehead{Foreword}
As the scale and complexity of High Energy Physics experiments
increase, simulation studies require more and more care
and become essential to

\begin{itemize}
\item design and optimise the detectors,
\item develop and test the reconstruction and analysis programs, and 
\item interpret the experimental data.
\end{itemize}

{\tt GEANT} is a system of detector description and simulation tools that
help physicists in such studies.
The {\tt GEANT} system can be obtained from {\tt CERN} as six 
Patchy~\cite{bib-PATCHY}/CMZ~\cite{bib-CMZ} files:
{\tt GEANT}, {\tt GEANG}, {\tt GEANH}, {\tt GEANF}, {\tt GEANE} and {\tt GEANX}.
The program runs everywhere the CERN Program Library has been installed
\footnote{
At the moment of writing these are the systems on which the CERN Program
Library has been installed: VM/CMS-HPO-XA-ESA, SUN Sparc, Silicon Graphics,
CRAY Y-XMP, Apollo 3000 series, Apollo 10000, HP 400 series, HP 700 series,
IBM RS/6000, IBM AIX/370, VAX/VMS, Alliant, Dec Ultrix, NeXT,
IBM MVS-HPO-XA-ESA, Convex, MAC/MPW (partial implementation), Data General,
Gould, Meiko Computing Surface
T-800, Norsk Data.
}.
\par
The {\tt GEANT} and
{\tt GEANG} files contain most of the basic code. The {\tt GEANH} file
contains the code for the
hadronic showers simulation from the program {\tt GHEISHA}~\cite{bib-GHEI}.
The {\tt GEANF} file contains the source of the routines for hadronic
showers development from the 
{\tt FLUKA}~\cite{bib-FLUK,bib-FLU1,bib-FLU2,bib-FLU3,bib-FLU4,bib-FLU5,bib-FLU6}
program which is interfaced with {\tt GEANT} as an alternative to 
{\tt GHEISHA} to simulate hadronic cascades.
The {\tt GEANE}~\cite{bib-GEANE} file
contains a tracking package to be used, in the context of
event reconstruction, for trajectory estimation and error propagation.
The {\tt GEANX} file
contains
the main program for the interactive version of {\tt GEANT} (GXINT) and
a few examples of application
programs which may help users to get started with {\tt GEANT}.
\par
General information concerning {\tt GEANT}, for example
access to the source code, the list of problems and their
proposed corrections, the context of utilisation on the
CERN machines, the status of some application programs, the acquisition of
documentation, etc., are kept up to date through CERN news and
InterNet news group ({\tt cern.lgeant}) and an
electronic mailing list which is installed on the CERN IBM mainframe
(BITnet/EARN node CERNVM). The name of the list is LGEANT (see below how
to subscribe).
\par
The first version of {\tt GEANT} was written in 1974 as a bare
framework which initially emphasised tracking
of a few particles per event through relatively
simple detectors. The system has been developed
with some continuity over the years~\cite{bib-GEANT2}
\par
New versions may
differ from the previous ones.
Some of the modifications may lead to backward incompatibilities.
The user is therefore invited to read carefully the Patch {\tt HISTORY}
of the current {\tt GEANT} file where all changes are described in detail.
\par
The development and the maintenance of {\tt GEANT} are possible
only thanks to the devoted and continuous collaboration of
physicists around the world who use the program and contribute their
feedback to the authors and maintainers at CERN. It is of course
impossible
to mention all of them, and new names are added frequently to the
list of the contributors.
The {\tt GEANT} team wish to thank them all and expresses
its hope that they will continue to help us.
\par
{\tt GEANT} version 3 originated from an idea of Ren\'{e} Brun and Andy McPherson 
in 1982 during the development of the OPAL simulation program.
GEANT3 was based on the skeleton of {\tt GEANT} version 2 
code~\cite{bib-GEANT2}.
\par
In close collaboration with Ren\'{e} and Andy, Pietro Zanarini developed
the first versions of the graphics system as well as the early versions
of the interactive package initially based on {\tt ZCEDEX}, 
then upgraded to {\tt KUIP}.
\par
Glenn Patrick (RAL) implemented a first version of the electromagnetic 
processes. Tony Baroncelli (Roma) helped in interfacing {\tt GEANT} to his hadronic
shower package {\tt TATINA}. Federico Carminati contributed to the interface
with {\tt GHEISHA}, an hadronic shower package developed by Harn Fesefeldt (Aachen).
\par
Francis Bruyant and Michel Maire (LAPP) made substantial contributions 
to the geometry,
tracking and physics parts of {\tt GEANT} while adapting the system
to the L3 environment. Francis has been, for many years, an essential
collaborator, testing new ideas for the geometry and hits packages.
Michel, together with Elemer Nagy and Vincenzo Innocente, developed the 
{\tt GEANE} system.

\par
A very important contribution to {\tt GEANT} has been made by L\'{a}szl\'{o} 
Urb\'{a}n 
(KFKI Budapest) who has continuously improved the electromagnetic
physics package. Lazlo has spent a considerable amount of time in
reading the relevant papers in the literature and in making comparisons
with experimental results.

\par
Ren\'{e} Brun has coordinated the development and the maintenance of {\tt GEANT}
from 1982 until 1991 (versions 3.00 up to 3.14). Federico Carminati
coordinated the development of the versions 3.15 and 3.16 between 1991 and 1993.
Since January 1994, the responsability for {\tt GEANT} is in the hands of Simone
Giani.
Before assuming this responsability, Simone made substantial improvements
in the graphics and interactive packages. After he has enhanced the power
of the geometry package and the performance of the tracking for a new
version of {\tt GEANT}: 
in March 1994 the version 3.21 has been released and is the current version
of {\tt GEANT}.
\par
Many people contributed their
work or their experience. We have tried to acknowledge their names 
in the manual pages and we apologise for any omissions.

Special mention should be made here of
the following contributions:

S.Banerjee
(contribution to the tracking package),
R.Jones
(contribution to the 
simulation of electromagnetic processes),
K.Lassila-Perini
(interface with FLUKA and MICAP),
G.Lynch
(contribution to the multiple scattering algorithms),
E.Tchernyaev
(original code for hidden-line removal graphics).

\par
S. Ravndal did a complete revision and update of the full documentation
for the release
of {\tt GEANT} version 3.21.


Special thanks should go to the authors of the packages interfaced
with {\tt GEANT}, and in particular to Harn Fesefeldt ({\tt GHEISHA}) 
and Alfredo Ferrari ({\tt FLUKA} see later). Their
patience in explaining the internals of their code, their
experience and their 
collaborative and open attitude have been instrumental.

Another special thanks goes to Mike Metcalf, who helped to 
improve the English and the structure of the manual.

\par
Any reader who is not familiar with {\tt GEANT}
should first have a glance at the notes numbered 001 to 009 in each
section of this manual.

Despite our efforts, the documentation is still
incomplete and far from perfect. We accept full
responsibility for its present status.
 
Finally, we express our thanks to Michel Goossens for translating the 
SCRIPT/SGML source of the original {\tt GEANT} manual into \LaTeX.

\section{The GEANT-FLUKA interface}

Since version 3.15, {\tt GEANT} includes an interface with some
{\tt FLUKA}~\cite{bib-FLUK,bib-FLU1,bib-FLU2,bib-FLU3,bib-FLU4,bib-FLU5,bib-FLU6}
routines. This part has been updated and extended in subsequent releases.

{\tt FLUKA} is a standalone code with its own life. Only a few parts have been
included into {\tt GEANT}, namely the ones dealing with hadronic elastic and
inelastic interactions.

The implementation of {\tt FLUKA} routines in {\tt GEANT} does not include
any change, apart from interface ones and those agreed by the {\tt FLUKA}
authors. Whenever different options are available in {\tt FLUKA}, the one
suggested by the authors have been retained. Nevertheless the results
obtained with {\tt FLUKA} routines inside {\tt GEANT} could not be 
representative of the full {\tt FLUKA} performances, since they
generally depend on other parts which are {\tt GEANT} specific.

The routines made available for {\tt GEANT} have been extensively tested and are
reasonably robust. They usually do not represent the latest {\tt FLUKA}
developments, since the policy is to supply for {\tt GEANT} well tested
and reliable code rather than very recent developments with possibly better
physics but also still undetected errors.

It is important that {\tt GEANT} users are aware of the conditions at which
this code has been kindly made available:
\begin{itemize}
\item relevant authorship and references about 
{\tt FLUKA}~\cite{bib-FLUK,bib-FLU1,bib-FLU2,bib-FLU3,bib-FLU4,bib-FLU5,bib-FLU6}
should be clearly
indicated in any publication reporting results obtained with this code;
\item the {\tt FLUKA} authors reserve the right of publishing about 
the physical models
they developed and implemented inside {\tt FLUKA}, {\tt GEANT} users are not 
supposed to extract from the {\tt GEANT}-{\tt FLUKA} code the relevant
routines running them standalone for benchmarks;
\item more generally,
{\tt FLUKA} routines contained in the {\tt GEANF} file are supposed to be
included and used with {\tt GEANT} only: any other use must be authorised
by the {\tt FLUKA} authors.
\end{itemize}

 
\section{Documentation}
 
The main source of documentation on {\tt GEANT} is this manual. Users are
invited to notify any correction or suggestion to the authors.
 
A detailed description of the history of modifications to the {\tt GEANT} code
is contained in the \Lit{$VERSION} Patch in the {\tt GEANT} file.
 
{\tt GEANT} is part of the CERN Program Library, and problems or questions
about {\tt GEANT} should be directed to the Program Library Office (see next
section).
 
{\tt GEANT} problems can be submitted to
an InterNet discussion group {\tt cern.lgeant}.

A mailing list is maintained on CERN's central IBM machine (BITnet node
CERNVM) via the LISTSERV mechanism. LISTSERV acts as a rudimentary
conferencing system, which forwards the mail received to all subscribed
users and to the InterNet group {\tt cern.lgeant}. 
The list is accessible to all users who have an e-mail connection
to CERNVM. To subscribe to the list from a BITnet node a user has to
send the following message to LISTSERV at CERNVM using the local
BITnet message facility:

\begin{center}
\Lit{SUBSCRIBE LGEANT}
\end{center}

From a non-BITnet node, the user can send an ordinary mail message to
the user LISTSERV at CERNVM containing that single line.
 
Together with the {\tt GEANT} library comes a 
{\it correction cradle} (see section on
maintenance policy) which contains the history of the
modifications to the current
version of the {\tt GEANT} program. This file is accessible to all
users in the PRO area and can be found in:

\begin{center}
\Lit{GCORR{\it xxx}.CAR}
\end{center}

where {\it xxx} is the version number.
 
Documentation on the elements of the CERN Program Library used by the {\tt GEANT}
program is available from the CERN Program Library Office.

\section{Update policy}
The {\tt GEANT} program is constantly updated to reflect corrections, most
of the time originating from users' feed-back, and improvements to
the code. This constant evolution, which is one of the reasons for the 
success of {\tt GEANT},
poses the serious problem of managing change without disrupting stability,
which is very important for physicists doing long production runs.
 
In the CERN Program Library maintenance scheme, three versions
of any product are present at the same time on the central systems,
in the
OLD, PRO and NEW areas with those same names. This scheme does not apply to
{\tt GEANT} because every new release usually contains modifications
in the physics which can produce, we hope,
better but often different results with
respect to the previous version. It is therefore appropriate to offer to
the users
an extra level of protection against running inadvertedly the wrong version
by appending the version number to all the files of {\tt GEANT}. In this way the
users will have to change their procedure to change the
version of {\tt GEANT}.
 
On the other hand, the new user should not bother about version numbers and
correction files, and so an alias is installed on all systems without any
version number, always pointing to the latest released version.
 
As said before, users' feed-back is of paramount importance in detecting
problems or areas for improvement in the system, so the new version is made
available in the NEW area well before the official
release. If, on the one hand, those who use this version do so
at their own risk, on the other hand users are encouraged to
perform
as much testing as possible, in order to detect the maximum
number of problems before the final release. Modifications in the pre-release
version are made directly in the source code.
 
When a problem is discovered
which may seriously affect the validity of the results of the simulation,
it is of course not enough to correct it in the new version, as users who
are doing long productions would not have access to it. In this case the 
correction is
also made in the production version in the PRO area. To minimise network
transfer for remote users and in the interest of the stability of the system,
the source code of the released version in PRO is not touched, but rather
the correction is applied via a so-called {\it correction cradle} which is
a file containing the differences between the original and the corrected
version in a format required by PATCHY/CMZ. Both these programs can read the
original source and the correction cradle and produce the corrected source.
On the production area the binary libraries are re-generated and the new
correction cradle installed.
 
Users at CERN should not need to use the correction
cradle other than
for documentation purposes. Remote users may want to obtain
the cradle and apply the corrections. For this case, 
the cradle is installed on
LISTSERV where it can be retrieved by registered users. Once a new
version is released, the correction cradle is obviously empty, as all
corrections have been applied in the code directly. The correction cradle for
the OLD version is available but has to be considered frozen.
No correction is ever applied to an old version.
 
New versions of {\tt GEANT} are moved into the PRO area synchronously with
releases of the CERN Program Library. If no new version of {\tt GEANT} 
is available
at the time of the release of the Program Library, the {\tt GEANT} files do not
change their location and the production version remains the same.
 
\section{Availability of the documentation}
 
This document has been produced using \LaTeX\footnote{%
Leslie Lamport, {\it \LaTeX\ -- A Document Preparation
System}. Addison--Wesley, 1985}
with the \Lit{cernman} and \Lit{cerngeant} style options, developed at CERN.
A printable version of each of the sections described in this manual
can be obtained as a compressed PostScript file from CERN 
by anonymous ftp. You can look in the directory described in the
procedure below for more details.
For instance, if you want to transfer the description
of the physics routines, then you can type the following
(commands that you have to type are underlined):\footnote{You can of course 
issue multiple {\tt get} commands in one run.}
 

\vspace*{3mm}
\begin{tabular}{@{\hspace{12mm}}>{\tt}l}
\underline{ftp asis01.cern.ch}\\
Trying 128.141.201.136...\\
Connected to asis01.cern.ch.\\
220 asis01 FTP server (SunOS 4.1) ready.\\
Name (asis01:username): \underline{anonymous}\\
Password: \underline{your\_{}mailaddress}\\
ftp> \underline{binary}        \\
ftp> \underline{cd cernlib/doc/ps.dir/geant}\\
ftp> \underline{get phys.ps.Z} \\
ftp> \underline{quit}          \\
\end{tabular}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\Authors {F.Bruyant}      \Origin{GEANT}                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Version{Geant 3.21}\Routid{AAAA002}
\Submitted{01.10.84}       \Revised{10.03.94}
\Makehead{Introduction to the manual}
The present documentation is divided into
sections which follow the structure of
{\tt GEANT} and its major functions. Each section is identified by a
{\it keyword} which indicates its content. Sections are in alphabetical
order:

\begin{DLtt}{MMMMMMMM}
\item[AAAA]       introduction to the system;
\item[BASE]       {\tt GEANT} framework and user interfaces to be read first;
\item[CONS]       particles, materials and tracking medium parameters;
\item[DRAW]       the drawing package, interfaced to {\tt HIGZ};
\item[GEOM]       the geometry package;
\item[HITS]       the detector response package;
\item[IOPA]       the I/O package;
\item[KINE]       event generators and kinematic structures;
\item[PHYS]       physics processes;
\item[TRAK]       the tracking package;
\item[XINT]       interactive user interface;
\item[ZZZZ]       appendix.
\end{DLtt}

Within each section, the principal system functions or the details of
subroutines are described in a series of {\it papers} numbered from 001 to 999.
In the upper left corner it is indicated in which {\tt Geant} release 
the subroutines
were introduced and left unchanged.
The authors of the conceptual ideas or/and of the early versions of the
code are acknowledged under the item {\bf Origin}, while {\bf Revision}
contains the contributors to any important upgrade. {\bf Documentation}
is essential, but sometime implies a not negligeable amount of work. When
relevant these contributions are acknowledged here. 
In addition all reported bugs, accepted suggestions...etc...are mentioned in
the history part of the source code and correction cradle.

Subroutines which are not necessary for an understanding of
the program flow and which are not intended to be called directly by
the user have been omitted.

The notation {\tt [<KEYW>nnn]} is used whenever
additional information can be found in the quoted section.
In the description of subroutine calling sequences,
the arguments used both on input and on output
are preceded by a * and the output arguments are followed by a * .

For convenience, two more sections have been added:
the section {\tt AAAA}, for general introductory information
at the beginning, and
the section {\tt ZZZZ}, for various appendices and indexed lists, at
the end.

A table of contents is available in {\tt AAAA000}.
To ease access to this documentation an index
appears in {\tt ZZZZ999}. It gives in alphabetic order the names of all
documented {\tt GEANT} subroutines with references
to the appropriate write up(s).

A short write up of {\tt GEANT} can be obtained by collecting the papers
numbered 001 to 009 in each section.
 

\putbib[cnasbibl,geabibl]
\end{bibunit}
 
%%     BASE part     %%

\begin{bibunit}[unsrt]
\renewcommand{\bibname}{BASE Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation {F.Bruyant}       \Origin{GEANT}
\Submitted{01.10.84}       \Revised{08.11.93}
\Version{Geant 3.16}\Routid{BASE001}
\Makehead{Introduction to {\tt GEANT}}
\section{{\tt GEANT} applications}
 
The {\tt GEANT} program simulates the passage of elementary particles through
the matter. Originally designed for the High Energy Physics experiments,
it has today found applications also outside this domain in areas such as
medical and biological sciences, radio-protection and astronautics.

The principal applications of {\tt GEANT} in High Energy Physics are:
\begin{itemize}
\item the {\it transport} 
of particles ({\it tracking} in this manual)
through an experimental setup for the simulation
of detector response;
\item
the graphical representation of the setup and of the particle trajectories.
\end{itemize}

The two functions are combined in the interactive version of {\tt GEANT}.
This is very useful,
since the direct
observation of what happens to a particle inside the detector
makes the debugging easier and may reveal possible weakness of the
setup (also sometimes of the program!).

In view of these applications, the {\tt GEANT} system allows you to:
\begin{itemize}
\item
describe an experimental setup
by a structure of geometrical volumes.
A {\tt MEDIUM} number 
is assigned to each volume
by the user ({\tt [GEOM]}). Different volumes may have
the same medium number. A medium is defined by
the so-called {\tt TRACKING MEDIUM} parameters, which
include reference to the {\tt MATERIAL}
filling the volume {\tt [CONS]};
\item
accept events simulated by Monte Carlo generators {\tt [KINE]};
\item transport particles through the various
regions of the setup, taking
into account geometrical volume boundaries and
physical effects according to the nature of the
particles themselves, their interactions
with matter and the magnetic field {\tt [TRAK], [PHYS]};
\item
record particle trajectories and the response of
the sensitive detectors {\tt [TRAK], [HITS]};
\item visualise the
detectors and the particle trajectories {\tt [DRAW], [XINT]}.
\end{itemize}

The program contains {\it dummy} and {\it default}
user subroutines called whenever application-dependent
actions are expected.

It is the responsibility of the user to:
\begin{itemize}
\item code the relevant user subroutines providing the data describing the
experimental environment;
\item assemble the appropriate program segments and utilities into an 
executable program;
\item compose the appropriate data records
which control the execution of the program. 
\end{itemize}
The
section {\tt [BASE]} of this manual gives more information on the above.

{\bf Note:}
the names of the dummy or default user subroutines have {\tt GU} or {\tt UG} 
as their first two letters.
 
\section{Event simulation framework}

The framework offered by {\tt GEANT} for event simulation is described in
the following paragraphs, in order
to familiarise the reader with the areas where user
interventions are expected.
For each item we will indicate in brackets the relevant section where more
information can be found.

At the same time, the {\tt GEANT} data structures are introduced. 
This is
important as the coding to be provided by the user
most often consists of storing and retrieving information from
data structures, or reading or writing data structures.
For simple applications
user routines are provided as an interface to the data structures
partially hiding them from the users. For advanced users of 
{\tt GEANT}, some idea of the layout of the data in memory is helpful.
{\tt GEANT} data structures are logically related set of data which are
physically stored in the \FCind{/GCBANK/} common block. The position
of each structure is contained in an {\tt INTEGER} variable which
is constantly kept up-to-date by {\tt ZEBRA}. By convention the names
of these variable, called {\it pointers} begin with {\tt J}, and they
are used in this manual to designate the structure they point to.

A main program has to be provided by the user ({\tt [BASE100]}) for
{\it batch} type operation. For interactive operation a main program is
provided, both binary and source, in the library directory
both at CERN and in the standard distribution tape of the CERN Program
Library. The file is called {\tt gxint<ver>.<ext>}, where {\tt <ver>}
is the version of {\tt GEANT} to which this file belongs and {\tt <ext>}
is the system-dependent file-name extension to denote a FORTRAN source
or an object file. This file should be loaded in front of all other
files when assembling a {\tt GEANT} application. The source is provided
in case the user wants to modify it, in particular changing the size
of the commons \FCind{/GCBANK/} or \FCind{/PAWC/}.

The main program allocates the dynamic memory for {\tt ZEBRA} and 
{\tt HBOOK} and passes control to the three phases of the run:
 
\begin{enumerate}
\item initialisation
\item event processing
\item termination
\end{enumerate}

where in each of the three phases the user can implement his own code
in the appropriate routines.
 
\section{Initialisation}

The initialisation is controlled by the user in the subroutine {\tt UGINIT}  
who has the responsibility to call the appropriate routines
({\tt [BASE100]}).
It consists of the following steps, most of them
performed through calls to {\tt GEANT} subroutines:
 
\begin{DLtt}{MMMMMMMMMM}
\item[\Rind{GINIT}]
initialise the {\tt GEANT} common blocks
with default values ({\tt [BASE030], [BASE110]});
\item[\Rind{GFFGO}]
read {\it free format} data records either to
modify the default options ({\tt [BASE040],
[BASE110]}) or to provide information on the current run;
\item[\Rind{GZINIT}]
initialise the memory manager, the link areas
and the run header bank {\tt JRUNG} ({\tt [BASE110]});
\item[\Rind{GDINIT}]
initialise the drawing package ({\tt [DRAW]}), calling this routine
without having initialised the graphics package via a call to \Rind{IGINIT}
or \Rind{HPLINT} will cause {\tt GEANT} to abort;
\item[\Rind{GPART}]
(or \Rind{GSPART}) fill the data structure {\tt JPART}
with the particle properties ({\tt [CONS]});
\item[\Rind{GMATE}] (or \Rind{GSMATE})
fill the data structure {\tt JMATE}
with the characteristics of the materials used
({\tt [CONS]});
\item[User code] it is the responsibility of the user to:
\begin{itemize}
\item define the geometry of the different components of
the setup ({\tt [GEOM]}), stored in the {\tt JROTM} and {\tt JVOLUM} data
structures; 
\item define tracking medium parameters ({\tt [CONS],[TRAK]}), stored
in the {\tt JTMED} data structure;
\item specify which elements of the geometrical
setup should be considered as {\it sensitive detectors}, giving
a {\it response} when hit by a particle ({\tt [HITS]});
\item usually all done in a user routine called \Rind{UGEOM};
\end{itemize}
\item[\Rind{GGCLOS}]
process all the geometrical information
provided by the user and prepare for particle transport;
\item[\Rind{GBHSTA}]
book standard {\tt GEANT} histograms if required by
the user with the data record {\tt HSTA} ({\tt [BASE040], [BASE110]});
\item[\Rind{GPHYSI}]
compute energy loss and cross-section tables
and store them in the data structure {\tt JMATE} ({\tt [CONS], [PHYS]}).
\end{DLtt}
 
\section{Event processing}
 
The processing phase is triggered by a call to the subroutine \Rind{GRUN} which,
for each event to be processed, gives control to the subroutines:
 
\begin{DLtt}{MMMMMMMM}
\item[\Rind{GTRIGI}] initialise event processing and create the
event header bank {\tt JHEAD};
\item[\Rind{GTRIG}] process one event;
\item[\Rind{GTRIGC}] clean up the portion of memory used by the event
and check that enough time is left for the next event ({\tt [BASE200]}).
\end{DLtt}
\Rind{GTRIG} calls the following user routines:
\begin{DLtt}{MMMMMMMM}
\item[\Rind{GUKINE}]
generates or reads ({\tt [IOPA]})
the kinematics of the event and stores it
in the data structures {\tt JVERTX} and {\tt JKINE} ({\tt [KINE]});

\item[\Rind{GUTREV}]
calling \Rind{GTREVE} which performs the following operations for each
vertex in turn:
\begin{enumerate}
\item moves all the particles attached to the vertex from the permanent 
stack {\tt JKINE} to the temporary stack {\tt JSTAK};
\item controls the propagation of each particle though the setup by 
calling \Rind{GUTRAK}/\Rind{GTRACK} ({\tt [TRAK]}); 
each particle is tracked in turn and when a sensitive detector
is traversed, the user may store
any useful information in the data structure {\tt JHITS} 
via the routines described in the section {\tt [HITS]};
\end{enumerate}
 
The {\tt JSTAK} data structure is a LIFO (Last In -- First Out) stack.
Secondary products generated by the current particle transported
are processed before proceeding to the next particle. 
It is very important to understand that by default {\tt GEANT} does not
follow the secondary particles generated. It is the responsibility of the
user to indicate which particles should be followed via the
routines \Rind{GSKING}/\Rind{GSKPHO}.

The data structure {\tt JXYZ}, containing the
coordinates of space points along the tracks,
can be filled by the user during tracking ({\tt [TRAK]}).

\item[\Rind{GUDIGI}]
simulate the detector responses for the event, using 
the information recorded in the data
structure {\tt JHITS} during particle transport, and store
the results in the data structure {\tt JDIGI} ({\tt [HITS]});

\item[\Rind{GUOUT}]
perform all the processing at the end of the event and 
output the relevant data structures ({\tt [IOPA]}).
\end{DLtt}
 
Other routines called during the tracking phase triggered
by {\tt GTREVE} should be mentioned for completeness:
\begin{itemize}
\item
hadronic interactions can be simulated via either the 
{\tt GHEISHA}~\cite{bib-GHEI} or 
{\tt FLUKA}~\cite{bib-FLUK,bib-FLU1,bib-FLU2,bib-FLU3,bib-FLU4}
hadronic shower generator.
In the
subroutines \Rind{GUPHAD} and \Rind{GUHADR} ({\tt [TRAK]}) the user
may select the hadronic shower generation program to be used.
The default for {\tt GEANT} is {\tt GHEISHA};
\item after each tracking step along the
track, control is
given to the subroutine \Rind{GUSTEP}. From the information
available in labelled common blocks the user
is able to take the appropriate action, such as
storing a hit or transferring a secondary product either in the
stack {\tt JSTAK} or in the event structure {\tt JVERTX/JKINE} via
the subroutine 
\Rind{GSKING}. In the subroutine \Rind{GSSTAK},
called by \Rind{GSKING}, a user routine \Rind{GUSKIP} is called which permits
skipping any unwanted track before entering it in the stack for subsequent
transport;
\item the subroutine
\Rind{GUSWIM} is called by the the routines which transport charged particles
when in a magnetic field; it selects and calls the appropriate routine to
transport the particle. Although formally a user routine, the default version
provided by {\tt GEANT} is usually appropriate for most situations.
The magnetic field, unless it is constant along the {\tt Z} axis,
has to be described via the subroutine \Rind{GUFLD}.
\end{itemize}
 
\section{Termination}
 
The termination phase is under the control of the user ({\tt [BASE300]})
via the routine \Rind{GULAST}. In 
simple cases it may consist of a call to the subroutine \Rind{GLAST} 
which computes and prints some statistical information (time per
event, use of dynamic memory, etc.).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%                                                                 %
%  Last Mod. 12 Juen 1993 19:20 MG                                %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation {F.Bruyant}       
\Submitted{01.10.84}          \Revised{08.11.93}
\Version{Geant 3.16}\Routid{BASE010}
\Makehead{Simplified Program Flow Chart}

\begin{tabbing}
123\= 123\= 123\= 123\= 123\= 123\= 123\= 123\= 123123123123123123123123\= \kill
MAIN \> \> \> \> \> \> \> \> \> \parbox[t]{7.5cm}{user routine
\vspace{.20cm}} \\
   \> GZEBRA \> \> \> \> \> \> \> \> \parbox[t]{7.5cm}{initialisation of
ZEBRA system, dynamic core allocation \vspace{.20cm}} \\
  \> UGINIT \> \> \> \> \> \> \> \> \parbox[t]{7.5cm}{user routine
\vspace{.20cm}} \\
  \> \> GINIT \> \> \> \> \> \> \> \parbox[t]{7.5cm}{initialisation of
{\tt GEANT} variables \vspace{.20cm}} \\
  \> \> GFFGO \> \> \> \> \> \> \> \parbox[t]{7.5cm}{interpretation of
data records \vspace{.20cm}} \\
  \> \> GZINIT \> \> \> \> \> \> \> \parbox[t]{7.5cm}{initialisation of
ZEBRA core divisions and link areas \vspace{.20cm}} \\
  \> \> GPART/GSPART \> \> \> \> \> \> \> \parbox[t]{7.5cm}{creation of the
{\em particle} data structure {\tt JPART} \vspace{.20cm}} \\
  \> \> GMATE/GSMATE \> \> \> \> \> \> \> \parbox[t]{7.5cm}{creation of the {\em
material} \vspace{.20cm} data structure {\tt JMATE} } \\
  \> \> {\em user code} \> \> \> \> \> \> \> \parbox[t]{7.5cm}{description
of the geometrical setup, of the sensitive detectors,
creation of data structures
{\tt JVOLUM, JTMED, JROTM, JSETS} \vspace{.20cm}} \\
  \> \> GPHYSI \> \> \> \> \> \> \> \parbox[t]{7.5cm}{preparation of
cross-section and energy-loss tables for all used materials \vspace{.20cm}} \\
  \> GRUN \> \> \> \> \> \> \> \> \parbox[t]{7.5cm}{loop over events
\vspace{.20cm}} \\
  \> \> GTRIGI \> \> \> \> \> \> \> \parbox[t]{7.5cm}{initialisation for
event processing \vspace{.20cm}} \\
  \> \> GTRIG \> \> \> \> \> \> \> \parbox[t]{7.5cm}{event processing
\vspace{.20cm}} \\
  \> \> \> GUKINE \> \> \> \> \> \> \parbox[t]{7.5cm}{(user)  generation
(or input) of event initial kinematics \vspace{.20cm}} \\
  \> \> \> GUTREV \> \> \> \> \> \> \parbox[t]{7.5cm}{(user) \vspace{.20cm}} \\
  \> \> \> \> GTREVE \> \> \> \> \> \parbox[t]{7.5cm}{loop over tracks,
including any secondaries generated \vspace{.20cm}} \\
  \> \> \> \> \> GUTRAK \> \> \> \> \parbox[t]{7.5cm}{(user) \vspace{.20cm}} \\
  \> \> \> \> \> \> GTRACK \> \> \> \parbox[t]{7.5cm}{control tracking of
current track \vspace{.20cm}} \\
  \> \> \> \> \> \> \> GMEDIA \> \> \parbox[t]{7.5cm}{find current
volume/tracking medium \vspace{.20cm}} \\
  \> \> \> \> \> \> \> GTVOL \> \> \parbox[t]{7.5cm}{loop over successive
media \vspace{.20cm} seen by the particle} \\
  \> \> \> \> \> \> \> \> GTGAMA/GTELEC/... \> \parbox[t]{7.5cm}{tracking
of particle according to type \vspace{.20cm}} \\
  \> \> \> \> \> \> \> \> GUSTEP \> \parbox[t]{7.5cm}{(user) recording of
hits in data structure {\tt JHITS} and of space points in data structure
{\tt JXYZ} \vspace{.20cm}} \\
  \> \> \> GUDIGI \> \> \> \> \> \> \parbox[t]{7.5cm}{computation of
digitisations and recording in data structure {\tt JDIGI} \vspace{.20cm}} \\
  \> \> \> GUOUT \> \> \> \> \> \> \parbox[t]{7.5cm}{output of current
event \vspace{.20cm}} \\
  \> \> GTRIGC \> \> \> \> \> \> \> \parbox[t]{7.5cm}{clearing of memory
for next event \vspace{.20cm}} \\
  \> UGLAST \> \> \> \> \> \> \> \> \parbox[t]{7.5cm}{(user) \vspace{.20cm}} \\
  \> \> GLAST \> \> \> \> \> \> \> \parbox[t]{7.5cm}{standard {\tt GEANT}
termination \vspace{.20cm}} \\
\end{tabbing}
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation {M.Maire}       
\Submitted{01.10.84}                \Revised{20.03.94}
\Version{Geant 3.11}\Routid{BASE020}
\Makehead{The data structures and their relationship}
\section{Dynamic memory}
 
The {\tt GEANT} data structures are stored in the
common \FCind{/GCBANK/} accessible through the following Patchy sequence:
The \FCind{/GCLINK/} variables are pointers to the {\tt GEANT} data structures 
in the \FCind{/GCBANK/} common. 
They belong to a permanent area declared in 
\Rind{GZINIT}.
\FComm{GCBANK}{Dynamic core for the GEANT data structures}
\begin{verbatim}
      PARAMETER (KWBANK=69000,KWWORK=5200)
      COMMON/GCBANK/NZEBRA,GVERSN,ZVERSN,IXSTOR,IXDIV,IXCONS,FENDQ(16)
     +             ,LMAIN,LR1,WS(KWBANK)
      DIMENSION IQ(2),Q(2),LQ(8000),IWS(2)
      EQUIVALENCE (Q(1),IQ(1),LQ(9)),(LQ(1),LMAIN),(IWS(1),WS(1))
      EQUIVALENCE (JCG,JGSTAT)
      COMMON/GCLINK/JDIGI ,JDRAW ,JHEAD ,JHITS ,JKINE ,JMATE ,JPART
     +      ,JROTM ,JRUNG ,JSET  ,JSTAK ,JGSTAT,JTMED ,JTRACK,JVERTX
     +      ,JVOLUM,JXYZ  ,JGPAR ,JGPAR2,JSKLT
C
\end{verbatim}
The figure on the next page indicates the ralations between the  
{\tt GEANT} data structures. 
Detailed description of the data structure parts can be found
in the following sections:
\begin{center}\tt\begin{tabular}{lllrrr}
JRUNG    &[BASE299]        \\
JPART   &[CONS399]        &JMATE    &[CONS199]  \\
JROTM   &[GEOM299]        &JTMED    &[CONS299]  \\
JVOLUM  &[GEOM199]        \\
JSET    &[HITS199]        &JDRAW    &[DRAW399]  \\
JHEAD   &[BASE299]        &JKINE    &[KINE199]  &  JVERTX & [KINE199]\\
JSTAK   &[TRAK399]        \\
IDIGI   &[HITS399]        &JHITS    &[HITS299]  &  JXYZ   & [TRAK 499]
\end{tabular}
\end{center}
\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/base020-1.eps,width=12cm}
     \caption{Relation between {\tt GEANT} data structures}
     \label{fg:base020-1}
\end{figure}
\newpage

\section{Common blocks}
The communication between program segments of the {\tt GEANT} system
is assured by the contents of the data structures and by the definition
of {\it long range} variables in several common blocks.
In addition, within the program segments,
the subroutines communicate with each other through actual arguments
and through the common block variables. A detailed list of the 
user accessed common blocks is given in  {\tt [ZZZZ010]}. 
Their also the variables initialized in \Rind{GINIT} and the possibility
in overriding them through data records {\tt [BASE040]} or 
interactive commands {\tt [XINT]} are specified.
 
In most of the cases there is a correspondence between a
given data structure and a given common block where the current contents of
the banks are stored.
The labelled common blocks are accessible through Patchy/CMZ sequences
identified by the name of the {\tt COMMON}. They are defined in the Patch
\Rind {GCDES}.
 
{\bf Note:}
 
Unless otherwise specified, the long range variables are
initialised in \Rind{GINIT}. When non-zero, default values are
quoted between brackets. If the value may be modified
the keyword for the data record and for the interactive
command is also given in bold characters between brackets.
 

 
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%                                                                 %
%  Last Mod.  9 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation {F.Bruyant, M.Maire}  
\Submitted {01.10.84}               \Revised{16.12.93}
\Version{Geant 3.16}\Routid{BASE040}
\Makehead{Summary of Data Records}
\section{ Introduction }
 
{\tt GEANT} uses the {\tt FFREAD} \cite{bib-FFREAD}
package to read {\it free format} data records in the routine \Rind{GFFGO}.
The keywords accepted by \Rind{GFFGO} can be
classified as:
\begin{enumerate}
\item         general control of the run;
\item         control of the physics processes;
\item         debug and I/O operations;
\item         user applications;
\item         Lund event generation.
\end{enumerate}
 
The data records are listed below by category with the following information:
\begin{DLtt}{MMMM}
\item[KEY] keyword, any number of characters
truncated to the first 4 unless otherwise specified by the user;
\item[N] maximum expected number of variables ({\tt NVAR});
\item[T] type of these variables ({\tt I=INTEGER, R=REAL or M=MIXED})
and for each variable in turn:
\begin{itemize}
\item variable FORTRAN name;
\item short description (more detail in {\tt [BASE030]});
\item labelled common where it is stored;
\item default value, usually from \Rind{GINIT}.
\end{itemize}
\end{DLtt}
When a record is decoded, the values entered by the user
in free format are assigned to the variables in order.
The number of values can be less than {\tt NVAR}. In case of a {\tt MIXED}
type the values entered have agree
with the type of the corresponding variable.
 
For example the data record:
\begin{verbatim}
      RUNG   5   201
\end{verbatim}
presets the run and event number to 5 and 201 respectively.
None of the records mentioned below is mandatory.
\section{ User defined data records }
 
Before calling \Rind{GFFGO} the user may define private data records
through calls to \Rind{FFKEY} as follows:
\begin{verbatim}
     CALL FFKEY('key',VAR(1),NVAR,'type')
\end{verbatim}
They will be interpreted by \Rind{GFFGO} in the same way as the {\tt GEANT}
pre-defined records.

\section{ Summary of {\tt GEANT} data records }

\subsection{General control}
\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\parbox[t]{7.5cm}{Short description}
&\tt COMMON  &\Rind{GINIT} \\
\hline
\tt HSTA  &20 &M &\tt LHSTA &
\parbox[t]{7.5cm}{names of required standard histograms, see {\tt [BASE110]}}
&\FCind{/GCLIST/} & {\tt Blank} \\
\tt OPTI & 1 & I & \tt IOPTI &
\parbox[t]{7.5cm}{automatic optimisation of the geometry via \Rind{GSORD}}
&\FCind{/GCOPTI/} & 1 \\
\tt RNDM  &2  &I & \tt NRNDM & initial random number seed (2 words) &
   \FCind{/GCFLAG/} &0    \\
\tt RUNG  &2  &I & \tt IDRUN & user run number                     &
   \FCind{/GCFLAG/} &1      \\
&     &   &  \tt IDEVT  & first user event number                   &
   \FCind{/GCFLAG/} &1      \\
\tt SORD & 1  &I &\tt ISTORD & stack ordering flag                    &
   \FCind{/GCSTAK/}  & 0 \\
\tt TRIG  &1  &I &\tt NEVENT & total number of events to process      &
   \FCind{/GCFLAG/}  & 10000000\\
\tt TIME  &3  &M &\tt TIMINT &time left after initialisation (see \bf Note
below)
       &
   \FCind{/GCTIME/}  \\
&     &   &  \tt TIMEND &time required for termination        &
  \FCind{/GCTIME/} &1      \\
 
&     &   &  \tt ITIME  &test every {\tt ITIME} events &\FCind{/GCTIME/} &1
\end{tabular}

{\bf Note:} the time allowed for the job after initialisation
cannot be set by the user via the data 
record. To set the total time for the job the user should call the
\Rind{TIMEST} routine at the beginning of the program before any
call to {\tt GEANT} routines. This variable in the 
data record has not been removed for backward compatibility.

\subsection{Control of physics processes}
For more information on the use of these flags, see {\tt [PHYS001]}.

\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\parbox[t]{7.5cm}{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt ANNI  &1  &I &\tt IANNI &annihilation   &\FCind{/GCPHYS/}   &1 \\
\tt AUTO  &1  &I &\tt IGAUTO &\parbox[t]{7.5cm}{automatic computation
of the tracking medium parameters} &\FCind{/GCTRAK/}   &1 \\
\tt BREM  &1  &I &\tt IBREM  &bremsstrahlung &\FCind{/GCPHYS/}  &1 \\
\tt CKOV  &1  &I &\tt ICKOV  &
\v{C}erenkov photon generation &\FCind{/GCPHYS/}  &0 \\
\tt COMP  &1  &I &\tt ICOMP  &Compton scattering &\FCind{/GCPHYS/} &1 \\
\tt CUTS  &16 &R &\multicolumn{4}{l}{Kinetic energy cuts in GeV:}      \\
 &    &   &  \tt CUTGAM  &cut for  for gammas    &\FCind{/GCCUTS/} &0.001   \\
 &    &   &  \tt CUTELE  &cut for electrons  &\FCind{/GCCUTS/} &0.001   \\
 &    &   &  \tt CUTNEU  &cut for neutral hadrons&\FCind{/GCCUTS/}&0.01 \\
 &    &   &  \tt CUTHAD  &cut for charged hadrons&\FCind{/GCCUTS/}&0.01  \\
 
 &    &   &  \tt CUTMUO  &cut for muons           &\FCind{/GCCUTS/}&0.01\\
 &    &   &  \tt BCUTE   &cut for electron bremsstrahlung&\FCind{/GCCUTS/}&
    {\tt GUTGAM}\\
 &    &   &  \tt BCUTM   &cut for muon and hadron bremsstrahlung
&\FCind{/GCCUTS/}& \tt CUTGAM\\
 &    &   &  \tt DCUTE   & cut for $\delta$-rays by electrons&\FCind{/GCCUTS/}&
     $10^{4}$\\
&  &  & \tt DCUTM   & cut for $\delta$-rays by muons&\FCind{/GCCUTS/}&$10^{4}$\\
 &    &   &  \tt PPCUTM  & \parbox[t]{7.5cm}{total energy cut for 
direct pair production by muons} &
    \FCind{/GCCUTS/}&0.01\\
 &    &   &  \tt TOFMAX  & time of flight cut in seconds
&\FCind{/GCCUTS/}&$10^{10}$\\
 
 &    &    & \tt GCUTS    &5 user words    &\FCind{/GCCUTS/}&0\\
\tt DCAY  &1   &I&\tt IDCAY    &decay &\FCind{/GCPHYS/}&1\\
\tt DRAY  &1   &I&\tt IDRAY    &$\delta$-ray &\FCind{/GCPHYS/}&1\\
\end{tabular}

\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\parbox[t]{7.5cm}{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt ERAN  &3   &M&\multicolumn{4}{l}{cross-section tables structure:}      \\
 &    &R  &    \tt EKMIN  & minimum energy for the cross-section tables
&\FCind{/GCMULO/}&$10^{-5}$ \\
 &    &R  &    \tt EKMAX  & maximum energy for the cross-section tables
&\FCind{/GCMULO/}&$10^{4}$ \\
 &    &I  &    \tt NEKBIN & \parbox[t]{7.5cm}{number of logarithmic bins 
for cross-section tables}
&\FCind{/GCMULO/}&$90$ \\
\tt HADR  &1   &I&\tt IHADR    &hadronic process &\FCind{/GCPHYS/}&1\\
\tt LABS  &1   &I&\tt ILABS    &\v{C}erenkov light absorbtion 
& \FCind{/GCPHYS/} &0\\
\tt LOSS  &1   &I&\tt ILOSS    &energy loss&
   \FCind{/GCPHYS/} &2\\
\tt MULS  &1   &I&\tt IMULS    &multiple scattering &\FCind{/GCPHYS/}&1\\
\tt MUNU  &1   &I&\tt IMUNU    &muon nuclear interaction
&\FCind{/GCPHYS/}&1\\
\tt PAIR  &1   &I&\tt IPAIR    &pair production &\FCind{/GCPHYS/}&1\\
\tt PFIS  &1   &I&\tt IPFIS    &photofission &\FCind{/GCPHYS/}&0\\
\tt PHOT  &1   &I&\tt IPHOT    &photo electric effect &\FCind{/GCPHYS/}&1\\
\tt RAYL  &1   &I&\tt IRAYL    &Rayleigh scattering &\FCind{/GCPHYS/}&0\\
\tt STRA  &1   &I&\tt ISTRA    &energy fluctuation model&\FCind{/GCPHYS/}&0\\
\tt SYNC  &1   &I&\tt ISYNC    &synchrotron radiation
generation &\FCind{/GCPHYS/}&0\\
\end{tabular}
\subsection{Debug and I/O operations}
\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\makebox[7.5cm][l]{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt DEBU &3 &M &\tt IDEMIN&\parbox[t]{7.5cm}{first event to debug. 
If negative the debug flag {\tt IDEBUG} is set for the
initialisation phase} &\FCind{/GCFLAG/}&0\\
&    &  &  \tt IDEMAX&last event to debug    &\FCind{/GCFLAG/}&0\\
 
&    &  &  \tt ITEST&print control frequency&\FCind{/GCFLAG/}&0\\
\tt GET  &20&M &\tt LGET &\parbox[t]{7.5cm}{
{\tt NGET} names of data structures to
fetch (see \bf Note)}&\FCind{/GCLIST/}& {\tt Blank} \\
\tt PRIN &20 &M & \tt LPRIN&\parbox[t]{7.5cm}{
{\tt NPRIN} user keywords to print data
structure (see \bf Note)}&\FCind{/GCLIST/}& {\tt Blank} \\
\tt RGET  &20&M&\tt LRGET&\parbox[t]{7.5cm}{
{\tt NRGET} names of data structures to fetch
from RZ files (see \bf Note)}&\FCind{/GCRZ/} & {\tt Blank} \\
\tt RSAV &20&M&\tt LRSAVE&\parbox[t]{7.5cm}{
{\tt NRSAVE} names of data structures to save
from RZ files (see \bf Note)}&\FCind{/GCRZ/} & {\tt Blank} \\
\tt SAVE &20&M&\tt LSAVE&\parbox[t]{7.5cm}{
{\tt NSAVE} names of data structures to
save (see \bf Note)}&\FCind{/GCLIST/} & {\tt Blank} \\
\tt SWIT &10&I&\tt ISWIT &user flags for debug&\FCind{/GCFLAG/}&0\\
\end{tabular}

{\bf Note:} the user data records for I/O have no effect on the {\tt GEANT}
system, and the user is supposed to analyse them at run time and take
corresponding action. For instance, a use of the {\tt PRIN} data record
could be the following:
\begin{verbatim}
      CALL GLOOK('VOLU',LPRIN,NPRIN,IPRES)
      IF(IPRES.NE.0) THEN
         CALL GPVOLU(0)
      ENDIF
\end{verbatim}

All the names quoted here are given as 4-character strings in input
and their ASCII equivalent is read into the corresponding variable. The same
applies to the user lists of the following section.

\subsection{User applications}
\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\parbox[t]{7.5cm}{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt KINE  &11   &M    &\tt IKINE   &user flag           &\FCind{/GCKINE/}   &0\\
 
&     &     &     \tt PKINE    &10 user words
    &\FCind{/GCKINE/}    & $10^{10}$\\
\tt SETS  &20   &M    &\tt LSETS    &user words for detector sets
    &\FCind{/GCLIST/}&{\tt Blank}\\
\tt STAT  &20   &M    &\tt LSTAT    &user words to control statistics
&\FCind{/GCLIST/}&{\tt Blank}\\
\tt PLOT  &20   &M    & \tt LPLOT    &user words to control
    plots&\FCind{/GCLIST/}&{\tt Blank}\\
\tt GEOM  &20   &M    &\tt LGEOM    &user words to control geometry
    setup&\FCind{/GCLIST/}&{\tt Blank}\\
\tt VIEW  &20   &M    &\tt LVIEW    &user words to control view banks&
    \FCind{/GCLIST/}&{\tt Blank}\\
\end{tabular}

See note in the previous section on the use of these data records.

\subsection{Lund event generation}
\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\makebox[7.5cm][l]{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt LUND  &2    &M   &\tt IFLUND  &flavour code  (See \FCind{/GLUNDI/})&
\FCind{/GCLUND/}& 0\\
 
&     &     R   &\tt ECLUND  &total CMS energy      &\FCind{/GCLUND/}     &94\\
\end{tabular}

\subsection{Scan geometry control}

The scan geometry has been introduced in {\tt GEANT} version 3.15 with the
idea of developing a general parametrisation scheme. While the scan
geometry can already be built, the parametrisation scheme has not yet
been developed, so the following data records have to be considered as a
{\it forward compatibility} feature.

\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\makebox[7.5cm][l]{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt PCUT &  6 & M & \multicolumn{4}{l}{parametrisation control} \\
& & & \tt IPARAM & parametrisation flag & \FCind{/GCPARM/} & 0 \\
& & & \tt PCUTGA & threshold for gammas & \FCind{/GCPARM/} & 0 \\
& & & \tt PCUTEL & threshold for \Pem\Pep & \FCind{/GCPARM/} & 0 \\
& & & \tt PCUTNE & threshold for neutral hadrons& \FCind{/GCPARM/} & 0 \\
& & & \tt PCUTHA & threshold for charged hadrons & \FCind{/GCPARM/} & 0 \\
& & & \tt PCUTMU & threshold for muons& \FCind{/GCPARM/} & 0 \\
\tt PNUM &  2 & I & \multicolumn{4}{l}{parametrisation stack size} \\
& & & \tt MPSTAK & size of the parametrisation stack & \FCind{/GCPARM/} & 1000 \\
& & & \tt NPGENE & number of pseudo-particles generated & \FCind{/GCPARM/} & 20  \\
\tt SCAN &  8 & M & \multicolumn{4}{l}{scan geometry control} \\
& & & \tt SCANFL & scan processing flag ({\tt LOGICAL}) & \FCind{/GCSCAN/} 
& \tt .FALSE.\\
& & & \tt NPHI &  number of divisions in $\phi$  & \FCind{/GCSCAN/} & 90\\
& & & \tt PHIMIN &  minimum value of $\phi$      & \FCind{/GCSCAN/} &  0\\
& & & \tt PHIMAX &  maximum value of $\phi$      & \FCind{/GCSCAN/} &  360\\
& & & \tt NTETA  &  number of divisions in $\theta$  & \FCind{/GCSCAN/} &  90\\
& & & \tt TETMIN &  minimum value of $\theta$      & \FCind{/GCSCAN/} & 0\\
& & & \tt TETMAX &  maximum value of $\theta$      & \FCind{/GCSCAN/} & 180\\
& & & \tt MODTET &  type of $\theta$ division      & \FCind{/GCSCAN/} &  1\\
\tt SCAL & 32 & M & \tt ISLIST & list of volumes to be {\it scanned} &
\FCind{/GCSCAN/} & \tt Blank \\
\end{tabular}

\begin{tabular}{lllllll}
KEY   &N    &I    &VAR  &\makebox[7.5cm][l]{Short description}
 &\tt COMMON  &\Rind{GINIT} \\
\hline
\tt SCAP &  6 & R & \multicolumn{4}{l}{scan parameters} \\
& & & \tt VX   & scan vertex X coordinate & \FCind{/GCSCAN/} &  0 \\
& & & \tt VY   & scan vertex Y coordinate & \FCind{/GCSCAN/} &  0 \\
& & & \tt VZ   & scan vertex Z coordinate & \FCind{/GCSCAN/} &  0 \\
& & & \tt FACTX0 & scale factor for SX0 & \FCind{/GCSCAN/} &  100 \\
& & & \tt FACTL & scale factor for SL & \FCind{/GCSCAN/} &  1000 \\
& & & \tt FACTR & scale factor for R & \FCind{/GCSCAN/} &  100
\end{tabular}
\subsection{Landau fluctuations versus $\delta$-rays}
In order to avoid double counting between energy loss fluctuations
({\tt ILOSS=2}) and generation of $\delta$-rays {\tt IDRAY=1},
if {\tt ILOSS = 2}
the default value for $\delta$-ray generation is set to {\tt 0} and
it cannot be changed.
The different cases are summarised in the table below.
\begin{center}
\begin{tabular}{|l|l|l|l|}
\hline
                 & Full fluctuations&Restricted fluctuations&No fluctuations \\
                 & \tt ILOSS = 2 (D)   &\tt ILOSS = 1 or 3  & \tt ILOSS = 4 \\
\hline
\tt IDRAY        &\tt 0            &\tt 1          & \tt 1             \\
\tt DCUTE        &\tt 10 TeV       &\tt CUTELE     & \tt CUTELE      \\
\tt DCUTM \quad  &\tt 10 TeV \quad &\tt CUTELE     & \tt CUTELE      \\
\hline
\end{tabular}\end{center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{R.Brun, F.Bruyant}   
\Submitted{01.10.84}           \Revised{26.10.93}
\Version{Geant 3.16}           \Routid{BASE090}
\Makehead{The reference systems and physical units}
\section{The {\tt MA}ster {\tt R}eference {\tt S}ystem ({\tt MARS})}
 
The kinematic variables of the particles transporter by {\tt GEANT}
are always referred to the so-called 
{\tt MA}ster {\tt R}eference {\tt S}ystem ({\tt MARS}). This system
is implicitly defined as the local reference system of the first
volume defined, which contains all the others. This is a Cartesian
coordinate system with axis $\hat{x}, \hat{y}, \hat{z}$ where
$\hat{z} = \hat{x} \times \hat{y}$.
If the axes are labelled {\tt (X,Y,Z)}, then the point {\tt P}
is represented in fig \ref{fg:base090-1}.
 
\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/base090-1.eps,width=10cm}
      \caption{{\tt GEANT} reference system}
      \label{fg:base090-1}
\end{figure}

Tracking is performed in the {\tt MARS} and the input position for
user routines such as the magnetic field routine is given in this
system.

\section{The local reference systems ({\tt MRS} and {\tt DRS})}
 
As explained in {\tt [GEOM001]}, the setup is
described via the definition of an initial volume inside which all
the others will be positioned. In {\tt GEANT} terminology, each time
a volume has contents, created either via division or by positioning 
other volumes inside, it is called a {\tt MOTHER}. The volumes contained
are called {\tt DAUGHTER}s, and they, in turn, can contain volumes to
a depth of 15 levels. This is sometimes referred to as a {\it Russian doll}
geometry.
 
Every volume defined in {\tt GEANT} has a reference system attached to
it (see {\tt GEOM} section). When this volume has contents, this
is referred to as the {\tt M}other {\tt R}eference {\tt S}ystem
({\tt MRS}, with origin in O$_m$). Daughters
are positioned inside the mother with respect to the {\tt MRS}. The 
{\tt MRS} of the first volume defined, containing all the others, is
nothing else than the {\tt MARS}.

Each one of the daughters has its own reference system, which is referred
to as the {\tt D}aughter {\tt R}eference {\tt S}ystem, or {\tt DRS} with
origin in O$_d$. 

The transformation of a point from the {\tt MRS} (V$_m$)
to the {\tt DRS} (V$_d$), at any level, is performed using a rotation 
matrix $[R]$ and a translation vector $T$ via the relation :
     \[ V_d  =[ R ](V_m -T) \]
The components of $T$ are the projections of the vector  $ (O_m, O_d) $
onto the {\tt MRS} axes.
The rotation matrices are computed from
the spherical angles of each of the axes of the
daughter reference systems ({\tt I, II, III})
with respect to the mother reference system ({\tt 1, 2, 3}).
The spherical angles $\Theta$ and $\Phi$ of a
direction $D$ are defined as follows :
\begin{DLtt}{MMMMM}
\item[$\Theta$]     is the angle formed by the axis 3 and D
                 ($0^{\circ}\;<\;\Theta\;<\;180^{\circ}$).
\item[$\Phi$]      is the angle formed by the axis 1 and the projection
                of D onto the plane defined by the axes 1 and 2
                 ($0^{\circ}\;<\;\Phi\;<\;360^{\circ}$).
\end{DLtt}
Examples are given in {\tt [GEOM200]}.
The various rotation matrices required for a given setup must be
defined by the user during the initialisation stage.
A number is assigned to each matrix {\tt [GEOM200]}.
The translation vector and the number of the rotation
matrix are specified by the user when the volumes are
positioned inside their mother {\tt [GEOM110]}.

\section{Physical units}
 
Unless otherwise specified, the following units are
used throughout the program:
centimeter, second, kilogauss, GeV, GeV c$^{-1}$ (momentum), 
GeV c$^{-2}$ (mass) and degree.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{R.Brun, S.Ravndal}  
\Submitted{01.10.84}    \Revised{10.03.94}
\Version{Geant 3.21}\Routid{BASE100}
\Makehead{Examples of {\tt GEANT} application}
This section contains a skeleton of a standard user program {\tt GEXAMP}
to use the
{\tt GEANT} system. More detailed examples can be found in the
standard examples {\tt GEXAM1 - 6}. The recommended user routines
are indicated in bold characters and will be explained more in detail
in the following.

\begin{multicols}{2}
\footnotesize
\begin{XMP}
      PROGRAM GEXAMP
      PARAMETER (NGBANK=50000, NHBOOK=5000)
      COMMON/GCBANK/Q(NGBANK)
      COMMON/PAWC  /H(NHBOOK)
C--> {\sl Initialises {\tt HBOOK} and {\tt GEANT} memory}
      CALL GZEBRA( NGBANK)
      CALL HLIMIT(-NHBOOK)
C--> {\sl Open graphics system}
      CALL HPLINT(0)
      CALL IGMETA(8,0)
C--> {\sl {\tt GEANT} initialisation}
      CALL {\bf UGINIT}
C--> {\sl Start events processing}
      CALL GRUN
C--> {\sl End of Run}
      CALL {\bf UGLAST}
      END
*-----------------------------------------------
      SUBROUTINE {\bf UGINIT}
C--> {\sl Initialise {\tt GEANT}}
      CALL GINIT
C--> {\sl Read data records}
      OPEN(4,FILE='gcards.dat',STATUS='UNKNOWN')
      CALL GFFGO
C--> {\sl Initialise data structure}
      CALL GZINIT
C--> {\sl Initialise graphics}
      CALL GDINIT
      IF(NRGET.GT.0) THEN
C--> {\sl Read data structures from file}
         CALL GRFILE(1,'mygeom.dat','I')
      ELSE
C--> {\sl Particle table initialisation}
         CALL GPART
C--> {\sl Geometry and materials description}
         CALL UGEOM
      ENDIF
C--> {\sl Energy loss and cross-sections tables}
      CALL GPHYSI
      IF(NRSAVE .GT. 0) THEN
C--> {\sl Save permanent data structures} 
         CALL GRFILE(2,'mysave.dat','NO')
      ENDIF
C--> {\sl Print banks}
      CALL GPRINT('MATE',0)
      CALL GPRINT('TMED',0)
      CALL GPRINT('VOLU',0)
C--> {\sl Book histograms} 
      END
*-----------------------------------------------
      SUBROUTINE {\bf UGEOM}
C--> {\sl Defines material, tracking media }
C--> {\sl and geometry.}
C--> {\sl Close geometry banks.}
      CALL GGCLOS
      END
*-----------------------------------------------
      SUBROUTINE {\bf GUKINE}
C--> {\sl Generates kinematics}
C--> {\sl Data card {\tt KINE} itype x y z px py pz}
+SEQ, GCFLAG.
+SEQ, GCKINE.
      CALL GSVERT(PKINE,0,0,0,0,NVERT)
      CALL GSKINE(PKINE(4),IKINE,NVERT,0,0,NT)
C--> {\sl Print kinematic}
      IF (IDEBUG.NE.0) THEN
         CALL GPRINT('VERT',0)
         CALL GPRINT('KINE',0)
      END IF
      END
*-----------------------------------------------
      SUBROUTINE {\bf GUSTEP}
C--> {\sl Called at the end of each tracking }
C--> {\sl step.}
+SEQ, GCKINE.
C--> {\sl Debug event}
      CALL GDEBUG
C--> {\sl Store the created particles} 
      IF (NGKINE.GT.0) CALL GSKING (0)
      END
*-----------------------------------------------
      SUBROUTINE {\bf UGLAST}
C--> {\sl Termination routine} 
C--> {\sl Print histograms and statistics}
      CALL GLAST
C--> {\sl Close {\tt HIGZ/GKS} file}
      CALL IGEND
      END
\end{XMP}
\end{multicols}

\section{Notes}
\begin{itemize}
\item Whenever possible {\tt GEANT} makes use of the {\tt ZEBRA} store
for large data structures. This allows it to adapt the size of the program
data portion
to the size of the problem. The total amount of space required depends
on the application. {\tt GEANT} can run with as little as 50,000 words
or less, but for large detectors it is not uncommon to 
declare stores of several million words. The call to \Rind{GZEBRA}
initialises the common \FCind{/GCBANK/} to receive the {\tt GEANT}
data structures. This call is necessary before any other routine of
the {\tt GEANT} system is called.
\item The call to \Rind{HLIMIT} initialises the {\tt ZEBRA} system
to use the \FCind{/PAWC/} common block for the {\tt HBOOK} histogram
package. The size of the common depends on the number and size of the
plot requested. The {\tt ZEBRA} system must be initialised only once,
and the negative argument to \Rind{HLIMIT} prevents a second
initialisation of the system.
The \Rind{HLIMIT} call has to be placed {\bf after} the call
to \Rind{GZEBRA} and the argument has to be the dimension of the 
\FCind{/PAWC/} common block with a negative sign in front. 
\item
The main program is intended for {\it batch} applications,
while to run the simulation interactively, the interactive main program
called \Rind{GXINT} should be linked in front of the user code.
\item The program shown will require the graphic libraries in the
link sequence. Often, for batch production or for
small tests, graphics is not needed, and not loading the graphics
code makes the program smaller. To avoid loading graphic routines
the calls to \Rind{IGINIT}, \Rind{IGMETA}, \Rind{IGEND}, \Rind{GDINIT}
and \Rind{GDEBUG} should be removed. 

If, on the other hand, the user is interested in including the routine
\Rind{GDEBUG} and in excluding graphics at the same time, then the
following routine should be included in the code:
\begin{verbatim}
      SUBROUTINE GDCXYZ
      ENTRY IGSA
      ENTRY GDTRAK
      END
\end{verbatim}

which will avoid every reference to the graphics routines from \Rind{GDEBUG}.

\item The user code to define the {\it tracking media} and the geometry
of the setup should be inside the routine \Rind{UGEOM}. The pre-initialised
data structured can be read from disk, but it is recommended to call 
\Rind{GPHYSI} in any case, to initialise the cross-section tables. An 
example of a full material, geometry and detector design is given below
and has been extracted from the example {\tt GEXAM3}. Here only major
calls are shown, the redundant parts can be found in the source code
of \Rind{UGEOM} in {\tt GEXAM3}. 

The example shows the basic concept in 
{\tt GEANT}. First material parameters are defining the properities of
a detector material calling the subroutine \Rind{GSMATE}. 
Here in addition to the 16 predefined materials, the material definition of
Calcium is examplary shown. More information towards the predefined materials
and further use of material definition routines can be found in the 
section {\tt CONS001 - CONS101}.
Then tracking parameters are associated to the materials, defining
a so called tracking medium. Each {\tt GEANT}  volume must be 
associated to an existing tracking medium. Here in the example the
tracking medium {\tt 'TARGET'} is defined to exist of Calcium.
 
In the example shown below several
detector volumes are defined using the subroutine \Rind{GSVOLU}.
The defined volume have associated parameters of name, shape,
tracking medium and shape parameters.
In this example the volume {\tt 'TGT '} consists of the 
previously defined tracking medium {\tt 'TARGET'}.The 
volumes (and if necessary identical copies of them)
are then positioned according to the detector geometry. The 
volumes are positioned on the same level, or inside each other. By
setting the parameter {\tt ONLY} or  {\tt MANY} in the call of \Rind{GSPOS} 
the user has the opportunity to tell either {\tt GEANT} the logical
volume structure and to apply boolean operations (cutting, joining and
intersection) between two positioned volumes. More information about
the concept in defining volumes and positioning can be retrieved from
the section {\tt GEOM}. 

Finally the user is required to classify into sets all
sensitive detectors (defined as those volume defined as
detector via \Rind{GSDET} and other related routines, for which 
he wants to store hits in the hit data structure {\tt JHITS}.
\begin{multicols}{2}
\footnotesize
\begin{XMP}
      SUBROUTINE {\bf UGEOM}
+SEQ,GCLIST
+SEQ,GCONSP
      COMMON/DLSFLD/ISWFLD,FLDVAL
C--> {\sl Defining material parameters}
C--> {\sl Defining geometry parameters}
C--> {\sl Defining positioning parameters}
C--> {\sl Data statements, left out here, to}
C--> {\sl Define materials and mixtures}
      CALL GSMATE(17,'CALCIUM$',
     + 40.08,20.,1.55,10.4,23.2,0,0)
C--> {\sl .......}
C--> {\sl further material an mixture definitions}
C--> {\sl .......}
C--> {\sl Defining tracking media}
      CALL GSTMED( 2,'TARGET    $',
     + 17,0,0,0.,10.,.2,.1,.001,.5,0,0)
C--> {\sl .......}
C--> {\sl defining further media}
C--> {\sl .......}
C--> {\sl Define the reference frame}
      CALL GSVOLU
     +     ('CAVE','BOX ',1,CAVPAR,3,ICAVE)
C--> {\sl The targe box is shifted by 100 cm}
C--> {\sl in the cave.}
      CALL GSVOLU
     +     ('TGT ','BOX ',2,TGTPAR,3,ITGT )
      CALL GSVOLU
     +     ('TBIN','TRD1',3,TBIPAR,4,ITBIN)
      CALL GSVOLU
     +     ('TBOU','TRD1',4,TBOPAR,4,ITBOU)
      CALL GSVOLU
     +     ('ARM ','TRD1',1,ARMPAR,4,IARM)
      CALL GSVOLU
     +     ('FDIN','BOX ',9,FDIPAR,3,IFDIN)
      CALL GSVOLU
     +     ('FDOU','BOX ',4,FDOPAR,3,IFDOU)
C--> {\sl Define drift wire planes}
      CALL GSVOLU
     +     ('FSP ','BOX ',13,FDIPAR,3,IFSP)
C--> {\sl .......}
C--> {\sl further geometry definitions}
C--> {\sl .......}
C--> {\sl Positioning the daughter volumes in}
C--> {\sl their mother volume.}
      CALL GSPOS
     + ('TGT ',1,'TBIN', 0., 0.,-5.08,0,'ONLY')
      CALL GSPOS
     + ('TGT ',2,'TBIN', 0., 0.,-2.54,0,'ONLY')
      CALL GSPOS
     + ('TGT ',3,'TBIN', 0., 0., 0.  ,0,'ONLY')
      CALL GSPOS
     + ('TGT ',4,'TBIN', 0., 0., 2.54,0,'ONLY')
      CALL GSPOS
     + ('TGT ',5,'TBIN', 0., 0., 5.08,0,'ONLY')
      CALL GSPOS
     + ('TBIN',1,'TBOU', 0., 0.,   0.,0,'ONLY')
      CALL GSPOS
     + ('TBOU',1,'CAVE', 0., 0.,  ZTG,0,'ONLY')
      CALL GSPOS
     + ('ARM ',1,'CAVE',XLARM,0.,ZLARM,1,'ONLY')
      CALL GSPOS
     + ('ARM ',2,'CAVE',XRARM,0.,ZRARM,2,'ONLY')
      CALL GSPOS
     + ('FDOU',1,'ARM ',0.,0., DFDO  ,0,'ONLY')
      CALL GSPOS
     + ('FDIN',1,'FDOU',0.,0., 0.    ,0,'ONLY')
      CALL GSPOS
     + ('FSP ',1,'FDIN',0.,0.,-2.9975,0,'ONLY')
C--> {\sl .......}
C--> {\sl positioning of further volumes}
C--> {\sl .......}
C--> {\sl Print the stored definitions}
      CALL GLOOK('VOLU',LPRIN,NPRIN,ILOOK)
      IF(ILOOK.NE.0) CALL GPVOLU(0)
      CALL GLOOK('ROTM',LPRIN,NPRIN,ILOOK)
      IF(ILOOK.NE.0) CALL GPROTM(0)
      CALL GLOOK('TMED',LPRIN,NPRIN,ILOOK)
      IF(ILOOK.NE.0) CALL GPTMED(0)
      CALL GLOOK('MATE',LPRIN,NPRIN,ILOOK)
      IF(ILOOK.NE.0) CALL GPMATE(0)
      CALL GLOOK('PART',LPRIN,NPRIN,ILOOK)
      IF(ILOOK.NE.0) CALL GPPART(0)
C--> {\sl Clean up volume banks and perform}
C--> {\sl optimization}
      CALL GGCLOS
C--> {\sl Define sensitive detector parts}
      CALL GSDET
     &('DRFT','FSP ',2,NAFD ,NBITSV,1,100,
     &100,IDRFT,IFD )
C--> {\sl Define hit parameters}
      CALL GSDETH('DRFT','FSP ',9,NAMESH,
     &NBITSH,ORIG,FACT)
      RETURN
      END
\end{XMP}
\end{multicols}





\item It is convenient to store the input data records (see {\tt [BASE040]})
in an auxiliary file ({\tt gcards.dat} in the example). This allows to
have a standard input file and to overwrite selected input data records
as needed.
If, for instance, the standard {\tt gcards.dat} file contains the record
{\tt TRIG 1000} and a short test run is requested this can be obtained
with the following input:
\begin{verbatim}
READ 4
TRIG 10
STOP
\end{verbatim}
the first line instructs {\tt FFREAD} to open and process the file
connected with logical unit 4, and the second line (re-)defines the
number of events to be processed. The {\tt STOP} command ends the 
{\tt FFREAD} processing of the input.
\item 
In the above
example the common blocks have not been expanded in the code. The notation
used is the one of the {\tt PATCHY}/{\tt CMZ}~\cite{bib-PATCHY,bib-CMZ}
code management systems. These products, among other things, can
run as pre-processors, replacing the {\tt +SEQ,...}
instructions with the corresponding code fragments. Users are strongly
recommended to use these systems to include {\tt GEANT} common blocks
in their code. 

Long experience in supporting {\tt GEANT} users has shown that, as the
user program grows, typing errors in the insertion of the common blocks
{\it by hand} become very common, but difficult to find. The investment
needed to learn a code management system at the user level is usually 
negligible compared with the time and energy needed in hunting a
problem introduced by a mistyped common.
\end{itemize}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%  Last Mod.  8 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin {R.Brun} 
\Submitted{01.06.83}  \Revised{16.12.93}
\Version{Geant 3.16}\Routid{BASE110}
\Makehead{The system initialisation routines}
 
\Shubr{GZEBRA}{(NZ)}
 
Initialises the {\tt ZEBRA} memory manager to use the common \FCind{/GCBANK/}
to store the {\tt GEANT} data structures.
\begin{DLtt}{MMMMMMMM}
\item[NZ] ({\tt INTEGER}) size of the \FCind{/GCBANK/} common as it is
dimensioned in the main program.
\end{DLtt}
The size of the dynamic memory is set to {\tt NZ-30}. The common
\FCind{/GCBANK/} must be dimensioned in the main program.
{\tt ZEBRA}~\cite{bib-ZEBRA} must be initialised only once. The call to the
{\tt HBOOK} initialisation routine \Rind{HLIMIT} tries to initialise
{\tt ZEBRA} as well, and this will cause a program abort. To avoid this,
\Rind{HLIMIT} must be called {\bf after} \Rind{GZEBRA} and its argument
must be a negative number whose absolute value is the size of the
\FCind{/PAWC/} common containing the histograms. This is shown in the
example of main program given in {\tt[BASE100]}.

\Shubr{GINIT}{}
Presets labelled common block variables to default values.
See {\tt[BASE030]} for more information.

\Shubr{GFFGO}{}
Reads a set of data records via the {\tt FFREAD} package.
See {\tt[BASE040]} for more information on the possible data records.
\Rind{GFFGO} must be called after \Rind{GINIT}.

\Shubr{GZINIT}{}

Initialises the {\tt ZEBRA} permanent data structures in division
2 of the {\tt GEANT} main store in common  \FCind{/GCBANK/}.
Creates the user long term division (index {\tt IXCONS})
(minimum size {\tt 2000}, maximum size {\tt 8*NZEBRA/10}).
The {\tt ZEBRA} division {\tt IXDIV} is reserved for the event data structures
and the division {\tt IXCONS} for the initialisation data structures.
Allocates 5200 words of working space.
Initialises the link areas and a default run header bank {\tt JRUNG
[BASE299]}. Defines banks format for I/O.
\Rind{GZINIT} must be called after \Rind{GFFGO}.
 
A layout of the dynamic store is shown in fig \ref{fg:base110-1}.

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/base110-1.eps,width=16cm}
      \caption{Layout of the dynamic store}
      \label{fg:base110-1}
\end{figure}

\Shubr{GDINIT}{}
This routine
initialises the {\tt GEANT} drawing package {\tt[DRAW001]} and it has
to be called before any other graphic routine. {\tt GEANT} uses the
CERN-developed {\tt HIGZ}~\cite{bib-HIGZ} graphic library, and this
has to be initialised before the call to \Rind{GDINIT}.
In the example given
in {\tt [BASE100]} the routines \Rind{IGINIT} and \Rind{IGMETA}
are used. Alternatively, the routine \Rind{HPLINT} from HPLOT~\cite{bib-HPLOT}
can be used. This routine calls the appropriate procedures from {\tt HIGZ} to 
initialise the underlaying graphics system. At the moment {\tt HIGZ} can 
use several flavours of GKS~\cite{bib-gks2d,bib-gks3d,bib-GKS1}
and {\tt X11} and it is available on all machines where the CERN Program
Library has been installed.

\Shubr{GPHYSI}{}
Completes the data structure {\tt JMATE}, (see {\tt [PHYS100]}) calculating the
cross-section and stopping power tables.

\Shubr{GBHSTA}{}
Initialises the standard histograms requested by the user via the
data record {\tt HSTA}.
The following histogram keywords may be used :
\begin{DLtt}{MMMMMMMM}
\item[TIME]    time per event;
\item[SIZE]     size of division {\tt IXDIV} per event;
\item[MULT]    total number of tracks per event;
\item[NTRA]    number of {\it long life} tracks per event;
\item[STAK]    maximum stack size per event.
\end{DLtt}

\Rind{GBHSTA} should be called after \Rind{GFFGO}.

\Shubr{GGCLOS}{}
This routine has to be called at the end of the definition
of the geometry by the user, after thal all volumes have been defined
and positioned and all detectors defined. 
Failure to call this routine will prevent
the {\tt GEANT} system from working correctly. Main tasks of this routine
are:
\begin{itemize}
\item close the geometry package;
\item complete the {\tt JVOLUM} data structure;
\item process the detector definition provided by the user;
\item prepare the tables for the tracking speed optimisation requested
by the user via the \Rind{GSORD} routine or the {\tt OPTI} data record.
\end{itemize}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%  Last Mod.  8 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun}     
\Submitted{01.06.83}   \Revised{26.10.93}
\Version{Geant 3.16}\Routid{BASE200}
\Makehead{Steering routines for event processing}
\Shubr{GRUN}{}
Main routine to control a run of events. The following flow chart is only 
valid for the {\it batch} execution mode. For interactive applications, 
see section {\tt XINT}. A schematic description of the routine is shown 
in fig.~\ref{fg:base200-1}.
 
\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/base200-1.eps,width=16cm}
      \caption{Flow of the {\tt GRUN} routine.}
      \label{fg:base200-1}
\end{figure}

\Shubr{GTRIGI}{}
Initialisation routine for event processing:
\begin{itemize}
\item resets to 0 the flag {\tt IEOTRI} in \FCind{/GCFLAG/} and the counters
{\tt NTRACK} and {\tt NVERTX} in \FCind{/GCNUM/};
\item sets the debug flag
{\tt IDEBUG} in \FCind{/GCFLAG/}
to the value required for the current event;
\item creates a default header bank
{\tt JHEAD} for current event {\tt [BASE299]};
\item prints the sequence number, the event number and the random number
generator seeds,
under control of the flag {\tt ITEST} (data record {\tt DEBU}).
\end{itemize}
 
\Shubr{GTRIG}{}
 
Steering routine to process one event (trigger).
A schematic description of the routine is shown 
in fig.~\ref{fg:base200-2}.
 
\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/base200-2.eps,width=16cm}
      \caption{Flow of the {\tt GRUN} routine.}
      \label{fg:base200-2}
\end{figure}

Default routines provided by {\tt GEANT} are dummy.

\Shubr{GTRIGC}{}
The event division {\tt IXDIV} is cleared. The space
used by the current event may be used by the next one.
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{M.Maire}
\Submitted{14.12.93}  \Revised{14.12.93}
\Version{Geant 3.16}\Routid{BASE280}

\Makehead{Storing and retrieving {\tt JRUNG} and {\tt JHEAD} information}

\Shubr{GSRUNG}{(NUBUF,UBUF,IADR*)}
\begin{DLtt}{MMMMMMMM}
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\item[IADR] ({\tt INTEGER}) position where information is stored in the
user bank of the {\tt JRUNG} structure.
\end{DLtt}

This routine stores the first {\tt NUBUF} words of array {\tt BUF} in the
user bank attached to the structure {\tt JRUNG} (see {\tt [BASE299]}),
starting at location {\tt IADR+1}.
On exit {\tt IADR} is set to {\tt IADR+NUBUF}, allowing subsequent filling. 
This allows effectively 
to {\it add} information to the current {\tt JRUNG} bank, whether or not it has 
already an user buffer.

\Shubr{GFRUNG}{(NWRUNG*,IRUNG*,NUBUF*,UBUF*)}
\begin{DLtt}{MMMMMMMM}
\item[NWRUNG] ({\tt INTEGER}) number of words in {\tt JRUNG} bank;
\item[IRUNG] ({\tt REAL}) content of {\tt JRUNG} bank;
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\end{DLtt}

This routine retrieves the content of the {\tt JRUNG} bank and of the
user information added, if any.

\Shubr{GPRUNG}{}

This routine prints the content of the {\tt JRUNG} bank and of the
user information added, if any.

\Shubr{GSHEAD}{(NUBUF,UBUF,IADR*)}
\begin{DLtt}{MMMMMMMM}
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\item[IADR] ({\tt INTEGER}) position where information is stored in the
user bank of the {\tt JHEAD} structure.
\end{DLtt}

This routine stores the first {\tt NUBUF} words of array {\tt BUF} in the
user bank attached to the structure {\tt JHEAD} (see {\tt [BASE299]}),
starting at location {\tt IADR+1}.
On exit {\tt IADR} is set to {\tt IADR+NUBUF}, allowing subsequent filling. 
This allows effectively 
to {\it add} information to the current {\tt JHEAD} bank, whether or not it has 
already an user buffer.

\Shubr{GFHEAD}{(NWHEAD*,IHEAD*,NUBUF*,UBUF*)}
\begin{DLtt}{MMMMMMMM}
\item[NWHEAD] ({\tt INTEGER}) number of words in {\tt JHEAD} bank;
\item[IHEAD] ({\tt REAL}) content of {\tt JHEAD} bank;
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\end{DLtt}

This routine retrieves the content of the {\tt JHEAD} bank and of the
user information added, if any.

\Shubr{GPHEAD}{}

This routine prints the content of the {\tt JHEAD} bank and of the
user information added, if any.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Bruyant}  
\Submitted{01.10.84}  \Revised{14.12.93}
\Version{Geant 3.16}\Routid{BASE299}
\Makehead{The banks JRUNG and JHEAD}
Run bank {\tt JRUNG}:  1 user link, 30 data words
 
\vspace{0.7cm}
\begin{tabular}{r@{}ll}
\hspace{2cm} {\tt LQ(JRUNG} &{\tt-1)} &user link      \\
                                                      \\
{\tt IQ(JRUNG}&{\tt+1)} &{\tt IDRUN} (Run number)           \\
&{\tt+2 \dots +10)} &Reserved for user applications    \\
&{\tt+11)} &creation date for {\tt INIT} data structures \\
&{\tt+12)} &creation time for {\tt INIT} data structures \\
&{\tt+13)} &creation date for {\tt KINE}                 \\
&{\tt+14)} &creation time for {\tt KINE}                 \\
&{\tt+15)} &creation date for {\tt HITS}                 \\
&{\tt+16)} &creation time for {\tt HITS}                 \\
&{\tt+17)} &creation date for {\tt DIGI}                 \\
&{\tt+18)} &creation time for {\tt DIGI}                 \\
&{\tt+19)} &\parbox[t]{10cm}{{\tt NRNDM(1)}
First seed for the random number generator 
at the end of the last event generated}\\
&{\tt+20)} &\parbox[t]{10cm}{{\tt NRNDM(2)}
Second seed for the random number generator 
at the end of the last event generated}\\
&{\tt+21)} &{\tt GEANT} version number when {\tt INIT} created  \\
&{\tt+22)} &{\tt ZEBRA} version number when {\tt INIT} created  \\
&{\tt+23)} &{\tt GEANT} version number when {\tt KINE} created  \\
&{\tt+24)} &{\tt ZEBRA} version number when {\tt KINE} created  \\
&{\tt+25)} &{\tt GEANT} version number when {\tt HITS} created  \\
&{\tt+26)} &{\tt ZEBRA} version number when {\tt HITS} created  \\
&{\tt+27)} &{\tt GEANT} version number when {\tt DIGI} created  \\
&{\tt+28)} &{\tt ZEBRA} version number when {\tt DIGI} created  \\
&{\tt+29)} &\parbox[t]{10cm}{{\tt IEVENT} event sequence number 
at the end of the last generated event} \\
\end{tabular}
\vspace{0.7cm}
 
Header bank {\tt JHEAD}: 1 user link, {\tt NHEAD(=10)} data words
\vspace{0.7cm}
 
\begin{tabular}{r@{}lll}
\hspace{2cm} {\tt LQ(JHEAD} &{\tt-1)} &user link      \\
                                                       \\
{\tt IQ(JHEAD}&{\tt+1)} &{\tt IDRUN} &Run number         \\
&{\tt+2)} &{\tt IDEVT} &Event number                  \\
&{\tt+3)} &{\tt NRNDM(1)} &\parbox[t]{8.1cm}{Value of random number generator 
first seed at the beginning of the event} \\
&{\tt+4)} &{\tt NRNDM(2)} &\parbox[t]{8.1cm}{Value of random number generator 
second seed at the beginning of the event} \\
&{\tt+5 \dots 10)} & & Reserved for user applications         \\
\end{tabular}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%  Last Mod.  8 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{R.Brun}  
\Submitted{01.10.84} \Revised{08.11.93}
\Version{Geant 3.16}\Routid{BASE300}
\Makehead{Example of user termination routine}
\begin{verbatim}
    SUBROUTINE UGLAST
*
+SEQ,GCLIST
*
*       Call standard GEANT termination routine
    CALL GLAST
*
*       Terminate graphics
    CALL HPLEND
*
*       Close I/O buffers
    IF(NGET .NE. 0 .OR. NSAVE .NE. 0) CALL GCLOSE(0,IER)
*
*       Print histograms
    CALL HISTDO
*
    END
\end{verbatim}
\Shubr{GLAST}{}
Standard {\tt GEANT} termination routine:
\begin{itemize}
\item computes and prints the processing time per event;
\item calls \Rind{MZEND} to print the statistics relative to the current run;
\item if the structure {\tt JGSTAT} has been initialised, calls \Rind{GPSTAT}
{\tt [GEOM700]}.
\end{itemize}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%  Last Mod.  8 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Carena}
\Submitted{01.10.84}  \Revised{16.12.93}
\Version{Geant 3.16}\Routid{BASE400}
\Makehead{Debugging facilities}
The flags {\tt IDEBUG, ITEST} and {\tt ISWIT(1-10)} are available to
in the
common \FCind{/GCFLAG/} for debug control {\tt [BASE030]}.
The array {\tt ISWIT} is filled through the data record
{\tt SWIT}.
Some flags are used by \Rind{GHEISHA} {\tt [PHYS510]} and
by the routine \Rind{GDEBUG}.

The flag {\tt IDEBUG} is set to 1 in \Rind{GTRIGI} for the events
with sequence number from {\tt IDEMIN} to {\tt IDEMAX}, as specified by
the user on the data record {\tt DEBU}.
If {\tt IDEMIN} is negative, debug is
activated also in the initialisation phase.

The flag {\tt ITEST}, set by the user via the data
record {\tt DEBU}, is also used by \Rind{GTRIGI}.
The sequence number, the event number and the random numbers seeds are
printed at the beginning of each event every {\tt ITEST} from
{\tt IDEMIN} to {\tt IDEMAX}.

\section{Debug of data structures}
The contents of the data structures can be dumped by the routine
\Shubr{GPRINT}{(CHNAME,NUMB)}
\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) name of a top level data structure;
\item[NUMB] ({\tt INTEGER}) number of the substructure to be printed, 0 for all.
\end{DLtt}

Examples
\begin{itemize}
\item{\tt CALL GPRINT('KINE',0)} prints all banks {\tt JKINE};
\item{\tt CALL GPRINT('KINE',8)} prints {\tt JKINE} bank for track 8;
\item{\tt CALL GPRINT('VOLU',0)} prints all existing volumes.
\end{itemize}
The following names are recognised:
\begin{center}\tt
DIGI,HITS,KINE,MATE,VOLU,ROTM,SETS,TMED,PART,VERT,JXYZ
\end{center}
\Rind{GPRINT} calls selectively the routines:

\begin{center}
\begin{tabular}{llll}
\Rind{GPDIGI}{\tt ('*','*')} &
\Rind{GPHITS}{\tt ('*','*')} &
\Rind{GPKINE}{\tt (NUMB)}    & 
\Rind{GPMATE}{\tt (NUMB)}    \\
\Rind{GPVOLU}{\tt (NUMB)}    &
\Rind{GPROTM}{\tt (NUMB)}    &
\Rind{GPSETS}{\tt ('*','*')} &
\Rind{GPTMED}{\tt (NUMB)}    \\
\Rind{GPPART}{\tt (NUMB)}    &
\Rind{GPVERT}{\tt (NUMB)}    &
\Rind{GPJXYZ}{\tt (NUMB)}    &
\end{tabular}
\end{center}

These routines can be called directly by the user. In case of {\tt SETS},
{\tt HITS} and {\tt DIGI} the content of all detectors of all sets will
be printed, so {\tt NUMB} is irrelevant.

\section{Debug of events}
The development of an event can be followed via the routine:
\Shubr{GDEBUG}{}

which operates under the control of the {\tt ISWIT} array. It is the
user responsibility to call this routine from \Rind{GUSTEP}. If the
{\tt DEBUG} flag is active, the routine will perform as follows:
\begin{DLtt}{MMMMM}
\item[ISWIT(1)] ~

\begin{DLtt}{MMM}
\item[2]the content of the temporary stack for secondaries in the
common \FCind{/GCKING/} is printed;
\end{DLtt}
\item[ISWIT(2)] ~

\begin{DLtt}{MMM}
\item[1]the current point of the track is stored in the {\tt JDXYZ}
bank via the routine \Rind{GSXYZ};
\item[2]the current information on the track is printed via the
routine \Rind{GPCXYZ};
\item[3]the current step is drawn via the routine
\Rind{GDCXYZ};
\item[4]the current point of the track is stored in the {\tt JDXYZ}
bank via the routine \Rind{GSXYZ}. When the particle stops the track
is drawn via the routine \Rind{GDTRAK}
and the space occupied by the track in the structure {\tt JDXYZ}
released;
\end{DLtt}
\item[ISWIT(3)] ~

\begin{DLtt}{MMM}
\item[1]the current point of the track is stored in the {\tt JDXYZ}
bank via the routine \Rind{GSXYZ}.
\end{DLtt}
\end{DLtt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun}
\Submitted{08.08.87}  \Revised{08.11.93}
\Version{Geant 3.16}\Routid{BASE410}
\Makehead{Utility Routines}
 
\Shubr{GLOOK}{(CHNAME,IVECT,N,ILOOK*)}
\begin{DLtt}{MMMMMMMM}
\item[CHNAME]({\tt CHARACTER*4}) variable containing the name to be
searched for in {\tt IVECT};
\item[IVECT] ({\tt INTEGER}) array containing the ASCII code of the 
names among which
{\tt NAME} is searched. The names are stored 4 characters per word;
\item[N]({\tt INTEGER}) number of items in {\tt IVECT};
\item[ILOOK]({\tt INTEGER}) position in {\tt IVECT} where {\tt NAME} has
been found, 0 if not found.
\end{DLtt}

This routine is very useful when searching for a string stored 
in a {\tt ZEBRA} bank. For instance to find the
position of the {\tt 'CRYS'} volume in the volume bank, the following
piece of code could be written:

\begin{verbatim}
+SEQ,GCBANK.
+SEQ,GCNUM.
      .
      .
      .
      CALL GLOOK('CRYS',IQ(JVOLUM+1),NVOLUM,IVO)
      IF(IVO.GT.0) THEN
         JVO = LQ(JVOLUM-IVO)
      ELSE
         JVO = 0
      ENDIF
\end{verbatim}

{\tt JVO}, if different from 0, is the pointer to the data
bank containing the information relative to the volume {\tt 'CRYS'}.

\Shubr{GEVKEV}{(EGEV,ENERU*,CHUNIT*)}
\begin{DLtt}{MMMMMMMM}
\item[EGEV] ({\tt REAL}) input, energy in GeV;
\item[ENERU] ({\tt REAL}) output, energy in the new unit;
\item[CHUNIT] ({\tt CHARACTER*4}) unit in which the energy has been converted.
\end{DLtt}

This subroutine converts the input energy in GeV to a unit in which 
$1 \leq E \leq 999$. {\tt CHUNIT} contains the new
unit. The following piece of code illustrates the use of \Rind{GEVKEV}:
\begin{verbatim}
+SEQ,GCTRAK.
      CHARACTER*4 CHUNIT
      .
      .
      .
      CALL GEVKEV(DESTEP, DE, CHUNIT)
      WRITE(6,10000) DE, CHUNIT
10000 FORMAT(' The energy loss in this step is ',F7.2,A)
\end{verbatim}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Carminati}   
\Submitted{27.07.93}      \Revised{14.12.93}
\Version{Geant 3.16}      \Routid{BASE420}
\Makehead{The random number generator}
 
\Shubr{GRNDM}{(VEC*,LEN)}
\begin{DLtt}{MMMMMMMM}
\item[VEC] ({\tt REAL}) vector containing the generated random number;
\item[LEN] ({\tt INTEGER}) number of random numbers to generate.
\end{DLtt}

\Rind{GRNDM} generates a sequence of uniformly distributed random numbers in the
interval (0,1). The numbers are returned in a vector.
The code is a copy
of the CERN Program Library routine \Rind{RANECU}~\cite{bib-LECU,bib-JAM1} 
(entry V114).

Several independent sequences can be defined and used. Each sequence {\bf must}
be initialised by the user, otherwise the result is unpredictable. 
Two integer seeds are used to initialise a sequence. Not all pairs of
integers define a good random sequence or one which is independent from
others. Sections of the same random sequence can be defined as independent
sequences. The period of the generator is $2^{60} \approx 10^{18}$. 
A generation has
been performed in order to provide the seeds to start any of the generated
sections. There are 215 possible seed pairs and they are all $10{^9}$  numbers
apart. Thus a sequence started from one of the seed pairs, after $10{^9}$
numbers will start generating the next one. 

\Shubr{GRNDMQ}{(ISEED1,ISEED2,ISEQ,CHOPT)}
\begin{DLtt}{MMMMMMMM}
\item[ISEED1] ({\tt INTEGER}) first seed of the sequence;
\item[ISEED2] ({\tt INTEGER}) second seed of the sequence;
\item[ISEQ] ({\tt INTEGER}) number of the independent
sequence of random numbers referred to by this call. If
{\tt ISEQ}$\leq$0, then the last valid sequence used will be addressed
either for a save or a store. In case the option {\tt 'G'} is
specified, on output the variable will contain the sequence
actually used;
\item[CHOPT] ({\tt CHARACTER*1}) the action to be taken:
\begin{DLtt}{MMMM}
\item[' ']  if 1$\leq${\tt ISEQ}$\leq$215, sequence number {\tt ISEQ} will be
initialised with the seeds of the pre-computed
independent sequence {\tt ISEQ}.

If {\tt ISEQ}$\leq$0 or {\tt ISEQ}$>$215, sequence number 1 will be
initialised with the default seeds. {\tt ISEED1} and {\tt ISEED2} are
ignored;
\item['G']  get the present status of the generator: the two integer
seeds {\tt ISEED1} and {\tt ISEED2} will be returned for sequence
{\tt ISEQ};
\item['S']  set the status of the generator.
The two integer seeds {\tt ISEED1} and {\tt ISEED2} will be
used to restart the generator for sequence {\tt ISEQ}.
\item['SH']  the same action as for {\tt 'S'} and store the two
integer seeds {\tt ISEED1} and {\tt ISEED2} in the event header bank.
\item['Q']  Get the pre-generated seeds for {\tt ISEQ} 
(1$\leq${\tt ISEQ}$\leq$215).
There are 215 pre-generated sequences each one will
generate $10^{9}$  numbers before reproducing the following
one.
\end{DLtt}
\end{DLtt}
 
Initialises the random number generator.
 
\Sfunc{GARNDM}{VALUE = GARNDM(DUMMY)}

\begin{DLtt}{MMMMMMMM}
\item[DUMMY] ({\tt REAL}) dummy parameter, ignored;
\end{DLtt}

Returns a random number $r$ distributed as $e^{-x}$. $r = -\ln(\eta)$
where $\eta$ is a random number extracted by \Rind{GRNDM}.

\Shubr{GPOISS}{(AMVEC,NPVEC*,LEN)}

\begin{DLtt}{MMMMMMMM}
\item[AMVEC] ({\tt REAL}) array of length {\tt LEN} containing the average
values of the Poisson distributions requested;
\item[NPVEC] ({\tt INTEGER}) array of length {\tt LEN} containing the random
numbers: {\tt NPVEC(I)} is a random number with a Poisson distribution of
average {\tt AMVEC(I)};
\item[LEN] ({\tt INTEGER}) number of random numbers requested.
\end{DLtt}

This routine extracts integer random numbers according to the
Poisson distribution. Given a Poisson distribution of average $\lambda \leq 16$
and $r$ uniformly distributed between 0 and 1, the method used is the 
following:
\begin{enumerate}
\item let $P = \exp(-\lambda)$, $N=0$ and $S=P$;
\item if $r\leq S$ accept $N$;
\item let $N=N+1$, $P=P \lambda/N$, $S=S+P$ and go back to 2;
\end{enumerate}

If $\lambda > 16$, a gaussian distribution with average $\lambda$ and 
$\sigma = \sqrt{\lambda}$ is generated.

\putbib[cnasbibl,geabibl]
\end{bibunit}
 
%%     CONS part     %%
 
\begin{bibunit}[unsrt]
\renewcommand{\bibname}{CONS Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{F.Bruyant}   
\Version{Geant 3.16}\Routid{CONS001}
\Submitted{01.10.84}    \Revised{17.12.93}
\Makehead{Introduction to the section {\tt CONS}}
\section{Introduction}
 
The setup where the particles are transported is represented by a 
structure of geometrical volumes. Each volume is
filled with matter (which can have the properties of the vacuum in case
of it contains no matter).

The matter composing the volumes is described via
two sets of attributes. The first set is relative to the nature
of the {\it material} composing the volume, and contains information
such as the atomic number, the atomic weight, the density and so on
(see the description of the routine \Rind{GSMATE} in this section for
more information). 

The second set of attributes is relevant to the
process of particle transport 
and they define a so-called {\it tracking medium}. These are
parameters such as the material composing the volume,
the magnetic field, the required tracking precision,
the maximum energy that can be lost in one step and so on (see the
description of the routine \Rind{GSTMED} in this section for more
information).

Each tracking medium refers to a material via a {\it material
number} which is assigned by the user. Different tracking media can, with
some limitation, refer to the same material.

Each volume is filled by a tracking medium identified by 
a {\it medium number}.
Different volumes may have the same medium number (see {\tt [GEOM]}).
 
The transport of particles through a
setup ({\tt [TRAK]}) requires access to
data which describe:
\begin{itemize}
\item   the geometry of the setup;
\item   the {\it material} and {\it tracking medium} parameters;
\item   the particle properties.
\end{itemize}
The section {\tt [CONS]} contains the routines
for the storage and retrieval of information related to materials,
tracking media and the particles.

{\bf Important note:} many entities in {\tt GEANT} are user-defined
via a subroutine call. One of the arguments of this subroutine is 
a integer number which identifies the entity. Examples are materials,
tracking media, particles and so on. It can be tempting, for booking
purposes, to use very large numbers. For instance, in a large detector,
the number of all the materials in the hadronic calorimeter could be
$1001 \leq I \leq 2000$. Even if these conventions are very handy, they
can introduce a performance penalty.

For reasons of speed, the number provided by the user is used directly
as the number of the link in the {\tt ZEBRA} data structure indicating
where to store the pointer to
the bank containing the information on the entity. {\tt ZEBRA} 
pointers are contiguous. Defining an object with a user number of $1000$
forces {\tt ZEBRA} to allow space for $1000$ links. This entails a loss
of space ($999$ words), but much worse than that, induces {\tt ZEBRA} to
believe that there are in fact $999$ more banks. At every operation which 
causes a {\it relocation} of banks, {\tt ZEBRA} will check all the possible 
links, which can be very time consuming.

So values of user-defined entities must be kept as small as possible and
contiguous. In large applications one could write a routine which returns
the next free number to be allocated, which can then be stored in a variable
and always referenced symbolically, freeing the user from the need to define
ranges. As an example we give here a function performing this operation
for the material number:
\begin{verbatim}
      FUNCTION NEXTMA()
+SEQ, GCBANK
      IF(JMATE.LE.0) THEN
         NEXTMA = 1
      ELSE
         DO 10 IMAT = 1, IQ(JMATE-2)
            IF(LQ(JMATE-IMAT).EQ.0) GOTO 20
  10     CONTINUE
  20     NEXTMA = IMAT
      ENDIF
      END
\end{verbatim}

\section{Materials}
The material constants are stored in the data structure {\tt JMATE} via the 
routine \Rind{GSMATE} and can be retrieved via the routine \Rind{GFMATE} and 
printed via the routine \Rind{GPMATE}. The routine \Rind{GMATE} calls
repeatedly the routine \Rind{GSMATE} to define a standard set of materials, 
but its use is not mandatory. Mixtures of basic materials, compounds or
molecules with atoms
from different basic materials, may also be defined and their characteristics
are stored in the structure {\tt JMATE}, through calls to the routine
\Rind{GSMIXT}. Mixtures of compounds are allowed.

Quantities such as energy loss and cross-section tables (see {\tt [PHYS]}),
computed during the initialisation of the program are stored in the 
structure {\tt JMATE}. These can be accessed through the routine \Rind{GFTMAT}
and plotted or printed through the routines \Rind{GPLMAT} and \Rind{GPRMAT} 
respectively.

\section{Tracking media}
 
The tracking medium
parameters are stored in the data
structure {\tt JTMED} by the routine \Rind{GSTMED}. Details
about these parameters are given
in {\tt [TRAK]}. They can be accessed with the routine
\Rind{GFTMED} and printed with the routine \Rind{GPTMED}.

The correctness of the transport process and thus the reliability
of the results obtained with {\tt GEANT} depend critically on the
values of the {\it tracking medium parameters}. To help the user,
most of the parameters are recalculated by default by {\tt GEANT}
irrespective of the value assigned by the user. Advanced users
can control the value of the parameters thus bypassing the automatic
computation. See the description of the routine \Rind{GSTMED} for
more information.

The tracking thresholds, and other parameters and flags that control
the physics processes, defined in \Rind{GINIT} and possibly
modified through the relevant data records, are also stored in the structure
{\tt JTMED}. These parameters can be redefined for each tracking medium
via the routine \Rind{GSTPAR}.

\section{Particles}
The parameters of the particles transported by {\tt GEANT}
are stored in the data structure
{\tt JPART} via the routine \Rind{GSPART}. 
The decay properties of particles are defined via the routine \Rind{GSDK}.
The particle constants can be
accessed with the routine \Rind{GFPART} and printed with the routine
\Rind{GPPART}.

The routine \Rind{GPART} defines the standard table of particles,
branching ratios and decay modes. This routine needs to be called for 
the {\tt GEANT} system to work properly. 
\Rind{GPART} calls the routine \Rind{GSPART} for the
particle properties and \Rind{GSDK} for the decays for
each particle in the standard {\tt GEANT} table. 
The user may call \Rind{GSPART} and
\Rind{GSDK} to extend or modify the table defined by \Rind {GPART}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%  Last Mod.  8 June 1993 1300   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, G.N.Patrick} 
\Version{Geant 3.16}\Routid{CONS100}
\Submitted{06.06.83}             \Revised{01.11.93}
\Makehead{Material definition}
\Shubr{GMATE}{}
 
Stores the following standard material constants
in the data structure \cite{bib-PDGD}
{\tt JMATE}.
\begin{center}\begin{tabular}{|l|r|r|r|r|r|}
 \hline
Material   &No. &A         &Z       &Density   &Radiat L   \\
\hline
Hydrogen   &1   &1.010     &1.000   &0.071     &865.000    \\
Deuterium  &2   &2.010     &1.000   &0.162     &757.000    \\
Helium     &3   &4.000     &2.000   &0.125     &755.000    \\
Lithium    &4   &6.940     &3.000   &0.534     &155.000    \\
Beryllium  &5   &9.010     &4.000   &1.848     &35.300     \\
Carbon     &6   &12.010    &6.000   &2.265     &18.8       \\
Nitrogen   &7   &14.010    &7.000   &0.808     &44.500     \\
Neon       &8   &20.180    &10.000  &1.207     &24.000     \\
Aluminium  &9   &26.980    &13.000  &2.700     &8.900      \\
Iron       &10  &55.850    &26.000  &7.870     &1.760      \\
Copper     &11  &63.540    &29.000  &8.960     &1.430      \\
Tungsten   &12  &183.850   &74.000  &19.300    &0.350      \\
Lead       &13  &207.190   &82.000  &11.350    &0.560      \\
Uranium    &14  &238.030   &92.000  &18.950    &0.320      \\
Air        &15  &14.610    &7.300   &$1.205 \times 10^{-3}$ &30423  \\
Vacuum     &16  &$10^{-16}$ &$10^{-16}$ &$10^{-16}$ &$10^{16}$ \\
\hline
\end{tabular} \end{center}
 
{\bf Note:} this table provides some material definition with standard
properties. Advanced user will want to define their own table of materials,
which can be done with the routine \Rind{GSMATE}, described below.
 
\Shubr{GSMATE}{(IMATE,CHNAMA,A,Z,DENS,RADL,ABSL,UBUF,NWBUF)}
Stores the constants for the material {\tt IMATE} in the data structure
{\tt JMATE}.
\begin{DLtt}{MMMMMMMM}
\item[IMATE]      ({\tt INTEGER}) material number;
\item[CHNAMA]     ({\tt CHARACTER*20}) material name;
\item[A]           ({\tt REAL}) atomic weight;
\item[Z]           ({\tt REAL})  atomic number;
\item[DENS]        ({\tt REAL}) density in g cm$^{-3}$;
\item[RADL]        ({\tt REAL}) radiation length in cm;
\item[ABSL]        ({\tt REAL}) absorption length in cm. This parameter
is ignored by {\tt GEANT}, but it has been kept in the calling sequence for
backward compatibility;
\item[UBUF]       ({\tt REAL}) array of {\tt NWBUF} additional user parameters;
\item[NWBUF]      ({\tt INTEGER}) number of user words in {\tt UBUF}.
\end{DLtt}
\Shubr{GFMATE}{(IMATE,CHNAMA*,A*,Z*,DENS*,RADL*,ABSL*,UBUF*,NWBUF*)}
Retrieves the constants of
material {\tt IMATE} from the data structure {\tt JMATE}. The parameters
are the same as for \Rind{GSMATE}.
\Shubr{GPMATE}{(IMATE)}
Prints the material constants:
\begin{DLtt}{MMMMMMMM}
\item[IMATE]   {\tt (INTEGER)} material number. If {\tt IMATE=0} then all
materials will be printed. If {\tt IMATE<0} the material number {\tt -IMATE}
will be printed without the header describing the value of the various fields.
\end{DLtt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, M.Maire}
\Version{Geant 3.16}\Routid{CONS101}
\Submitted{23.04.86}         \Revised{03.11.93}
\Makehead{Retrieve material cross-sections and stopping power}
 
\Shubr{GFTMAT}{(IMATE,IPART,CHMECA,KDIM,TKIN,VALUE*,PCUT*,IXST*)}
 
{\bf Retrieve} and {\bf interpolate} the $dE/dx$ and cross-sections
tabulated in material banks corresponding to a given array of kinetic
energy bins. 

\begin{DLtt}{MMMMMMMM}
\item[IMATE]     ({\tt INTEGER}) material number;
\item[IPART]     ({\tt INTEGER}) particle number;
\item[CHMECA] ({\tt CHARACTER*4}) name of the mechanism bank to be retrieved;
\item[KDIM]  ({\tt INTEGER}) dimension of the arrays {\tt TKIN} and {\tt VALUE};
\item[TKIN]   ({\tt REAL}) array of kinetic energies in GeV;
\item [VALUE]    ({\tt REAL}) array of energy losses in MeV cm$^{-1}$, 
or macroscopic cross sections in cm$^{-1}$;
\item[PCUT]({\tt REAL}) array containing the 5 energy thresholds for the material
in GeV ({\tt CUTGAM}, {\tt CUTELE}, {\tt CUTNEU}, {\tt CUTHAD}, {\tt CUTMUO});
\item[IXST] ({\tt INTEGER}) return code:
\begin{DLtt}{MMM}
\item[0]   the table was not filled:
\item[1]   normal return;
values are returned into the {\tt VALUE} array;
\end{DLtt}
\end{DLtt}

The mechanisms have the following
conventional name and a code number ({\tt IMECA}):
 
\begin{DLtt}{MMMMMMMM}
\item[HADF (~1)] total hadronic interaction cross-section according
to {\tt FLUKA};
\item[INEF (~2)] hadronic inelastic cross-section according
to {\tt FLUKA};
\item[ELAF (~3)] hadronic elastic cross-section according
to {\tt FLUKA};
\item[NULL (~4)] unused;
\item[NULL (~5)] unused;
\item[HADG (~6)] total hadronic interaction cross-section according
to {\tt GHEISHA};
\item[INEG (~7)] hadronic inelastic cross-section according
to {\tt GHEISHA};
\item[ELAG (~8)] hadronic elastic cross-section according
to {\tt GHEISHA};
\item[FISG (~9)] nuclear fission cross-section according
to {\tt GHEISHA};
\item[CAPG (10)] neutron capture cross-section according
to {\tt GHEISHA};
\item[LOSS (11)] stopping power;
\item[PHOT (12)] photoelectric cross-section;
\item[ANNI (13)] positron annihilation cross-section;
\item[COMP (14)] Compton effect cross-section;
\item[BREM (15)] bremsstrahlung cross-section;
\item[PAIR (16)] photon and muon direct- \Pem\Pep pair cross-section;
\item[DRAY (17)] $\delta$-rays cross-section;
\item[PFIS (18)] photo-fission cross-section;
\item[RAYL (19)] Rayleigh scattering cross-section;
\item[MUNU (20)] muon-nuclear interaction cross-section;
\item[RANG (21)] range in cm;
\item[STEP (22)] maximum step in cm.
\end{DLtt}
 
{\bf Note:}
Common \FCind{/GCMULO/} contains an array {\tt ELOW(200)}
(see {\tt [CONS199]})
with {\tt NEK1} kinetic energy values
ranging from {\tt EKMIN} to {\tt EKMAX}. \Rind{GPHYSI} initialises by
default the first 91 locations of {\tt ELOW} with values of energy
from $10^{-5}$ GeV (10 keV) to $10^{4}$ GeV (10 TeV) equally spaced on
logarithmic scale. This can be controlled by the user via the data
record or the interactive command {\tt ERAN} ({\tt [BASE040]}).
{\tt ELOW} can be used as the input argument {\tt TKIN}, e.g.:
\begin{verbatim}
CALL GFTMAT (10, 1,'PHOT',NEK1, ELOW ,VALUE, PCUT, IXST)
\end{verbatim}
will return in array {\tt VALUE} the photoelectric cross-section
in material number 10.

\Shubr{GPLMAT}{(IMATE,IPART,CHMECA,KDIM,TKIN,IDM)}
 
{\bf Plot} and {\bf interpolate} the $dE/dx$ and cross-sections
tabulated in material banks corresponding to a given array of kinetic
energy bins. The mechanisms are the same as the previous routine. 
If the mechanism name is {\tt 'ALL'}, then all the mechanisms will
be plotted.
 
The first five parameters have the same meaning as in the previous routine
and:
\begin{DLtt}{MMMMMMMM}
\item[IDM]({\tt INTEGER}) treatment of the created histogram(s):
\begin{DLtt}{MMM}
\item[$>0$]fill, print, keep histogram(s);
\item[$=0$]fill, print, delete histogram(s);
\item[$<0$]fill, noprint, keep histogram(s).
\end{DLtt}
\end{DLtt}
The result is not returned to the user as is the case in the previous
routine but it is put in an {\tt HBOOK} histogram. The {\tt HBOOK}
package needs to be initialised by the user via the routine \Rind{HLIMIT},
see {\tt [BASE100]} for more information.
The histogram identifier is calculated as: {\tt 10000*IMATE+100*IPART+IMECA}
where {\tt IMECA} is the mechanism code listed above.
 
\Shubr{GPRMAT}{(IMATE,IPART,CHMECA,KDIM,TKIN)}
 
{\bf Print} and {\bf interpolate} the $dE/dx$ and cross-sections
tabulated in material banks corresponding to a given array of kinetic
energy bins. The mechanisms are the same as the previous routine. 
If the mechanism name is {\tt 'ALL'}, then all the mechanisms will
be printed.

The result is printed in the form of a table.
 
The five parameters have the same meaning as in the previous routine.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, M.Maire, J.Allison}
\Documentation{M.Maire}
\Version{Geant 3.16}\Routid{CONS110}
\Submitted{01.06.83}          \Revised{08.12.93}
\Makehead{Mixtures and Compounds}
\Shubr{GSMIXT}{(IMATE,NAMATE,A,Z,DENS,NLMAT,WMAT*)}
 
Defines mixture or compound {\tt IMATE} as composed by
{\tt NLMAT} materials defined via
the arrays {\tt A}, {\tt Z} and {\tt WMAT}.
Mixtures of compounds can also be defined.
 
\begin{DLtt}{MMMMMMMMMM}
\item[IMATE]({\tt INTEGER}) user material (mixture) number;
\item[NAMATE]({\tt CHARACTER*20}) mixture name;
\item[A]({\tt REAL}) array of atomic weights;
\item[Z]({\tt REAL}) array of atomic numbers;
\item[DENS]({\tt REAL}) density in g cm$^{-3}$;
\item[NLMAT]({\tt INTEGER}) number of elements in the mixture;
\begin{DLtt}{MMMMM}
\item[$> 0$]{\tt WMAT} contains the proportion
by weights of each material in the mixture;
\item[$< 0$]{\tt WMAT} contains the proportion by number of
atoms of each kind, the content of {\tt WMAT} in output is
changed to contain the relative weights;
\end{DLtt}
\end{DLtt}
 
\subsection*{Method}
For a compound ({\tt NLMAT} $< 0$), the {\it molecular} weight and charge are:
\[
A_{mol} = \sum_i n_i A_i\mbox{\hspace{3cm}} Z_{mol} = \sum_i n_i Z_i
\]
where $n_i$ {\tt = WMAT(I)} is the number of atoms of the i$^{th}$
component of the molecule. In this case the proportion by weight is:
\[
 p_i = \frac{n_i A_i}{A_{mol}}
\]
where $p_i$ {\tt = WMAT(I)} in output.
From the relative weights,
\Rind{GSMIXT} works out the effective atomic weight and atomic number
according to the following formulas:
\[
A_{eff} = \sum_i p_i A_i \mbox{\hspace{3cm}}   Z_{eff} = \sum_i p_i Z_i
\]
which are stored in the {\tt JMATE} data structure {\tt [CONS199]}
together with the radiation length.
 
The radiation length is computed according to the EGS
manual \cite{bib-EGS3}, formula 268 (37), for an element:
\[
\frac{1} {\rho \: X_0 }=4 \alpha r_{0}^2 N_{Av}  \frac{1}{A}
     Z(Z+ \xi (Z)) \left[ \ln \frac{183}{Z^{1/3}}
      -F_c (Z) \right]
\]
where
\begin{DLtt}{MMMMMMMM}
\item[$X_0$]   radiation length (in cm);
\item[$\rho$] density (in g cm$^{-3}$);
\item[$\alpha$] fine structure constant;
\item[$r$]classical electron radius (in cm);
\item[$N_{Av}$] Avogadro's number;
\item[$A$]atomic weight;
\item[$Z$]atomic number;
\item[$F_c(Z)$] Coulomb correction function.
\end{DLtt}
\[
F_c (Z) = (\alpha Z)^2 \left[ \frac{1}
     { 1+( \alpha Z)^2}  +0.20206-0.0369( \alpha Z)^2
      +0.0083(\alpha Z)^4 -0.0020(\alpha Z)^6 \right]
\]
\[
\xi (Z) = \frac{\ln \frac{1440}{Z^{2/3}}}
        {\ln \frac{183}{Z^{1/3}} - F_c (Z)}
\]
for a compound or mixture:
\[
 \frac{1}{\rho X_0}=\sum_i \frac{p_i}{\rho_i X_{0i}}
\]
where $p_i$ is the proportion by weight of the i$^{th}$ element.
For more information on the organisation of the data in memory
see {\tt [CONS199]}.

The effective absorption length $\lambda$ is defined as
the interaction length of a 5GeV pion in the material:
\[
\frac{1}{\lambda} = \sum_i \frac{p_i}{\lambda_i}
\hspace{2cm} \frac{1}{\lambda_i} = \frac{\sigma^{\pi}_{i}(5GeV)
 N_{Av}}{A_{i}} 
\hspace{0.5cm} \mbox{g$^{-1}$ cm$^{2}$}
\]
Once this value has been determined, an effective hadronic atomic weight 
($A_{h-eff}$) is calculated by the routine \Rind{GHMIX} \cite{bib-GHMI}
and stored in the data structure.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun}
\Documentation{R.Brun, M.Maire}
\Version{Geant 3.16}\Routid{CONS199}
\Submitted{01.06.83}             \Revised{23.03.94}
\Makehead{The Material data structure {\tt JMATE}}

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/cons199-1.eps,width=\linewidth}
      \caption{{\tt JMA = LQ(JMATE-IMATE)} pointer to material {\tt IMATE}}
      \label{cons199-1}
\end{figure}

When the subroutine GPHYSI is called at initialisation time the
following substructure is created for each material whose number
is refered to by any of the user defined tracking media.

\begin{figure}[p]
      \centering
      \epsfig{file=eps/cons199-2.eps,height=.95\textheight}
      \caption{Material data structure}
      \label{cons199-2}
\end{figure}

{\bf Note:}
The energy losses are stored in ${\rm GeV \: cm^{-1}}$. The inverse of
the macroscopic cross-section (i.e. the mean free path, in cm), is stored
instead of the cross-section, to speed up the calculation of the distance
to the next interaction point.
 
\section{Energy binning}
 
\begin{center}
\begin{tabular}{|c|l|l|}
\hline
IDECAD  &Bin number  &Energy range \\
& &IEKBIN    \\
\hline
 
1  &1 $\rightarrow$ 10  &10 KeV $\rightarrow$ 100 KeV          \\
2  &11 $\rightarrow$ 20  &100 KeV $\rightarrow$ 1000 KeV       \\
3  &21 $\rightarrow$ 30  &1 MeV $\rightarrow$ 10 MeV           \\
4  &31 $\rightarrow$ 40  &10 MeV $\rightarrow$ 100 MeV         \\
5  &41 $\rightarrow$ 50  &100 MeV $\rightarrow$ 1000 MeV       \\
6  &51 $\rightarrow$ 60  &1 GeV $\rightarrow$ 10 GeV           \\
7  &61 $\rightarrow$ 70  &10 GeV $\rightarrow$ 100 GeV         \\
8  &71 $\rightarrow$ 80  &100 GeV $\rightarrow$ 1000 GeV       \\
9  &81 $\rightarrow$ 90  &1 TeV $\rightarrow$ 10 TeV           \\
\hline
\end{tabular}
\end{center}
 
The values of the bins are kept in the array ELOW(90) in /GCMULO/ :
 
e.g. ELOW(1) = 10 KeV,  ELOW(2) = 20 KeV  ... ELOW(10) = 100 KeV
 
     ELOW(11) = 100 KeV,  ELOW(12) = 200 KeV ...
 
\section{Energy loss for electrons and positrons}
 
Words 1 to 90, for electrons:  DE/DX = Ionisation (Moller) +brems.
 
Words 91 to 180, for positrons:  DE/DX = Ionisation (Bhabha) +brems.
[PHYS 330, 340].
 
\section{Energy loss for muons}
 
  DE/DX = Ionisation +brems. +Direct \Pep\Pem production +Nuclear interacti     on
[PHYS 430, 440, 450].
 
\section{Energy loss for other charged particles}
 
  DE/DX = Ionisation
 
The values are computed for a proton (mass Mp). For any other
particle with mass M and kinetic energy T,
one has to compute the equivalent proton kinetic energy as T*Mp/M
and look at the corresponding energy binning [PHYS 430].
 
\section{Some material constants}
 
Various constants which are material dependent and needed to compute the
cross-sections.
 
See routine GPROBI.
 
\section{Mixture and compound parameters}
 
Words 1 to 4*NLM  where  NLM is the number of mixture or compound
components [CONS110].
 
\section{Photo-electric effect. Muon nuclear interaction}
 
As the photo-electric effect vanishes at high energies
whereas the muon nuclear
interaction cross-section is null at low energies, the two effects are
stored within the same bank in order to save space.
 
From 10 KeV to 50 MeV : Photo-electric effect mean free path [PHYS 230]
From 1 GeV to 10 TeV : Muon nuclear interaction mean free path
[PHYS 460].
 
\section{Positron annihilation}
 
[PHYS 350].
 
\section{Compton scattering}
 
[PHYS 220].
 
\section{Bremsstrahlung for electrons and muons}
 
Words 1 to 90, mean free path for electrons [PHYS 340]
Words 91 to 180, mean free path for muons [PHYS 440].
 
\section{Pair production by gammas and muons}
 
Words 1 to 90, for gammas [PHYS 210].
Words 91 to 180, for muons [PHYS 450].
 
\section{Delta ray production by electrons and muons}
 
Words 1 to 90, for \Pem\Pem $\rightarrow$ \Pem\Pem [PHYS 330].
 
Words 91 to 180, for \Pep\Pem $\rightarrow$ \Pep\Pem [PHYS 330]
 
Words 181 to 270, for \Pem $\rightarrow$ \Pem [PHYS 430].
 
\section{Photo-fission}
 
Only for material with atomic number A>200 [PHYS 240].
%\end{document}
 
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Version 1.00                                                   %
%                                                                 %
%  Last Mod. 12 June 1993 1700   MG                               %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun}            
\Revision{F.Carminati, M.Maire}
\Version{Geant 3.16}           \Routid{CONS200}
\Submitted{01.06.83}           \Revised{08.12.93}
\Makehead{Tracking medium parameters}
\section*{Description of the routines}
\Shubr{GSTMED}{(ITMED,NATMED,NMAT,ISVOL,IFIELD,FIELDM,TMAXFD,STEMAX,
                DEEMAX,EPSIL,STMIN,UBUF,NWBUF)}
This routine associates a set of tracking parameters to a material, defining
a so-called {\it tracking medium}. Every {\tt GEANT} volume must be 
associated to an existing tracking medium. The routine
stores the parameters of the tracking
medium {\tt ITMED} in the data structure {\tt JTMED}.
\begin{DLtt}{MMMMMMMM}
\item[ITMED]      ({\tt INTEGER}) tracking medium number;
\item[NATMED]     ({\tt CHARACTER*20}) tracking medium name;
\item[NMAT]       ({\tt INTEGER}) material number corresponding to {\tt ITMED};
\item[ISVOL]      ({\tt INTEGER}) {\it sensitivity} flag (see later):
\begin{DLtt}{MMMM}
\item[$\leq$0] not a sensitive volume;
\item[$>$0] sensitive volume;
\end{DLtt}
\item[IFIELD]     ({\tt INTEGER}) magnetic field flag:
\begin{DLtt}{MMMM}
\item[=0]         no magnetic field;
\item[=1]         strongly 
inhomogeneous magnetic field (returned by the user function
\Rind{GUFLD}): tracking performed with the Runge-Kutta method by the
routine \Rind{GRKUTA};
\item[=2]         inhomogeneous magnetic field (returned by the user function
\Rind{GUFLD}), tracking along a helix performed by the routine \Rind{GHELIX};
\item[=3]         uniform magnetic field along the {\tt z} axis of strength
{\tt FIELDM}, tracking performed along a helix by the routine \Rind{GHELX3};
\end{DLtt}
\item[FIELDM]     ({\tt REAL}) maximum field value (in Kilogauss);
\item[TMAXFD]     ({\tt REAL}) maximum angular deviation due to the magnetic
field permitted in one step (in degrees);
\item[STEMAX]     ({\tt REAL}) maximum step permitted (cm);
\item[DEEMAX]     ({\tt REAL}) maximum fractional energy loss in one step ($0<$
                  {\tt DEEMAX} $\leq 1$);
\item[EPSIL]      ({\tt REAL}) boundary crossing precision (cm);
\item[STMIN]      ({\tt REAL}) minimum value for the maximum step imposed by 
energy loss, multiple scattering, \v{C}erenkov or magnetic field effects (cm);
\item[UBUF]       ({\tt REAL}) array of {\tt NWBUF} additional user parameters;
\item[NWBUF]      ({\tt INTEGER}) number of additional user parameters.
\end{DLtt}
 
{\bf Note:} the tracking medium number can in principle be any positive
integer from 1 to 65,535. However this number is used directly by {\tt GEANT}
as the number of the pointer to the data structure where the information
is stored. When a pointer is defined,
all pointers from 1 to the one allocated are created, if not already existing.
Every time data structures are moved in memory, all the
links are potentially scanned for update. This can be time consuming and
it can seriously affect performances. So a continuous
range of numbers should be used for tracking media.

\Shubr{GFTMED}{(ITMED,NATMED*,NMAT*,ISVOL*,IFIELD*,FIELDM*,TMAXFD*,
                STEMAX*,DEEMAX*,EPSIL*,STMIN*,UBUF*,NWBUF*)}
 
Extracts the parameters of the tracking medium {\tt ITMED}
from the data structure {\tt JTMED}.
 
\Shubr{GPTMED}{(ITMED)}
 
Prints the tracking medium parameters for the given medium.
\begin{DLtt}{MMMMM}
\item[ITMED]      ({\tt INTEGER}) tracking medium to be printed,
all tracking media if {\tt ITMED}=0.
\end{DLtt}

\section*{Automatic calculation of the tracking parameters}

The results of the simulation depend critically on the choice of the tracking
medium parameters. To make of {\tt GEANT} a reliable and consistent predictive
tool, the calculation of these parameters has been automated.
In a normal GEANT run, the variable {\tt IGAUTO} in common
\FCind{/GCTRAK/} is set to 1. In this case the following parameters 
are calculated by the program:
\begin{eqnarray*}
\mbox{\tt TMAXFD} & = & \left\{
\begin{array}{LL}
20^{\circ} & \mbox{if {\tt TMAXFD} $\leq 0$ or {\tt TMAXFD} $ > 20$} \\
\mbox{\it input value} & \mbox{if $0 <$ {\tt TMAXFD} $\leq 20$}
\end{array} \right . \\
\mbox{\tt STEMAX} & = & \phantom{\{} 
\begin{array}{LL} \mbox{\tt BIG} (=10^{10}) \end{array} \\
\mbox{\tt DEEMAX} & = & \left \{
\begin{array}{LL}
0.25 & \parbox[t]{10cm}{if {\tt ISVOL} $= 0$ and $X_{0} \leq 2cm$, 
where $X_{0}$ is the radiation length of the material} \\
0.25-\frac{0.2}{\sqrt{X_{0}}} & \mbox{otherwise}
\end{array} \right . \\
\mbox{\tt STMIN} & = & \left\{
\begin{array}{LL}
\frac{2 R}{\sqrt{X_{0}}} & \mbox{if {\tt ISVOL} $=0$} \\ [.2cm]
\frac{5 R}{\sqrt{X_{0}}} & \mbox{if {\tt ISVOL} $\neq 0$}
\end{array} \right . 
\end{eqnarray*}

where $R$ is the range in cm of an electron of energy {\tt CUTELE}+200keV.

If the {\tt IGAUTO} variable is set to 0 via the {\tt AUTO} data record, 
then value given by the user for the above parameters is accepted as the
true parameter value if $>0$, while automatic calculation still takes place
in case the input value is negative.

Users are strongly recommended to begin their simulation with the parameters
as calculated by {\tt GEANT}. Users who want to modify any of the above
parameters must be sure they understand their function in the program and
the implications of a change.

The {\tt EPSIL} parameter represents the absolute precision with which the
tracking is performed. It has a double meaning. When tracking in magnetic
field, {\tt EPSIL} is the minimum distance for which boundaries are
checked. A particle nearer than {\tt EPSIL} to the boundary is considered
as exiting the current volume. If the end point of the step of a particle in
magnetic field is distant less than {\tt EPSIL} along each axis 
from what would be the end point in absence of magnetic field, then no boundary 
checking is performed. 

In all cases, when a particle is going to reach the
boundary of the current volume with the current step, the step length is 
increased by a quantity ({\tt PREC}, common \FCind{/GCTMED/}) which is set to the 
minimum between $0.1 \times {\tt EPSIL}$
and 10 micron at the beginning of the tracking. This quantity is recalculated
at every step according to the formula:
\begin{equation}
\mbox{\tt PREC} 
=\max \left [ \min \left(\frac{\mbox{\tt EPSIL}}{10}, 10 \mu \right ) ,
\max \left [ | x |, | y |, | z |, S \right ) \times \epsilon \right ]
\end{equation}
Where $x, y, z$ are the current coordinates of the particle, $S$ is the length
of the track, and $\epsilon$ is the assumed machine precision.
$\epsilon$ (called {\tt EPSMAC} in the program) is initially set to
$10^{-6}$ for 32 bits machines and $10^{-11}$ for 64 bits machines.
During the tracking, every fifth time that a particle tries unsuccessfully
to exit from the same volume, the machine precision is multiplied by the
number of trials. This accounts for additional losses of precision due to
transformation of coordinates and region of the floating point range where
the real machine precision is different from the above (this happens 
in particular on IBM mainframes with 370 floating point number representation).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun,F.Bruyant}
\Documentation{same}
\Version{Geant 3.16}\Routid{CONS210}
\Submitted{11.02.86}     \Revised{08.12.93}
\Makehead{Special Tracking  Parameters}
 
\Shubr{GSTPAR}{(ITMED,CHPAR,PARVAL)}
 
\begin{DLtt}{MMMMMMMMMM}
\item[ITMED]   ({\tt INTEGER}) tracking medium number;
\item[CHPAR]   ({\tt CHARACTER*4}) character string, name of the variable 
to be modified;
\item[PARVAL]  ({\tt REAL}) new value (must be given as a floating point).
\end{DLtt}
\begin{center} 
\begin{tabular}{|r@{}r@{\quad=\quad}l|l|l|}
 \hline
\multicolumn{3}{|c|}{Default parameters}
& \multicolumn{1}{c|}{Parameter name} 
& \multicolumn{1}{c|}{Default value} \\
\hline
\tt Q(JTMN & \tt +1) & \tt CUTGAM & \tt CUTGAM & \tt 0.001Gev \\
\tt Q(JTMN & \tt +2) & \tt CUTELE & \tt CUTELE & \tt 0.001Gev \\
\tt Q(JTMN & \tt +3) & \tt CUTNEU & \tt CUTNEU & \tt 0.01Gev  \\
\tt Q(JTMN & \tt +4) & \tt CUTHAD & \tt CUTHAD & \tt 0.01Gev  \\
\tt Q(JTMN & \tt +5) & \tt CUTMUO & \tt CUTMUO & \tt 0.01Gev  \\
\tt Q(JTMN & \tt +6) & \tt BCUTE  & \tt BCUTE  & \tt CUTGAM   \\
\tt Q(JTMN & \tt +7) & \tt BCUTM  & \tt BCUTM  & \tt CUTGAM   \\
\tt Q(JTMN & \tt +8) & \tt DCUTE  & \tt DCUTE  & \tt 10.Tev   \\
\tt Q(JTMN & \tt +9) & \tt DCUTM  & \tt DCUTM  & \tt 10.Tev   \\
\tt Q(JTMN & \tt +10)& \tt PPCUTM & \tt PPCUTM & \tt 0.01Gev  \\
\tt Q(JTMN & \tt +11)& \tt IPAIR  & \tt  PAIR  & \tt 1        \\
\tt Q(JTMN & \tt +12)& \tt ICOMP  & \tt  COMP  & \tt 1        \\
\tt Q(JTMN & \tt +13)& \tt IPHOT  & \tt  PHOT  & \tt 1        \\
\tt Q(JTMN & \tt +14)& \tt IPFIS  & \tt  PFIS  & \tt 0        \\
\tt Q(JTMN & \tt +15)& \tt IDRAY  & \tt  DRAY  & \tt 2        \\
\tt Q(JTMN & \tt +16)& \tt IANNI  & \tt  ANNI  & \tt 1        \\
\tt Q(JTMN & \tt +17)& \tt IBREM  & \tt  BREM  & \tt 1        \\
\tt Q(JTMN & \tt +18)& \tt IHADR  & \tt  HADR  & \tt 1        \\
\tt Q(JTMN & \tt +19)& \tt IMUNU  & \tt  MUNU  & \tt 0        \\
\tt Q(JTMN & \tt +20)& \tt IDCAY  & \tt  DCAY  & \tt 1        \\
\tt Q(JTMN & \tt +21)& \tt ILOSS  & \tt  LOSS  & \tt 2        \\
\tt Q(JTMN & \tt +22)& \tt IMULS  & \tt  MULS  & \tt 1        \\
\tt Q(JTMN & \tt +26)& \tt GHEISHA   & \tt GHCOR1 & see {\tt [PHYS700]}  \\
\tt Q(JTMN & \tt +27)& \tt MODEL     & \tt BIRK1  & see {\tt [PHYS337]}  \\
\tt Q(JTMN & \tt +28)& \tt RKB     & \tt BIRK2  & see {\tt [PHYS337]}  \\
\tt Q(JTMN & \tt +29)& \tt C     & \tt BIRK3  & see {\tt [PHYS337]}  \\
\tt Q(JTMN & \tt +31)& \tt ILABS  & \tt LABS  & see {\tt [PHYS260]}  \\
\tt Q(JTMN & \tt +32)& \tt ISYNC  & \tt SYNC  & see {\tt [PHYS360]}  \\
\tt Q(JTMN & \tt +33)& \tt ISTRA  & \tt STRA  & see {\tt [PHYS333]} \\
\hline
\end{tabular}
\end{center} 
 
The data structure {\tt JTMED} contains the standard tracking parameters
({\tt CUTS} and flags to control the physics processes) which are used by
default for all tracking media. It is possible to redefine individually
with \Rind{GSTPAR} any of these parameters for a given tracking medium.
For example to change {\tt CUTGAM} to 0.0001 for tracking medium {\tt ITMED}:
\begin{center}
 {\tt CALL GSTPAR(ITMED,'CUTGAM',0.0001)}
\end{center}

For more information on default values for {\tt IDRAY} and {\tt ILOSS} see
{\tt [BASE040]}.
 
The default tracking medium parameters are stored in the bank whose
pointer is stored in the {\tt JTMED} variable. In this case in the
above table {\tt JTMN} = {\tt JTMED}. In the case one or more of
the above parameters has been modified for a specific tracking
medium, the whole parameter set is stored in the next bank of the
given trackin medium. In this case {\tt JTMN} = {\tt LQ(JTM)} in
the above table, where {\tt JTM} is the pointer to the bank of the
tracking medium, i.e. {\tt JTM} = {\tt LQ(JTMED-ITMED)}.
 
{\bf Note}
 
At tracking time the parameters above are copied
from {\tt JTMN} into the common blocks
\FCind{/GCCUTS/} and \FCind{/GCPHYS/}. \Rind{GSTPAR} must be called before
\Rind{GPHYSI}.
%\end{document}
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, G.N.Patrick}
\Version{Geant 3.15}\Routid{CONS300}
\Submitted{01.06.83}               \Revised{13.05.92}
\Makehead{Particle definition}
 
\Shubr{GPART}{}
 
Stores the standard particle constants in the data structure
{\tt JPART} and, through the routine \Rind{GSDK}, their decay modes 
{\tt [CONS310]}.
 
\begin{center}
\begin{tabular}{|l|r|l|r|r@{}l|}
\hline
\makebox[2.5cm][l]{Particle} & No.  & 
\makebox[3.2cm][l]{Mass(GeV)} &   Charge & 
\makebox[2.3cm][l]{Life time(sec)} & 
\makebox[1.3cm]{}  \\
\hline
Gamma        & 1 &0.0           &  0 & stable & \hspace{.2cm} ($10^{15}$) \\
Positron     & 2 &0.00051099906 &  1 &  stable &          \\
Electron     & 3 &0.00051099906 & -1 &  stable &          \\
Neutrino     & 4 & 0.0          &  0 &  stable &          \\
Muon +       & 5 &0.105658389   &  1 & $2.19703 $ & $\: \times 10^{-6}$\\
Muon -       & 6 &0.105658389   & -1 & $2.19703 $ & $\: \times 10^{-6}$  \\
Pion 0       & 7 &0.1349743     &  0 & $8.4 $ & $\: \times 10^{-17}$     \\
Pion +       & 8 &0.1395679     &  1 & $2.603 $ & $\: \times 10^{-8}$   \\
Pion -       & 9 &0.1395679     & -1 & $2.603 $ & $\: \times 10^{-8} $  \\
Kaon 0 long  &10 &0.497671      &  0 & $5.16 $ & $\: \times  10^{-8}$    \\
Kaon +       &11 &0.493646      &  1 & $1.237 $ & $\: \times 10^{-8}$   \\
Kaon -       &12 &0.493646      & -1 & $1.237 $ & $\: \times 10^{-8}$    \\
Neutron      &13 &0.93956563    &  0 & $  889.1 $ &                 \\
Proton       &14 &0.93827231    &  1 & stable    &         \\
Antiproton   &15 &0.93827231    & -1 & stable    &         \\
Kaon 0 short &16 &0.497671      &  0 & $ 8.922 $ & $\: \times 10^{-11}$   \\
Eta          &17 &0.54745       &  0 & $ 5.53085  $ & $\: \times 10^{-19}$ \\
Lambda       &18 &1.11563       &  0  & $ 2.632 $ & $\: \times 10^{-10}$    \\
Sigma +      &19 &1.18937       &  1  & $ 7.99   $ & $\: \times 10^{-11}$     \\
Sigma 0      &20 &1.19255       &  0  & $ 7.40 $ & $\: \times  10^{-20}$   \\
Sigma -      &21 &1.197465      & -1  & $1.479 $ & $\: \times  10^{-10}$   \\
Xi 0         &22 &1.31485       &  0  & $2.90 $ & $\: \times  10^{-10}$   \\
Xi -         &23 &1.32133       & -1  & $1.639 $ & $\: \times 10^{-10}$   \\
Omega        &24 &1.67243       & -1  & $ 8.22 $ & $\: \times 10^{-11}$   \\
Antineutron  &25 &0.93956563    &  0  & $ 889.1 $  &           \\
Antilambda   &26 &1.11563       &  0  &  $ 2.632 $ & $\: \times 10^{-10}$  \\
Antisigma -  &27 &1.18937       & -1  &  $ 7.99 $ & $\: \times 10^{-11}$   \\
Antisigma 0  &28 &1.19255       &  0  &  $ 7.40 $ & $\: \times  10^{-20}$   \\
Antisigma +  &29 &1.19743       &  1  &  $ 1.479 $ & $\: \times 10^{-10}$   \\
Antixi 0     &30 &1.31485       &  0  &  $ 2.90 $ & $\: \times   10^{-10}$   \\
Antixi +     &31 &1.32133       &  1  &  $ 1.639 $ & $\: \times 10^{-10}$  \\
\hline
\end{tabular}
\end{center}
\newpage
\begin{center}
\begin{tabular}{|l|r|l|r|r@{}l|}
\hline
\makebox[2.5cm][l]{Particle} & No.  & 
\makebox[3.2cm][l]{Mass(GeV)} &   Charge & 
\makebox[2.3cm][l]{Life time(sec)} & 
\makebox[1.3cm]{}  \\
\hline
Antiomega +  &32    &1.67243    &   1     &  $ 8.22 $ & $\: \times  10^{-11}$  \\
%Tau +      &33    &1.7841     &   1     &  $ 3.04 $ & $\: \times 10^{-13}$   \\
%Tau -      &34    &1.7841     &   1     &  $ 3.04 $ & $\: \times 10^{-13}$  \\
%D+         &35    &1.8693     &   1     &  $ 1.062 $ & $\: \times 10^{-12}$  \\
%D-         &36    & 1.8693    &  -1     &  $ 1.062 $ & $\: \times 10^{-12}$  \\
%D0         &37    & 1.8645    &   0     &  $ 4.28 $ & $\: \times 10^{-13}$  \\
%Anti D0    &38    & 1.8645    &   0     &  $4.28 $ & $\: \times  10^{-13}$   \\
%DS+        &39    & 1.9693    &   1     &  $ 4.36 $ & $\: \times 10^{-13}$   \\
%DS-        &40    & 1.9693    &  -1     &  $ 4.36 $ & $\: \times 10^{-13}$   \\
%Lambda C+  &41    & 2.2849    &   1     &  $ 1.79 $ & $\: \times 10^{-13}$    \\
%W+         &42    & 81.   &   1     &  $ 9.4  $ & $\: \times  10^{-26}$    \\
%W-         &43    & 81.   &  -1     &  $ 9.4  $ & $\: \times  10^{-26}$    \\
%Z0         &44    & 92.4   &   0     &  $ 7.74 $ & $\: \times  10^{-26}$   \\
Deuteron     &45    &1.875613   &   1     &  stable  &           \\
Tritium      &46    &2.80925  &   1     &  stable  &            \\
Alpha        &47    &3.727417   &   2     &   stable &          \\
Geantino     &48    & 0        &   0     &  stable   &       \\
He3          &49    &2.80923    &   2     &   stable     &      \\
Cerenkov     &50    &0          &   0     &   stable     &      \\
\hline
\end{tabular}
\end{center}
 
\Shubr{GPIONS}{}
 
Stores the standard ions constants in the data structure
{\tt JPART}.
 
\begin{center}
\begin{tabular}{|l|r|l|r|r@{}l|}
\hline
\makebox[2.5cm][l]{Particle} & No.  & 
\makebox[3.2cm][l]{Mass(GeV)} &   Charge & 
\makebox[2.3cm][l]{Life time(sec)} & 
\makebox[1.3cm]{}  \\
\hline
Li6   &  61 &     5.60305  &   3  &  1000 & \\
Li7   &  62 &     6.53536  &   3  &  1000 & \\
Be7   &  63 &     6.53622  &   4  &  1000 & \\
Be9   &  64 &     8.39479  &   4  &  1000 & \\
B10   &  65 &     9.32699  &   5  &  1000 & \\
B11   &  66 &    10.25510  &   5  &  1000 & \\
C12   &  67 &    11.17793  &   6  &  1000 & \\
N14   &  68 &    13.04378  &   7  &  1000 & \\
O16   &  69 &    14.89917  &   8  &  1000 & \\
F19   &  70 &    17.69690  &   9  &  1000 & \\
Ne20  &  71 &    18.62284  &  10  &  1000 & \\
Na23  &  72 &    21.41483  &  11  &  1000 & \\
Mg24  &  73 &    22.34193  &  12  &  1000 & \\
Al27  &  74 &    25.13314  &  13  &  1000 & \\
Si28  &  75 &    26.06034  &  14  &  1000 & \\
P31   &  76 &    28.85188  &  15  &  1000 & \\
S32   &  77 &    29.78180  &  16  &  1000 & \\
Cl35  &  78 &    32.57328  &  17  &  1000 & \\
Ar36  &  79 &    33.50356  &  18  &  1000 & \\
K39   &  80 &    36.29447  &  19  &  1000 & \\
Ca40  &  81 &    37.22492  &  20  &  1000 & \\
Sc45  &  82 &    41.87617  &  21  &  1000 & \\
Ti48  &  83 &    44.66324  &  22  &  1000 & \\
V51   &  84 &    47.45401  &  23  &  1000 & \\
Cr52  &  85 &    48.38228  &  24  &  1000 & \\
Mn55  &  86 &    51.17447  &  25  &  1000 & \\
Fe56  &  87 &    52.10307  &  26  &  1000 & \\
Co59  &  88 &    54.89593  &  27  &  1000 & \\
Ni58  &  89 &    53.96644  &  28  &  1000 & \\
Cu63  &  90 &    58.61856  &  29  &  1000 & \\
Zn64  &  91 &    59.54963  &  30  &  1000 & \\
\hline
\end{tabular}
\end{center}
\newpage
\begin{center}
\begin{tabular}{|l|r|l|r|r@{}l|}
\hline
\makebox[2.5cm][l]{Particle} & No.  & 
\makebox[3.2cm][l]{Mass(GeV)} &   Charge & 
\makebox[2.3cm][l]{Life time(sec)} & 
\makebox[1.3cm]{}  \\
\hline
Ge74  &  92 &    68.85715  &  32  &  1000 & \\
Se80  &  93 &    74.44178  &  34  &  1000 & \\
Kr84  &  94 &    78.16309  &  36  &  1000 & \\
Sr88  &  95 &    81.88358  &  38  &  1000 & \\
Zr90  &  96 &    83.74571  &  40  &  1000 & \\
Mo98  &  97 &    91.19832  &  42  &  1000 & \\
Pd106 &  98 &    98.64997  &  46  &  1000 & \\
Cd114 &  99 &   106.10997  &  48  &  1000 & \\
Sn120 & 100 &   111.68821  &  50  &  1000 & \\
Xe132 & 101 &   122.86796  &  54  &  1000 & \\
Ba138 & 102 &   128.45793  &  56  &  1000 & \\
Ce140 & 103 &   130.32111  &  58  &  1000 & \\
Sm152 & 104 &   141.51236  &  62  &  1000 & \\
Dy164 & 105 &   152.69909  &  66  &  1000 & \\
Yb174 & 106 &   162.02245  &  70  &  1000 & \\
W184  & 107 &   171.34924  &  74  &  1000 & \\
Pt194 & 108 &   180.67513  &  78  &  1000 & \\
Au197 & 109 &   183.47324  &  79  &  1000 & \\
Hg202 & 110 &   188.13451  &  80  &  1000 & \\
Pb208 & 111 &   193.72907  &  82  &  1000 & \\
U238  & 112 &   221.74295  &  92  &  1000 & \\
\hline
\end{tabular}
\end{center}
 
{\bf Note}
 
It is possible for the user to define more particles or to redefine
some characteristics of the particles currently defined in {\tt GEANT},
but this must be done with extreme care. In particular, the mass and
charge of most particles are stored independently in {\tt FLUKA}, and
any change made via \Rind{GSPART} will not affect these values. Removing
particles from the list can lead to unpredictable results and it is
strongly discouraged.
 
The user who needs 
more particles, or wants to partly override the standard values,
can do that via the routines \Rind{GSPART} and \Rind{GSDK}.
 
All data taken from M. Aguilar Benitez \cite{bib-AGUI}.
 
\Shubr{GSPART}{(IPART,CHNPAR,ITRTYP,AMASS,CHARGE,TLIFE,UB,NWB)}
 
Stores the constants describing the particle.
{\tt IPART} in the data structure {\tt JPART}.
\begin{DLtt}{MMMMMMMM}
\item[IPART]   ({\tt INTEGER}) particle number;
\item[CHNPAR]  ({\tt CHARACTER*20)} particle name;
\item[ITRTYP]  ({\tt INTEGER}) type of tracking routine requested:
\begin{DLtt}{MMMM}
\item[1] particle tracked by \Rind{GTGAMA};
\item[2] particle tracked by \Rind{GTELEC};
\item[3] particle tracked by \Rind{GTNEUT};
\item[4] particle tracked by \Rind{GTHADR};
\item[5] particle tracked by \Rind{GTMUON};
\item[6] geantino tracked by \Rind{GTNINO};
\item[7] heavy ion tracked by \Rind{GTHION};
\item[8] light photon tracked by \Rind{GTCKOV};
\end{DLtt}
\item [AMASS]  ({\tt REAL}) particle mass in GeV;
\item[CHARGE]  ({\tt REAL}) particle charge;
\item[TLIFE]   ({\tt REAL}) particle life time (in seconds);
\item[UB]      ({\tt REAL}) array of {\tt NWB} user additional parameters;
\item[NWB]     ({\tt INTEGER}).
\end{DLtt}
 
\Shubr{GFPART}{(IPART,CHNPAR*,ITRTYP*,AMASS*,CHARGE*,TLIFE*,UB*,NWB*)}
 
Extracts the constants describing the
particle {\tt IPART} from the data structure {\tt JPART}.
 
\Shubr{GPPART}{(IPART)}
 
Prints the particle constants
for  particle {\tt IPART} (for all particles if {\tt IPART=0}).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, G.N.Patrick}
\Version{Geant 3.16}\Routid{CONS310}
\Submitted{23.01.84}     \Revised{08.12.93}
\Makehead {Branching Ratios and Particle Decay Modes}
\Shubr{GSDK}{(IPART,BRATIO,MODE)}
\begin{DLtt}{MMMMMMMM}
\item[IPART]       ({\tt INTEGER}) {\tt GEANT} particle number;
\item[BRATIO]   ({\tt REAL}) array of branching ratios in \%,
maximum 6;
\item[MODE]     ({\tt INTEGER}) array of partial decay modes.
\end{DLtt}
\Rind{GSDK} stores the branching ratios and partial decay modes for two
and three body particle decays into the data structure {\tt JPART}.
The decay modes should be coded into the array {\tt MODE} such that:
\begin{center}
{\tt MODE(I) =  10$^4$ N3 + 10$^2$ N2 + N1} \hspace{2cm}
for {\tt I=1,$\cdots$,6}
\end{center}
where:
\begin{DLtt}{MMMM}
\item [N1]     particle number for decay product 1;
\item [N2]     particle number for decay product 2;
\item [N3]     particle number for decay product 3 (if any).
\end{DLtt}
It is important to note the following:
\begin{itemize}
\item  prior to calling \Rind{GSDK}, all parent and secondary particles should
have been defined by \Rind{GSPART};
\item  if less than six decay modes are defined the remaining elements
of {\tt BRATIO} and {\tt MODE} must be set to zero.
\end{itemize}
For a given particle, {\tt IPART}, the decay parameters are stored into
the {\tt JPART} data structure as follows:

\begin{DLtt}{MMMMMMMMMM}
\item[JPA] {\tt = LQ(JPART-IPART)} pointer to the bank containing the
information on the particle {\tt IPART};
\item[JDK1] {\tt = LQ(JPA-1)} pointer to branching ratios bank;
 \item[JDK2] {\tt = LQ(JPA-2)} pointer to decay modes bank;
\item[BR(I)] {\tt = Q(JDK1+I)}     I$^{th}$ branching ratio;
 \item[MODE(I)] {\tt = IQ(JDK2+I)}   I$^{th}$ decay mode, where
{\tt I=1,$\cdots$,6}.
\end{DLtt}
When a particle decays during tracking,
the routine \Rind{GDECAY} is called. If branching ratios and modes
have been stored by \Rind{GSDK}, then \Rind{GDECAY}
generates the decay products in the 2- or 3-body phase space.
If no branching ratios have been defined by \Rind{GSDK},
the user routine
\Rind{GUDCAY} is called, where the user can code special decay modes and
branching ratios. All data taken from Aguilar Benitez \cite{bib-AGUI}.
\newpage

\[
\begin{array}{|l|l|}
\hline
\makebox[4cm][|l|]{Parent particle} &
\makebox[8cm][c|]{Decay \hfill Branching ratio (\%)} \\ \hline

\mu^{\pm}      &
\begin{array}{lr}
\makebox[5cm][l]{$e^{\pm}\nu\nu$}        &  100.00
\end{array} \\ \hline

\pi^{0}        &
\begin{array}{lr}
\makebox[5cm][l]{$\gamma\gamma$}         &  98.802   \\
\gamma e^+e^-          &  1.198
\end{array} \\ \hline

\pi^{\pm}      &
\begin{array}{lr}
\makebox[5cm][l]{$\mu^{\pm}\nu$}         &  100.00 \\
\end{array} \\ \hline

K^0_{l}        &
\begin{array}{lr}
\makebox[5cm][l]{$\pi^- e^+ \nu$}        &  19.35    \\
\pi^+ e^- \nu          &  19.35    \\
\pi^-\mu^+\nu          &  13.55    \\
\pi^+\mu^-\nu          &  15.55    \\
\pi^0\pi^0\pi^0        &  21.50    \\
\pi^+\pi^-\pi^0        &  12.39
\end{array} \\ \hline

K^{\pm}        &
\begin{array}{lr}
\makebox[5cm][l]{$\mu^{\pm}\nu$}         & 63.51     \\
\pi^{\pm}\pi^0         & 21.17     \\
\pi^{\pm}\pi^+\pi^-    &  5.59     \\
e^{\pm}\nu\pi^0        &  4.82     \\
\mu^{\pm}\nu\pi^0      &  3.18     \\
\pi^{\pm}\pi^0\pi^0    &  1.73
\end{array} \\ \hline

K^0_s          &
\begin{array}{lr}
\makebox[5cm][l]{$\pi^+\pi^-$}           &  68.61    \\
\pi^0\pi^0             &  31.39
\end{array} \\ \hline

\eta           &
\begin{array}{lr}
\makebox[5cm][l]{$\gamma\gamma$}         &  39.00    \\
\pi^0\pi^0\pi^0        &  31.80    \\
\pi^+\pi^-\pi^0        &  23.70    \\
\pi^+\pi^-\gamma       &  4.91     \\
e^+e^-\gamma           &  0.50     \\
\pi^0\gamma\gamma      &  0.10
\end{array} \\ \hline

\Lambda        &
\begin{array}{lr}
\makebox[5cm][l]{$p\pi^-$}               &  64.20    \\
n\pi^0                 &  35.80
\end{array} \\ \hline

\Sigma^{+}     &
\begin{array}{lr}
\makebox[5cm][l]{$p\pi^0$}               &  51.64    \\
n\pi^+                 &  48.36
\end{array} \\ \hline

\Sigma^{0}     &
\begin{array}{lr}
\makebox[5cm][l]{$\Lambda\gamma$}        &  100.00
\end{array} \\ \hline

\Sigma^{-}     &
\begin{array}{lr}
\makebox[5cm][l]{$n\pi^-$}               & 100.00
\end{array} \\ \hline

\Xi^0          &
\begin{array}{lr}
\makebox[5cm][l]{$\Lambda\pi^0$}         & 100.00
\end{array} \\ \hline

\Xi^-          &
\begin{array}{lr}
\makebox[5cm][l]{$\Lambda\pi^-$}         & 100.00
\end{array} \\ \hline

\Omega^-       &
\begin{array}{lr}
\makebox[5cm][l]{$\Lambda K^-$}          &  68.60    \\
\Xi^0\pi^-             &  23.40    \\
\Xi^-\pi^0             &  8.00
\end{array} \\ \hline

\bar{\Lambda}  &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{p}\pi^+$}         &  64.20    \\
\bar{n}\pi^0           &  35.80
\end{array} \\ \hline

\bar{\Sigma}^- &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{p}\pi^0$}         &  51.64    \\
\bar{n}\pi^-           &  48.36
\end{array} \\ \hline

\bar{\Sigma}^0 &
\begin{array}{lr}
\makebox[5cm][l]{$\Lambda\gamma$}        &  100.00
\end{array} \\ \hline

\bar{\Sigma}^+ &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{n}\pi^+$}         &  100.00
\end{array} \\ \hline

\bar{\Xi}^0    &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{\Lambda}\pi^0$}   &  100.00
\end{array} \\ \hline

\bar{\Xi}^+    &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{\Lambda}\pi^+$}   &  100.00
\end{array} \\ \hline

\end{array}
\]

\[
\begin{array}{|l|l|}
\hline
\makebox[4cm][|l]{Parent particle} &
\makebox[8cm][|c|]{Decay \hfill Branching ratio (\%)} \\ \hline

\bar{\Omega}^+ &
\begin{array}{lr}
\makebox[5cm][l]{$\bar{\Lambda}K^+$}     &  68.60    \\
\bar{\Xi}^0\pi^+       &  23.40    \\
\bar{\Xi}^+\pi^0       &  8.00
\end{array} \\ \hline

\end{array}
\]

\putbib[cnasbibl,geabibl]
\end{bibunit}
 
%%     DRAW part     %%
 
\begin{bibunit}[unsrt]
\renewcommand{\bibname}{DRAW Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{P.Zanarini, S.Giani} 
\Version{Geant 3.16}\Routid{DRAW001}
\Submitted{07.03.92}  \Revised {11.12.92}
\Makehead{Introduction to  the Drawing  package}
\section {The drawing package }
The drawing package has been designed mainly to visualise:
\begin {itemize}
\item  detector components;
\item  the logical tree of detector components;
\item  the geometrical dimensions;
\item  particle trajectories
\item  the hits recorded in the sensitive elements of the detector.
\end{itemize}
\section{Graphics in {\tt GEANT}}

The set of routines in the drawing package
allows the visualisation of the volumes of the detector.
These routines can be called from the user program or interactively via
the command interface. The output can be directed onto the screen or to a 
file. The graphics of {\tt GEANT} is based on the 
{\tt HIGZ}~\cite{bib-HIGZ} package. 
\index{HIGZ}%
{\tt HIGZ} is a high-level interface between the user program (in this
case {\tt GEANT}), {\tt ZEBRA} and a basic graphics library.
At the moment of writing, {\tt HIGZ} can use various flavours
of the {\tt GKS}~\notHTML{\cite{bib-gks2d,bib-gks3d,bib-GKS1}}%
                 \HTML{\cite{bib-gks2d}, \cite{bib-gks3d}, \cite{bib-GKS1}}
graphics system or the {\tt X11}\cite{bib-X11} system. A version based on
the {\tt PHIGS}\cite{bib-phigs} system is now being developed at CERN.

\section{Graphics functionality of {\tt GEANT}}
The graphics capabilities of {\tt GEANT} have been greatly enhanced in 
the last few revisions of the program. It is now possible to display 
volumes with
hidden lines removed from the drawing. This improves the understanding of
complicated objects. It is also possible to {\it cut} the displayed volumes
with various shapes (boxes, cones, tubes and spheres) in order
to visualise the internals of a detector element.
The surfaces of the volumes drawn can be filled with
colour, either solid or shaded according to a scan-line based
lighting algorithm. 
A more sophisticated surface rendering algorithm is now being developed
but it will be available only in the next version of the program.

Almost all drawing commands can be executed either by
calling a routine from the
user application or by
issuing a command when running {\tt GEANT} with the
standard interactive interface. 
Several interactive
tools ({\tt ZOOM}, {\tt LENS}) have been developed to analyse in detail 
the various parts of the detectors.
The interactive {\tt MOVE} facility allows the rotation, 
translation and zooming
in real time for simple components of the detectors.
Some of these commands are only available in the
interactive interface. These are described briefly in {\tt [DRAW500]} and
more extensively in the {\tt [XINT]} section.

A user interface based on X-Windows and Motif is also available
mainly on Unix workstations. Details of this interface are described
in {\tt [DRAW510]}.

Various graphical options can be set via the \Rind{GSATT} and \Rind{GDOPT} 
routines.

Every detector component can be visualised either in orthonormal projection
or in perspective (routines \Rind{GDRAW} and \Rind{GDRVOL}). Sections of the 
volumes and of their descendents can be visualised as well (routines 
\Rind{GDRAWX} and \Rind{GDRAWC}). 

The hierarchical relations of the various volumes which compose the
detector can be visualised via the \Rind{GDTREE} routine. In the 
interactive interface the user can select one of the volumes which
are nodes of the tree with the mouse,
and display the characteristics of the volume and walk up and down
the logical tree.

Tracks and hits can be drawn either alone or superimposed on the detector
(routines \Rind{GDCHIT}, \Rind{GDHITS}, \Rind{GDAHIT}, \Rind{GDXYZ}). It is also possible to 
draw the tracks while tracking is performed via the routine \Rind{GDCXYZ}. 

The drawing may be done with hidden-line removal
and with shading effects according to the value of the options {\tt HIDE}
and {\tt SHAD} (see next section).

Drawing complicated detectors can be a lengthy process even on a fast machine.
In particular,
when graphics options like hidden line removal or surface shading
are requested and many volumes are involved, the complete drawing can take
several minutes on the most powerful workstations. To alleviate this problem
drawings can be stored in memory in so called {\it view banks}. The routines
involved are \Rind{GDOPEN}, \Rind{GDCLOS}, \Rind{GDSHOW} and \Rind{GDELET}, 
and the corresponding interactive commands ({\tt DOPEN, DCLOSE, DSHOW, 
DELETE}). These banks can then be redisplayed quickly. They can also be 
written on disk and read back.

Attributes like colour (\Rind{GDCOL}) and line width (\Rind{GDLW}) can be
globally set for all 2D drawings (i.e. text, vectors, man, etc.);
such attributes do not affect the volume attributes that can be set by
the \Rind{GSATT} routine with {\tt COLO} or {\tt LWID} option.

The user can control some drawing options (\Rind{GDOPT}), by selecting,
for instance, to have either parallel or perspective projection,
either {\tt Y-Z} or {\tt R-Z} projection, etc.
 
The geometrical dimensions of an existing volume can be changed via the
routine \Rind{GEDITV}.
 
Various service routines allow the drawing of the 
profile of a human figure, the
axis, the scale of the dimension of the drawing and so on. These are 
described in {\tt [DRAW400]}.

\section{The shading algorithm}
In {\tt GEANT 3.16} a new shading algorithm has been introduced which
is 10 to 100 times faster than the algorithm which was implemented in
{\tt GEANT 3.15}. In the new algorithm the search for the visible portions
of all the faces of every volume is performed in the following steps:
\begin{enumerate}
\item the vertices of each face are transformed from the {\tt MARS} to
the screen reference system. In this way the dimensions of the face are
of the order of magnitude of centimeters.
\item in the screen reference system the face is {\it filled} with
horizontal lines {\it scan-lines} according to the desired resolution.
\item These lines are then transformed back in the {\tt MARS}, where the
hidden line removal technique is used to find their visible portions.
\item The colour luminosity is chosen as a function of the angle between
the normal to the surface and the line of view which is considered to be
also the line of illumination.
\item The visible portions of the lines are finally transformed into the
screen reference system and drawn with the calculated luminosity so that
they fill only the visible part of each face.
\end{enumerate}
The resulting picture can be saved into {\tt GEANT} view banks or {\tt HIGZ}
picture files.
 
\section{ Summary}
 
The best way to initialise the drawing package is to call the 
{\tt HPLOT}~\cite{bib-HPLOT}
initialisation routine \Rind{HPLINT}. This will work independently of the 
basic graphic package used. The reader should consult the {\tt HPLOT}
documentation for more information on this routine.
The drawing package is initialised by:
\begin{DLtt}{MMMMM}
\item[\Rind{HPLINT}] to initialise the basic graphics package and the 
{\tt HPLOT} package;
\item[\Rind{GDINIT}] to initialise the {\tt GEANT} drawing package.
\end{DLtt}
 
The main drawing routines are:
\begin{DLtt}{MMMMM}
\item[\Rind{GDRAW}]  to draw a projection view of the detector -- Case 1
\item[\Rind{GDRVOL}] to draw a projection view of the detector --  Case 2
\item[\Rind{GDRAWC}] to draw a cut view of the detector (along one axis)
\item[\Rind{GDRAWX}] to draw a cut view of the detector (from any point)
\item[\Rind{GDXYZ}]  to draw tracks at the end of the event
\item[\Rind{GDCXYZ}] to draw tracks at tracking time
\item[\Rind{GDPART}] to draw particle names and track numbers at end of tracks
\item[\Rind{GDAHIT}] to draw one single hit
\item[\Rind{GDHITS}] to draw hits for {\it trajectory} type detectors
\item[\Rind{GDCHIT}] to draw hits for {\it calorimeter} type detectors
\end{DLtt}
 
Routines that show how the detector has been modelled are:
\begin{DLtt}{MMMMM}
\item[\Rind{GDTREE}] to draw a picture with the geometrical tree
\item[\Rind{GDSPEC}] to draw a picture with volume specifications
\item[\Rind{GDFSPC}] to draw several GDSPEC pictures
\end{DLtt}
 
Routines that perform control operations on view banks are:
\begin{DLtt}{MMMMMM}
\item[\Rind{GDOPEN}] to open a given view bank, identified by a
                     view number; in this way we enter in bank mode
\item[\Rind{GDCLOS}] to close the current view bank, i.e. the last one
                     opened, and restore screen mode
\item[\Rind{GDSHOW}] to show all graphics information contained in a
                     given view bank
\item[\Rind{GDLENS}] to scan interactively the drawing contained in the view bank 
\item[\Rind{GDELET}] to delete a given view bank from memory
\end{DLtt}

Routines that allow the visualisation of the detector with hidden line removal are:
\begin{DLtt}{MMMMMM}
\item[\Rind{GDCGOB}] to create CG objects
\item[\Rind{GDCGSL}] to create clipping objects
\item[\Rind{GDCGCL}] to perform boolean operations
\item[\Rind{GDCGHI}] to insert CG objects in HIDE and WIRE structures of faces
\item[\Rind{GDSHIF}] to shift in the space a CG object
\item[\Rind{GDBOMB}] to make the detector explode
\end{DLtt}
 
Other routines are:
\begin{DLtt}{MMMMM}
\item[\Rind{GDOPT}]   to set drawing options
\item[\Rind{GDZOOM}]  to set the zoom parameters
\item[\Rind{GDAXIS}]  to draw the axes of the MARS,
                      oriented according to the current view parameters
\item[\Rind{GDSCAL}]  to draw the current scale
\item[\Rind{GDMAN}]   to draw a profile of a man within the current scale
\item[\Rind{GDRAWT}]  to draw text, with software characters
\item[\Rind{GDRAWV}]  to draw polylines in 2D user coordinates
\item[\Rind{GDHEAD}]  to draw a frame header
\item[\Rind{GDCOL}]   to set colour code
\item[\Rind{GDLW}]    to set line width
\item[\Rind{GDCURS}]  to have an input from the graphics cursor
\item[\Rind{GDFR3D}]  to convert from 3D coordinates (either in MARS or DRS)
                      to 2D user coordinates
\item[\Rind{GD3D3D}]  to convert from 3D MARS coordinates to
                      3D Projection Reference System coordinates.
\end{DLtt}
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{S.Giani}
\Documentation{S.Giani, S.Ravndal} 
\Version{Geant 3.21}\Routid{DRAW010}
\Submitted{10.03.94}
\Revised{10.03.1994}  
\Makehead{The Ray-tracing package}

Running interactively under X11, a new visualization tool is provided in
{\tt GEANT} 3.21: the ray-tracing package. Based on the new 
{\tt GEANT} tracking (see
{\tt GEOM} and {\tt TRACK}), 
a set of routines doing light processing is provided to
visualize the detectors (useful also to visualize the results of boolean
operations).
Basically, visible light particles are tracked
throughout the detector until when they do not hit the surface of a volume
declared not transparent; then, the intersection point is transformed to 
the screen coordinates and the corresponding pixel is drawn with a computed 
hue and luminosity. 


In case the command ({\tt DOPT RAYT ON}) is executed,
the drawings are performed by the {\tt GEANT} ray-tracing;
automatically, the color is assigned according to the tracking medium of each
volume and the volumes with a density lower/equal than the air are considered
transparent; if the option ({\tt USER}) is set ({\tt ON}) 
(again via the command ({\tt DOPT})),
the user can set color and visibility for the desired volumes via the command
({\tt SATT}), as usual, relatively to the attributes ({\tt COLO}) and 
({\tt SEEN}).
The resolution can be set via the command 
({\tt SATT * FILL VALUE}), where ({\tt VALUE})
is the ratio between the number of pixels drawn and 20 (user coordinates).
Parallel view and perspective view are possible 
({\tt DOPT PROJ PARA/PERS}).

In the
first case, we assume that the first mother volume of the tree is a box with
dimensions 10000 X 10000 X 10000 cm and the view point (infinetely far) is
5000 cm far from the origin along the Z axis of the user coordinates; in the
second case, the distance between the observer and the origin of the world
reference system is set in cm by the command 
({\tt PERSP NAME VALUE}). 
Grand-angle
or telescopic effects can be achieved changing the scale factors in the command
({\tt DRAW}). 
(Please, note that in case of perspective views, fixed the distance of 
the viewer, the zooming factors for the raytracing option must be 8.25 times
bigger than the ones used for the {\tt HIDE} options in order to get the same
picture).
When the final picture does not occupy the full window,
mapping the space before tracing can speed up the drawing, but can also
produce less precise results; values from 1 to 4 are allowed in the command
({\tt DOPT MAPP VALUE}), 
the mapping being more precise for increasing ({\tt VALUE}). For
({\tt VALUE} = 0) 
no mapping is performed (therefore max precision and lowest speed).

The command ({\tt VALCUT}) allows the cutting of the detector by three planes
ortogonal to the x,y,z axis. The attribute ({\tt LSTY}) can be set 
by the command
{\tt SATT} for any desired volume and can assume values from 0 to 7. 
It determines
the different light processing to be performed for different materials:
0 = dark-matt, 1 = bright-matt, 2 = plastic, 3 = ceramic, 4 = rough-metals,
5 = shiny-metals, 6 = glass, 7 = mirror. 


The detector is assumed to be in the
dark, the ambient light luminosity is 0.2 for each basic hue (the saturation
is 0.9) and the observer is assumed to have a light source (therefore he will
produce parallel light in the case of parallel view and point-like-source
light in the case of perspective view). Finally, a second light source can 
be positioned in the space (with a desired intensity) via the command 
({\tt SPOT}).
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, A.McPherson, P.Zanarini}
\Revision{S.Giani}
\Documentation{P.Zanarini, S.Giani}
\Submitted {15.08.83}     \Revised{11.12.92}
\Version{Geant 3.15}\Routid{DRAW110}
\Makehead{Drawing a Volume -- Case 1}
 
\Shubr{GDRAW}{(CHNAME,THETA,PHI,PSI,U0,V0,SU,SV)}
Draws an orthographic parallel projection or
a perspective projection 
of volume {\tt CHNAME} according to the options set via the 
routine \Rind{GDOPT} and all its {\it visible} descendants
(see routine \Rind{GSATT} to alter the visibility of a volume)
at position {\tt U0,V0} (user coordinates), with the scale
factors {\tt SU} and {\tt SV};
the object is seen from {\tt THETA} and {\tt PHI} angles, and
the resulting 2D projection is rotated
by an angle {\tt PSI} on the screen plane.
These parameters, as well as zoom parameters set by \Rind{GDZOOM}
define the current {\it view parameters}, and they are copied
in the common \FCind{/GCDRAW/}. Attributes like colour, surface fill,
line width, line style, visibility, etc. can be set by calling 
the \Rind{GSATT} routine for {\tt CHNAME} and its descendants 
{\tt [GEOM 500]}. An example of the result of the call:

\begin{center}
{\tt CALL GDRAW('ARM ',40.,40.,0.,nx,ny,0.015,0.015) }
\end{center}

is given in fig~\ref{draw110-1} for various values of the attributes
and graphic options.

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/draw110-1.eps,width=10cm}
      \caption{Examples of use of {\tt GDRAW}}
      \label{draw110-1}
\end{figure}

Drawing with hidden line removal and surface fill shading is also possible, 
but the drawing time may increase substantially for complicated 
objects.

When using the interactive interface it is possible to {\it cut}
the object to be drawn with {\it cutting} volumes (command {\tt CVOL}).
This is particularly
useful to visualise the contents of an object drawn with hidden line removal.
Another feature which is available only interactively is the possibility
to draw each decendant of a volume shifted along the axis which goes from the
centre of the local coordinate system to the centre of gravity of
the descendant itself. This again is useful to improve the visibility of the
details of a complicated setup (command {\tt BOMB}). Please see the interactive
interface description for more information on this part.

\begin{DLtt}{MMMMM}
\item[CHNAME]  ({\tt CHARACTER*4}) volume name.
\item[THETA] ({\tt REAL}) theta angle between the line of sight and the
Z axis of {\tt MA}ster {\tt R}eference {\tt S}ystem ({\tt MARS}).
\item[PHI]   ({\tt REAL}) phi angle between the projection of the line 
of sight on plane {\tt X  Y} and the {\tt X} axis of {\tt MARS}.
\item[PSI]   ({\tt REAL}) psi angle by which the projected image will 
be rotated on the screen plane.
\item[U0]    ({\tt REAL}) u coordinate on the screen of the volume origin.
\item[V0]    ({\tt REAL}) v coordinate on the screen of the volume origin.
\item[SU]    ({\tt REAL}) scale factor for u coordinates.
\item[SV]    ({\tt REAL}) scale factor for v coordinates.
\end{DLtt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
\Origin{P.Zanarini}
\Documentation{P.Zanarini, F.Carminati}
\Submitted {01.01.86}   \Revised{11.12.92}
\Version{Geant 3.15}\Routid{DRAW115}
\Makehead{Drawing a Volume Projection view -- Case 2}
\Shubr{GDRVOL}{(NNAMS,CHNAMS,LNUMBS,NRS,THETA,PHI,PSI,U0,V0,SU,SV)}
Draws an orthographic parallel projection or a perspective projection 
(depending on the option chosen via \Rind{GDOPT}) of the volume 
{\tt CHNAMS(N),LNUMBS(N)} with all its descendants, at the position 
{\tt U0,V0} (user coordinates), with the scale factors {\tt SU} and 
{\tt SV}. 
The object is seen from {\tt THETA} and {\tt PHI} angles, 
and the resulting 2D projection is also rotated by an angle {\tt PSI} 
on the screen plane. These parameters, as well as zoom parameters set 
by \Rind{GDZOOM}, define the current {\it view parameters}, and they are 
copied in \FCind{/GCDRAW/}.  Attributes like colour, fill area, line 
width, line style, visibility, etc. can be set by the \Rind{GSATT} 
routine for {\tt CHNAMS(N)} and or its descendants {\tt [GEOM 500]}.
This routine differs from \Rind{GDRAW} in the following aspects:
\begin{itemize}
\item  The object to be drawn is identified by a full path. This gives 
the possibility of drawing a particular copy or division of a volume, or 
even a volume that has more than one mother in the geometry tree.
{\tt CHNAMS(1),...,CHNAMS(N)} contain the volume names and
{\tt LNUMBS(1),...,LNUMBS(N)}, the volume numbers defining the path 
to go from the top volume to the one to be drawn.
\item  The object can be drawn either with respect to the
{\tt MA}ster {\tt R}eference {\tt S}ystem ({\tt NRS=0}) or with respect 
to its {\tt D}augther {\tt R}eference {\tt S}ystem (i.e. the Local R.S.); 
in the first case it is drawn in its position in the real world, while 
in the second one it is drawn like \Rind{GDRAW} would do.
\item  In this latter case, track and hit points will be
drawn with respect to the {\tt DRS} of the volume last
drawn by this routine, and not with respect to the
{\tt MARS} as is done normally (to reset to the normal
case a call with {\tt NRS=0} or {\tt NNAMS=0} is required).
\end{itemize}
\begin{DLtt}{MMMMMM}
\item[NNAMS]     ({\tt INTEGER}) number of elements {\tt levels} in the 
arrays {\tt CHNAMS, LNUMBS}. The bottom volume of this path is also the 
one that is actually drawn;
\item[CHNAMS]   ({\tt CHARACTER*4}) array of volume name (dimensioned 
at least to {\tt NNAMS});
\item[LNUMBS]   array of volume numbers (dimensioned at least to {\tt NNAMS});
\item[NRS]    reference system used:
\begin{DLtt}{MMMMM}
\item[NRS$=$0] to have the volume(s) drawn with respect to the {\tt MARS} 
\item[NRS$\neq$0] to have the volume(s) drawn with respect to the {\tt DRS}
\end{DLtt}
\item[THETA]   $\theta$ angle between the line of sight and the
                Z  axis of {\tt MARS};
\item[PHI]    $\phi$ angle between the projection of the line of sight
              on plane {\tt X Y} and the {\tt X} axis of {\tt MARS}
\item[PSI]   $\psi$ angle by which the projected image will
             be rotated on the screen plane
\item[U0]    u coordinate on the screen of the volume origin
\item[V0]    v  coordinate on the screen of the volume origin
\item[SU]   scale factor for u coordinates
\item[SV]   scale factor for v coordinates
\end{DLtt}
 
Two examples of use of \Rind{GDRVOL} are shown in fig~\ref{fg:draw115-1} and
\ref{fg:draw115-2}.

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/draw115-1.eps,width=12cm}

\begin{verbatim}
       CHARACTER*4 CHNAMS(5)
       INTEGER LNUMBS(5)
       DATA CHNAMS/'OPAL','BRL-','EB  ','EBB ','EBP '/
       DATA LNUMBS/    1 ,    1 ,    1 ,    1 ,   20 /
       .
       .
       .
       NRS=0
       CALL GDRVOL(5,CHNAMS,LNUMBS,NRS,80.,135.,0.,13.,10.,0.03,0.03)
       CALL GDAXIS(0.,0.,0.,200.)
C      CALL GDXYZ(0)
\end{verbatim}

     \caption{Example of use of {\tt GDRVOL} in the MAster Reference System}
     \label{fg:draw115-1}


\end{figure}


\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw115-2.eps,width=12cm}

\begin{verbatim}
      CHARACTER*4 CHNAMS(5)
      INTEGER LNUMBS(5)
      DATA CHNAMS/'OPAL','BRL-','EB  ','EBB ','EBP '/
      DATA LNUMBS/    1 ,    1 ,    1 ,    1 ,   20 /
      .
      .
      .
      NRS=1
      CALL GDRVOL(5,CHNAMS,LNUMBS,NRS,55.,135.,0.,5.,5.,0.035,0.035)
      CALL GDAXIS(0.,0.,0.,200.)
C     CALL GDXYZ(0)
\end{verbatim}

\caption{Example of use of {\tt GDRVOL} in the Daughter Reference System}
\label{fg:draw115-2}
\end{figure}
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin {P.Zanarini}
\Documentation{P.Zanarini}
\Submitted{15.05.84}       \Revised{10.12.93}
\Version{Geant 3.16}\Routid{DRAW120}
\Makehead{Draw a volume cut view}
\Shubr{GDRAWX}{(CHNAME,CUTTHE,CUTPHI,CUTVAL,THETA,PHI,U0,V0,SU,SV)}
 
\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARECTER*4}) name of volume;
\item[CUTTHE] ({\tt REAL}) $\theta$ angle of the line normal to the cut plane;
\item[CUTPHI] ({\tt REAL}) $\phi$ angle of the line normal to the cut plane;
\item[TETHA]  ({\tt REAL}) viewing angle $\theta$;
\item[PHI]    ({\tt REAL}) viewing angle $\phi$;
\item[U0]     ({\tt REAL}) u coordinate on the screen of the volume origin;
\item[V0]     ({\tt REAL}) v  coordinate on the screen of the volume origin;
\item[SU]     ({\tt REAL}) scale factor for u  coordinates;
\item[SV]     ({\tt REAL}) scale factor for v   coordinates.
\end{DLtt}

Draws a {\it cut view} of the volume {\tt CHNAME}
with all its {\it visible} descendants, i.e. draws their intersection with
the cut plane normal to the axis
given by the angles {\tt CUTTHE, CUTPHI} at the distance {\tt CUTVAL}
from the origin.
The view point is defined by the angles {\tt THETA, PHI}.
{\tt U0, V0, SU, SV} have the same meaning as in \Rind{GDRAW}.
These {\it view parameters}, as well as zoom parameters set by \Rind{GDZOOM}
are copied in \FCind{/GCDRAW/}.

Attributes like colour, surface fill, line width, line style, visibility, etc.
can be set by the \Rind{GSATT} routine for {\tt CHNAME}
and its descendants {\tt [GEOM500]}.
 
\Shubr{GDRAWC}{(CHNAME,IAX,CUTVAL,U0,V0,SU,SV)}
 
\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARECTER*4}) name of volume;
\item[IAX]  ({\tt INTEGER}) axis of the cut (1=X, 2=Y, 3=Z);
\item[U0]   ({\tt REAL}) u coordinate on the screen of the volume origin;
\item[V0]   ({\tt REAL}) v coordinate on the screen of the volume origin;
\item[SU]   ({\tt REAL}) scale factor for u coordinates;
\item[SV]   ({\tt REAL}) scale factor for v coordinates.
\end{DLtt}

This routine is a special case of the previous \Rind{GDRAWX}.
Here the cut plane is normal to one of the main axes ({\tt IAX})
and placed at a distance {\tt CUTVAL} from the origin.
The view-point is along the same axis.
 
Fig.~\ref{fg:draw120-1} gives an example of utilisation of 
\Rind{GDAXIS}, \Rind{GDRAW} and \Rind{GDRAWX}. Fig.~\ref{fg:draw120-2}
gives an example of use of \Rind{GDRAWC}.

\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw120-1.eps,width=14cm}
\begin{verbatim}
      CALL GDOPT('HIDE','ON')
      CALL GSATT('NBOX','COLO',2.)
      CALL GSATT('NTUB','COLO',4.)
      CALL GDRAW('NBOX',50.,150.,0.,10.,10.,0.01,0.01)
      CALL GDRAW('NTUB',50.,150.,0.,10.,10.,0.01,0.01)
      CALL GDOPT('HIDE','OFF')
      CALL GSATT('*','COLO',1.)
      CALL GDRAWX('NBOX',30.,40.,0.,50.,150.,10.,10.,0.01,0.01)
      CALL GDAXIS(0.,0.,0.,200.)
\end{verbatim}
     \caption{Example of utilisation of 
{\tt GDAXIS}, {\tt GDRAW} and {\tt GDRAWX}}
     \label{fg:draw120-1}
\end{figure}
 
\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw120-2.eps,width=14cm}
\begin{verbatim}
      CALL GDRAWC('OPAL',2,0.,10.,10.,0.01,0.01)
\end{verbatim}
     \caption{Example of utilisation of {\tt GDRAWC}}
     \label{fg:draw120-2}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin {R.Brun, P.Zanarini}
\Documentation{P.Zanarini}
\Submitted{15.05.84}             \Revised{11.12.92}
\Version{Geant 3.16}\Routid{DRAW130}
\Makehead{Draw Particle Trajectories}
\section{Visualisation of particle trajectories}
The tracks generated by the tracking package, and optionally stored
in the data structure {\tt JXYZ}, can be displayed by the routine \Rind{GDXYZ}
(corresponding to the interactive command {\tt DXYZ}).
 
The names of the particles and or the track numbers can be added
by the routine \Rind{GDPART} (corresponding to the interactive command 
{\tt DPART}).
 
A special routine has been provided to visualise the tracks during the
transport process
(\Rind{GDCXYZ}), that could be called for instance by \Rind{GUSTEP}.
That routine shows the tracks while they are transported
by the tracking package of {\tt GEANT}, providing a useful interactive
debugging tool.

\Shubr{GDXYZ}{(ITRA)}
 
Draws track number {\tt ITRA} for which space points have been stored in bank
{\tt JXYZ} via calls to the routine \Rind{GSXYZ}. The view parameters are 
taken from \FCind{/GCDRAW/}.
\begin{DLtt}{MMM}
\item[ITRA] ({\tt INTEGER}) track number (if 0 all tracks are taken)
\end{DLtt}
The colour and line style corresponds to the track type :
\begin{center}
\newcommand{\Leaders}[2]{\leaders\hbox to #1{\hfil#2\hfil}\hfill}
\begin{tabular}{llp{3cm}}
(blue)  & dotted line for gammas
                                                    & \dotfill \\
(red)   & solid line for charged particles (except muons)
                                                    & \hrulefill \\
(black) & blank/dotted line for neutral hadrons or neutrinos
                                                    & \Leaders{3mm}{.} \\
(green) & dashed line for muons
                                                    & \Leaders{3mm}{-} \\
(yellow) & dotted line for \v{C}erenkov photons
                                                    & \dotfill
\end{tabular}\end{center}
\Shubr{GDPART}{(ITRA,ISEL,SIZE)}
Draws the particle names and/or the track numbers
of track {\tt ITRA}, supposing that its space points had been stored in 
the bank {\tt JXYZ} via the routine \Rind{GSXYZ}.
At present only primary tracks are displayed by \Rind{GDPART}
and their name or number is written at the end the track trajectory.
The view parameters are taken from \FCind{/GCDRAW/}.
\begin{DLtt}{MMMM}
\item[ITRA]  ({\tt INTEGER}) Track number (if 0 all tracks are taken)
\item[ISEL]  ({\tt INTEGER}) \\
             {\tt ISEL=x1} draws the track number, \\
             {\tt ISEL=1x} draws the particle name, \\
             {\tt ISEL=11} draws both.
\item[SIZE]  ({\tt REAL}) Character size in cm.
\end{DLtt}
\Shubr{GDCXYZ}{}
If \Rind{GDCXYZ} is called at tracking time (for instance by
\Rind{GUSTEP}), it draws the tracks while tracking is performed,
at the same time as
they are generated by the tracking package of {\tt GEANT}.
This is a very
useful interactive debugging tool. The line style is the same as for
\Rind {GDXYZ}.
The view parameters are taken from \FCind{/GCDRAW/}.

Here we give an example of the use of \Rind{GDPART}:
 
\begin{verbatim}
 CALL GSATT('HB','FILL',3)
 CALL GSATT('HE','FILL',1)
 - - - - -
 - - - - -
 
 CALL GDRAWC('OPAL',2,5.,10.,10.,0.013,0.013)
 CALL GDXYZ(0)
 CALL GDPART(0,11,0.25)
\end{verbatim}
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, W.Gebel, P.Zanarini}
\Documentation{S.Giani, F.Carminati}
\Submitted{07.03.84}    \Revised{11.12.92}
\Version{Geant 3.15}\Routid{DRAW140}
\Makehead{Drawing Track Hits in Sensitive Detectors}
The hits generated by the tracking package and stored in the
data structure {\tt JHITS} can be displayed by the followingroutines:
\begin{enumerate}
\item draw one hit (\Rind{GDAHIT}); called by the user;
\item draw all the hits of trajectory type sets/ detectors (\Rind{GDHITS});
\item draw all the hits of calorimeter type sets/ detectors (\Rind{GDCHIT}).
\end{enumerate}

Different symbols for each subdetector can be used, chosen among
hardware characters (dots), software crosses, or from the {\tt HPLOT} table
of software characters.
The size of the software characters and crosses is given as an argument
to \Rind{GDAHIT} and \Rind{GDHITS}, while it is computed as a function of 
the hits value in \Rind{GDCHIT}.

The option {\tt H} of the interactive \Rind{MOVE} command gives the 
possibility
to rotate, zoom and translate in real time the hits stored for one event.
This allow a 3D display of the event where it is possible to pick one hit 
with the mouse and have the hit values printed.  The interactive 
command \Rind{LENS} allows a detailed visual scanning of the 
hits displayed (see the interactive section).   

\Shubr{GDHITS}{(CHUSET,CHUDET,ITRA,ISYMB,SSYMB)}
Draws the hit points as stored by \Rind{GSAHIT,} which were
generated by track {\tt ITRA} in detector {\tt CHUDET} of set {\tt CHUSET},
with the currently selected view parameters in \FCind{/GCDRAW/}.
The character plotted at each point may be chosen via {\tt ISYMB}:
 
\begin{tabular}{l@{\hspace{2cm}}l@{\hspace{3cm}}r}
 -1     &  (small) hardware points            & (fast)      \\
  0     &  software crosses                   & (default)   \\
840/850 &  empty/full circles                 & (slow)      \\
841/851 &  empty/full squares                 & (slow)      \\
842/852 &  empty/full triangles (up)          & (slow)      \\
843/853 &  empty diamond/full triangle (down) & (slow)      \\
844/854 &  empty/full stars                   & (slow)      \\
\end{tabular}
 
More information on the meaning of the {\tt ISIMB} value can be found in the 
{\tt HPLOT} manual\cite{bib-HPLOT}. Any value for {\tt ISYMB} which is not
in the above table is equivalent to option 0. Except for {\tt ISYMB = -1},
the size of the character can be chosen by {\tt SSYMB}.
On the 2D projection on the screen one can distinguish which
set/detector a given track passes, by drawing different symbols for the
hits in different sets/detectors. The size of these symbols may then
be chosen to suit the scale of the total picture (detectors and tracks).

\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw140-1.eps,width=10cm}

\begin{verbatim}
 CALL GDRAW('CAVE',40.,40.,0.,10.,10.,.04,.04)
 CALL IGSET('TXCI',2.)
 CALL GDHITS('DRFT','FSP ',0,850,.3)
 CALL IGSET('TXCI',3.)
 CALL GDHITS('DRFT','RSP1',0,851,.3)
 CALL IGSET('TXCI',4.)
 CALL GDHITS('DRFT','RSP2',0,852,.3)
 CALL IGSET('TXCI',5.)
 CALL GDHITS('DRFT','RSP3',0,853,.3)
\end{verbatim}

     \caption{example of use of {\tt GDHITS}}
     \label{fg:draw140-1}
\end{figure}

{\bf Note:}
It is obligatory for the use of this routine that the spatial
{\tt MARS} (MAster Reference System) current coordinates of the hits are stored
as the first 3 elements of the hit {\tt [HITS200]}.
\begin{DLtt}{MMMMM}
\item[CHUSET] ({\tt CHARACTER*4}) user set identifier (if '*' all sets are taken)
\item[CHUDET] ({\tt CHARACTER*4}) user detector identifier (if '*' all 
detectors are taken)
\item[ITRA]   ({\tt INTEGER}) number of selected track (if 0 all tracks are taken)
\item[ISYMB]  ({\tt INTEGER}) character selection number (see table above)
\item[SSYMB]  ({\tt REAL}) size of characters in cm (if 0, a default of 
0.1 is taken)
\end{DLtt}
\Shubr{GDCHIT}{(CHUSET,CHUDET,ITRA,ISYMB,SIZMAX,IHIT,HITMIN,HITMAX)}
Draws the hit points as stored by \Rind{GSCHIT}, which were
generated by track {\tt ITRA} in detector {\tt CHUDET} of set {\tt CHUSET},
with the currently selected view parameters in \FCind{/GCDRAW/}.
Except for {\tt  ISYMB = -1} the size of the character
is chosen as a function of {\tt  HITS(IHIT)}:
\begin{center}
\tt            SIZE = sizmax * ( hits(ihit) - hitmin ) / hitmax
\end{center}

{\bf Note:}
It is obligatory for the use of this routine that the spatial
{\tt MARS} ({\tt MA}ster {\tt R}eference {\tt S}ystem) current coordinates 
of the hits are stored as the first 3 elements of the hit {\tt [HITS200]}.
\begin{DLtt}{MMMMM}
\item [SIZMAX]   ({\tt REAL}) maximum character size in cm
\item [IHIT]     ({\tt INTEGER}) {\tt HITS(IHIT)} contains the calorimeter 
hit value. {\tt IHIT>3}, and the first three elements are supposed to
contain the space position of the hit
\item [HITMIN]    ({\tt REAL}) minimum boundary of {\tt HITS(IHIT)}
\item[HITMAX]     ({\tt REAL}) maximum boundary of {\tt HITS(IHIT)}
\end{DLtt}
\Shubr{GDAHIT}{(X,Y,Z,ISYMB,SSYMB)}
Draws one hit point at coordinates {\tt X, Y, Z}. This routine is useful
when the user wants only to display but not to store the hits.
The first three arguments are the position of the hit in the {\tt MARS},
and the last two arguments have the same meaning as the similar 
arguments in GDHITS.
\begin{DLtt}{MM}
\item [X]  ({\tt REAL})       x coordinate in {\tt MARS} of the hit point
\item [Y]  ({\tt REAL})       y coordinate in {\tt MARS} of the hit point
\item [X]  ({\tt REAL})       z coordinate in {\tt MARS} of the hit point
\end{DLtt}

An example of use of the hits drawing routines is given in fig~\ref{fg:draw140-1}.
%\begin{verbatim}
%SUBROUTINE GUTREV
% - - - - -
% CALL GDOPT('THRZ','ON ')
% CALL GDRAWC('OPAL',2,5.,10.,10.,0.013,0.013)
% CALL GTREVE
% END
% 
% SUBROUTINE GUSTEP
% - - - - -
% CALL GDCXYZ
% - - - - -
% END
% 
% CALL GDOPT('THRZ','ON  ')
% CALL GDRAWC('OPAL',2,5.,10.,10.,0.013,0.013)
% CALL GDCHIT('EB  ',0,0,841,1.,6,0.,0.5)
% CALL GDCHIT('EE  ',0,0,841,1.,6,0.,0.5)
% CALL GDCHIT('HB  ',0,0,851,1.,5,0.,0.5)
% CALL GDCHIT('HE  ',0,0,851,1.,5,0.,0.5)
% CALL GDHITS('CJ  ',0,0,0,0.01)
% CALL GDHITS('CV  ',0,0,0,0.01)
% CALL GDHITS('CZ  ',0,0,0,0.01)
% CALL GDHITS('F   ',0,0,853,0.1)
% CALL GDHITS('HP  ',0,0,840,0.2)
% CALL GDHITS('ME  ',0,0,842,0.2)
% CALL GDHITS('MB  ',0,0,842,0.2)
%\end{verbatim}
% 
% 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{P.Zanarini}   
\Revision{S.Giani}
\Documentation{P.Zanarini, S.Giani}
\Submitted{15.01.84}            \Revised{10.12.93}
\Version{Geant 3.16}            \Routid{DRAW210}

\Makehead{Drawing the geometrical tree}
The geometrical tree is a hierarchical representation of the 
structure of the detector, based on the mother-daughter
relationship among the various volumes composing it. The \Rind{GDTREE} 
routine (corresponding to the {\tt DTREE} interactive command) allows 
the drawing of the logical tree, displaying name, multiplicity 
and other information about the volumes.

\Shubr{GDTREE}{(CHNAME,LEVMAX,ISEL)}
\begin{DLtt}{MMMMMMMM}
\item[CHNAME]  ({\tt CHARACTER*4}) volume name;
\item[LEVMAX]  ({\tt INTEGER}) depth levels (if 0 all levels are taken) 
default is 3;
\item[ISEL]    ({\tt INTEGER}) used to select options in the picture of the tree:
\begin{DLtt}{MMMMMM}
\item[~~~~0] only the node name is drawn;
\item[xxxx1] multiplicity is added: 
\begin{itemize}
\item each node that has been positioned several 
times (by \Rind{GSPOS} or \Rind{GSPOSP}) has a multiplicity number preceded by 
the symbol '*';
\item each node that has been obtained by division mechanism
(by \Rind{GSDVN}, \Rind{GSDVT}, etc.) has a multiplicity number preceded by the
symbol \#;
\end{itemize}
\item[xxx1x] {\tt ONLY} information is added.
volumes that are {\tt MANY} will be
drawn as three square nodes, one overlapping the others but slightly shifted;

{\bf Note:} if {\tt CHNAME} itself is {\tt MANY} it will not be recognised as 
such, because this information is stored in its mother which is unknown;

\item[xx1xx] {\tt DET} information is added; if a volumes is a detector it 
is drawn as a square node with another one slightly larger around it;
\item[x1xxx] {\tt SEEN} information is added;
if a volume is not seen (either because of its {\tt SEEN} attribute or
because of its ancestors {\tt SEEN} attributes affecting the whole tree path)
its square node is drawn by using dashed lines;
\item[1xxxx] a little picture of the volume is added above each node.
\end{DLtt}
\end{DLtt}

\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw210-1.eps,width=14cm}
\begin{verbatim}
      CALL GDTREE('FD  ',5,11111)
\end{verbatim}
     \caption{Example of geometrical tree structure}
     \label{fg:draw210-1}
\end{figure}
\Rind{GDTREE} draws the tree of the volume data structure starting
from the volume {\tt CHNAME}, for {\tt LEVMAX} depth levels;
a continuation link line is drawn for those elements
at the last level on the picture but having descendants.
An example of use of \Rind{GDTREE} can be found in Fig.~\ref{fg:draw210-1}.
For every node, as many red arrows as the number of existing levels below it
are plotted on the link; vice versa, as many green arrows as the number of 
existing levels before it are also plotted.
When running {\tt GEANT} interactively, if the {\tt ISEL}
argument is not specified, control is given to the
mouse after issuing the {\tt DTREE} command. This allows the display of various
volume parameters and the navigation of the geometrical tree by
clicking the mouse buttons.
The size of the picture and the dimensions of each
element and arrows are computed automatically. 

\section*{Interactive use}
In an interactive session, control can be given to the mouse: 
\begin{itemize}
\item clicking on the left button when the cursor is inside a volume
{\it pave} will generate a \Rind{DSPEC} command for that volume; 
\item clicking the same button when the cursor is on a red arrow will 
perform a \Rind{DTREE} for the volume preceding the arrow, displaying a
number of levels which depends on the which arrow has been selected;
\item selecting in the same way the i$^{th}$ green arrow preceding 
a given volume will perform a \Rind{DTREE}
for its mother-volume staying {\it i} levels before;
\item clicking the right button of the mouse will return
the control to the command mode.
\end{itemize}
 
When running with the X-windows software, the drawing of the 
specification (\Rind{DSPEC}) appears in a different window to 
speed up the scanning of the tree. Iterating this procedure it is 
possible to analyse very easily and quickly any kind of geometry. 
This drawing tree capability can be very
useful when tuning the detector geometry.
See the interactive section {\tt [XINT]} for examples.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{P.Zanarini}     
\Documentation{P.Zanarini, S.Giani, F.Carminati}      
\Submitted{01.11.83}       \Revised{13.12.93}
\Version{Geant 3.16}\Routid{DRAW220}
\Makehead{Drawing volume specifications}
The geometrical parameters of the volumes can be displayed via the 
\Rind{GDSPEC} routine (corresponding to the {\tt DSPEC} interactive 
command). This facility provides a detailed picture of a particular 
piece of the detector. 
The set of geometrical specifications 
of all the descendants of a given node on the tree, can be obtained
each on a separate picture with the routine \Rind{GDFSPC} ({\tt DFSPC} 
interactive command).

\Shubr{GDSPEC}{(CHNAME)}
\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) volume name;
\end{DLtt}
Draws a picture showing all specifications for a given volume.
An example of use of \Rind{GDSPEC} can be found in Fig.~\ref{fg:draw220-1}.

\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw220-1.eps,width=14cm}
     \caption{Example of use of {\tt GDSPEC}}
     \label{fg:draw220-1}
\end{figure}

The following information on the volume are
presented in a single frame:
\begin{itemize}
\item the volume daughters (one level down in the geometrical tree);
\item a space view of the volume (with $\theta$=45 and $\phi$=135);
\item a front view cut; 
\item a side view cut; 
\item the axes of the local coordinate system;
\item a human figure;
\item the scale;
\item the shape type;
\item all the numerical parameters that define the volume.
\end{itemize}
In drawing the volumes \Rind{GDSPEC} turns on the sets visibility 
({\tt 'SEEN'}) attribute for the volume {\tt CHNAME}
itself and its direct descendents. The setting of drawing options
({\tt HIDE}, {\tt CVOL}, {\tt FILL} $\ldots$) will be respected, allowing to 
customise the drawing. An example is shown in Fig.~\ref{fg:draw220-2}.
 
\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw220-2.eps,width=14cm}
     \caption{Example of use of {\tt GDSPEC}}
     \label{fg:draw220-2}
\end{figure}

\Shubr{GDFSPC}{(CHNAME,ISORT,INTER)}
Draws on separate pictures the full set of \Rind{GDSPEC} for the geometrical
tree starting from {\tt CHNAME}, i.e. calls \Rind{GDSPEC} for
the volume {\tt CHNAME} and for all its descendants.
\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) volume name;
\item[ISORT] ({\tt INTEGER}) alphabetic sorting flag;
\begin{DLtt}{MMMM}
\item[$= 1$] all the volumes will be drawn in ascending alphabetic order
according to their name;
\item[$\neq 1$] the volumes will be drawn in the order in which they
have been created;
\end{DLtt}
\item[INTER] ({\tt INTEGER}) interactive/batch version flag;
\begin{DLtt}{MMMM}
\item[$= 1$] the routine will prompt the user at each plot
before doing a clear screen;
\item[$\neq 0$] the routine will clear automatically the screen 
before starting a new frame.
\end{DLtt}

{\bf Note:} {\tt INTER} should be set to 1 when using the interactive version 
of {\tt GEANT} and to any other value when using a batch version.
\end{DLtt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, P.Zanarini}
\Revision{S.Giani}
\Documentation{P.Zanarini, S.Giani, F.Carminati}                   
\Submitted {01.10.83}                   \Revised{13.12.93}
\Version{Geant 3.16}                    \Routid{DRAW300}
\Makehead{Handling View banks}
\section{The view banks}
The basic detector drawing routines (\Rind{GDRAW}, \Rind{GDRAWC}, 
\Rind{GDRAWX}) scan the data structure {\tt JVOLUM} repeatedly to
extract position and dimension information on the volumes. This can
be a rather lengthy process even on fast computer. 
Hidden line removal drawing requires
an auxiliary data structure and the 
relative visibility of all the volumes has to be analysed. With complicated 
detectors the time spent in this process can be substantial, depending 
on the drawing options chosen and on the speed of the machine on which 
the program is run. In order to alleviate this problem the graphic
{\it banks} and the associated routines have been developed.

The interpretation
of the structure (for instance scanning of the volumes' data structure 
to convert the 3D geometry structure into a set 
of 2D lines, visibility analysis, surface creation or
light processing) is thus separate
from the drawing itself. In this way, the interpretation is performed 
only once and all the 2D information is stored in view banks (data 
structure {\tt JDRAW} {\tt [DRAW399]}). These views can then be displayed
quickly, having only to draw the 2D vectors or the fill
areas previously stored. 

For a detector with more than 100 different volumes, for example, 
this costs only a few thousand words of memory for 
each drawing stored.

If the drawing routines are called while a view bank, identified by
a positive integer, is open (\Rind{GDOPEN})
only interpretation will be made,
no output will be generated until the bank is closed (\Rind{GDCLOS}).
When a view bank has been closed it cannot be modified, but
it can be displayed as many times as wanted (\Rind{GDSHOW}) or deleted
(\Rind{GDELET}).

Once a drawing (detectors, tracks or hits) is in a view bank, it is 
possible to scan it in detail via the {\tt LENS} or {\tt ZOOM} interactive
commands (only available with {\tt X11}). For more information see
the {\tt [XINT]} section.

\Shubr{GDOPEN}{(IVIEW)}

\begin{DLtt}{MMMMMMMM}
\item[IVIEW] ({\tt INTEGER}) view bank number ({\tt IVIEW>0}).
\end{DLtt}

Opens a {\it view bank}, used to store 2D graphics information
coming from the interpretation of 3D structures (but also 2D annotation).
All subsequent calls to the drawing routines will fill the
view bank {\tt IVIEW}, without generating any output.
\Shubr{GDCLOS}{}
Closes the current opened view bank. Once a view bank has been closed
no more drawing can be added to it. A call to \Rind{GDCLOS} also restores the
screen.

\Shubr{GDSHOW}{(IVIEW)}

\begin{DLtt}{MMMMMMMM}
\item[IVIEW] ({\tt INTEGER}) view bank number ({\tt IVIEW>0}).
\end{DLtt}

Displays view bank {\tt IVIEW}. \Rind{GDSHOW} can be called either
before or after a view bank has been closed. If a view bank is currently
open, the content of bank {\tt IVIEW} will be added to it.

\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw300-1.eps,width=12.cm}
\begin{verbatim}
      CALL GDOPEN(3)
      CALL GDRAWC('ALEF',2,5.,10.,10.,0.013,0.013)
      CALL GDCLOS
      CALL GDSHOW(3)
      .
      .
      CALL GDXYZ(0)
\end{verbatim}
     \caption{Example of use of view banks}
     \label{fg:draw300-1}
\end{figure}
 
\Shubr{GDELET}{(IVIEW)}

\begin{DLtt}{MMMMMMMM}
\item[IVIEW] ({\tt INTEGER}) view bank number ({\tt IVIEW>0}).
\end{DLtt}

Deletes a view bank from memory. If called before a bank has been closed,
\Rind{GDELET} will also restore the screen mode. 

{\bf Note:} the {\tt JDRAW} data structure has a top level bank which 
contains one word for each view bank in {\tt Q(JDRAW+IVIEW)}. This
word is a key which determines the status of the bank. If this key 
is 3, the bank itself is protected against deletion, and it cannot be 
deleted by \Rind{GDELET}. An example of use of view banks is shown in 
Fig.~\ref{fg:draw300-1}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, P.Zanarini}
\Submitted{15.11 83}     \Revised{13.12.93}
\Version{Geant 3.16}\Routid{DRAW399}
\Makehead{The data structure {\tt JDRAW}}
This data structure contains the so-called {\it view banks}. The layout of the
data structure can be found in Fig.~\ref{fg:draw399-1}. The meaning of
the variables is the following:
 
\begin{DLtt}{MMMMMMMM}
\item[NKVIEW]    number of views stored in the structure;
\item[IVIEW]     current view selected;
\item[IGU]       current graphic unit pointer;
\item[MAXGU]     number of units in graphic unit bank;
\item[MORGU]     number of words to push the graphic unit bank;
\item[IGS]       current graphic segment pointer;
\item[MAXGS]     number of segments in graphic segment bank;
\item[MORGS]     number of words to push the graphic segment bank;
\item[ITU]       current text unit pointer;
\item[MAXTU]     number of units in text unit bank;
\item[MORTU]     number of words to push the text unit bank;
\item[ITS]       current text segment pointer;
\item[MAXTS]     number of segments in text segment bank;
\item[MORTS]     number of words to push in text segment bank
\item[LENGU]     array of lengths for each graphic unit and of line attributes
({\tt LINATT});
\item[ADDGU]     array of addresses for each graphic unit;
\item[ADDTU]     array of addresses for each text unit;
\item[X]         array of u coordinates of graphic segments;
\item[Y]         array  v  coordinates of graphic segments;
\item[ICUT]      cut axis (1, 2, 3 or 0 if no cut) of the view;
\item[LINWID]    text line width and text attributes ({\tt ITXATT});
\end{DLtt}
{\tt GTHETA, GPHI, GPSI, GU0, GV0, GSCU, GSCV,} are the viewing
parameters stored in \FCind{/GCDRAW/}.
 
{\tt U0, V0, SIZE, ANGLE, IOPT, ITEXT} have the same meaning
of those given as arguments to \Rind{GDRAWT} (or \Rind{HPLSOF}~\cite{bib-HPLOT}).
 
A control word is stored in {\tt Q(JDRAW+IVIEW)}, with the following
meaning:
\begin{DLtt}{MMMM}
\item[1]  empty bank (created by internal routines to avoid gaps) or
for deleted banks;
\item[2]  bank created by the user;
\item[3]  protected bank reserved for internal use: it cannot be deleted by 
the user.
\end{DLtt}
\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/draw399-1.eps,width=14cm}
     \caption{The {\tt JDRAW} data structure}
     \label{fg:draw399-1}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{P.Zanarini}
\Revision{S.Giani}
\Documentation{P.Zanarini, S.Giani, F. Carminati}
\Submitted {15.08.83}          \Revised{16.12.93}
\Version{Geant 3.16}\Routid{DRAW400}
\Makehead{Utility routines of the drawing package}


\Shubr{GDOPT}{(CHOPT,CHVAL)}
 
\begin{DLtt}{MMMMMMMM}
\item[CHOPT] ({\tt CHARACTER*4}) option to be set;
\item[CHVAL] ({\tt CHARACTER*4}) value to be assigned to the option.
\end{DLtt}

Drawing options can be set via the routine \Rind{GDOPT} 
(corresponding to the {\tt DOPT} interactive command).
The possible value of {\tt CHOPT} and of {\tt CHVAL} are the following:
\begin{DLtt}{MMMMMMMM}
\item[PROJ] selects the type of projection, it can have the following
values:
\begin{DLtt}{MMMMMM}
\item[PARA] orthographic parallel projection (the default);
\item[PERS] perspective projection.
\end{DLtt}
\item[THRZ] acronym for {\tt T}racks and {\tt H}its in a {\tt R}adius 
versus {\tt Z} projection, where {\tt R} is the {\it vertical} axis
of the drawing and
{\tt Z} the horizontal one. If a {\it cut view} has been drawn with the
following parameters:
\begin{DLtt}{MMMMMMM}
\item[X-Z cut] {\tt CUTTHE=90} and {\tt CUTPHI=90} in \Rind{GDRAWX} or
{\tt icut=2} in \Rind{GDRAWC};
\item[Y-Z cut] {\tt CUTTHE=90} and {\tt CUTPHI=180} in \Rind{GDRAWX} or
{\tt icut=1} in \Rind{GDRAWC}.
\end{DLtt}
the different values of the option {\tt THRZ} have the following effect
on the drawing of hits and tracks:
\begin{DLtt}{MMMMMM}
\item[360] hits and tracks will be rotated around {\tt Z} onto the
{\tt Z-R, R$>$0} half plane;
\item[180] (equivalent to {\tt ON}) hits and tracks will be rotated
around {\tt Z} onto the {\tt Z-R} plane by the smaller $\phi$ angle,
so to conserve the sign of their {\tt R}-ordinate (where {\tt R} is
either {\tt X} or {\tt Y};
\item[OFF] (the default) tracks and hits will be projected from their
position in space onto the plane {\tt R-Z}.
\end{DLtt}
 
{\bf Note:} when the {\tt THRZ} option is set to {\tt ON} or {\tt 180},
particles originating in one half space and crossing the horizontal axis
will be reflected back into the original half space. If the option 
{\tt 360} can be 
chosen, all tracks and hits are on the top (positive) half space.
\item[TRAK] selects the way tracks are drawn. Possible values:
\begin{DLtt}{MMMMMM}
\item[LINE] (the default) the lines joining track points are drawn by 
{\tt GDXYZ};
\item[POIN] only the track points are drawn.
\end{DLtt}
\item[HIDE] selects the hidden line removal technique for the
drawings. Possible values are:
\begin{DLtt}{MMMMMM}
\item[OFF] (the default) hidden lines are not removed from the drawing:
the drawing is usually rather fast, but the result can be
quite messy if a large number of volumes is visible;
\item[ON] hidden lines are not drawn: if this value is selected, the 
detector can be exploded (interactive command {\tt BOMB}), cut with 
different shapes (interactive command menu {\tt CVOL}), and some parts 
can be shifted from their original position (interactive command 
{\tt SHIFT}). Drawing with hidden line removal can be demanding in
terms of CPU time and memory. At the end of each drawing
the program displays the memory used and the statistics on the 
volume visibility. When the drawing requires more memory 
than available, the program will evaluate and display the number of 
missing words, so that the user can increase accordingly the
size of the \Rind{ZEBRA} store in the common \FCind{/GCBANK/}.
\end{DLtt}
\item[SHAD] when {\tt HIDE} is {\tt ON}, selects the 
shading and filling option for the detector's surfaces that are drawn:
\begin{DLtt}{MMMMMM}
\item[OFF] (the default) no shading of the surfaces will be performed;
\item[ON]  the volume surfaces will be filled according to the value of 
their {\tt FILL} and {\tt LWID} attribute, set via {\tt GSATT}:
\begin{DLtt}{MMMMMM}
\item[FILL$=$1] the surfaces are filled with the current colour assigned
to the volume via \Rind{GSATT}, 166 different colours are available;
\item[FILL$>$1] the surfaces are filled with a shade of the basic colour
assigned to the volume according to their angle with respect to the line
of illumination, the resolution
increases with the value of {\tt FILL} (1$<$ {\tt FILL} $\leq$ 7);
\item[LWID$>$0] just as the number of scan-lines used to fill a surface
depends on the value of {\tt FILL}, their width depends on the value of 
{\tt LWID}: increasing the value of {\tt LWID} will result in thicker lines.
\end{DLtt}
\end{DLtt}
\item[EDGE] control drawing of the volume edges in {\tt HIDE=ON, FILL=ON}
mode:
\begin{DLtt}{MMMMMM}
\item[ON] the edges of the faces are not drawn,
so that they will be visible only as intersections of filled faces
with different luminosity; 
\item[OFF] the edges of the faces are drawn.
For the volumes which are not filled, the normal
edges will be drawn irrespective of the value of this option.
\end{DLtt}
\end{DLtt}

\Shubr{GDZOOM}{(ZFU,ZFV,UZ0,VZ0,U0,V0)}
\begin{DLtt}{MMMMMMMM}
\item[ZFU]    ({\tt REAL}) zoom factor for {\tt U} coordinate;
\item[ZFV]    ({\tt REAL}) zoom factor for {\tt V} coordinate;
\item[UZ0]    ({\tt REAL}) {\tt U} coordinate of centre of zoom;
\item[VZ0]    ({\tt REAL}) {\tt V} coordinate of centre of zoom;
\item[U0]     ({\tt REAL}) {\tt U} coordinate of centre of zoom 
in the resulting picture;
\item[V0]     ({\tt REAL}) {\tt V} coordinate of centre of zoom 
in the resulting picture.
\end{DLtt}
This routine sets the zoom parameters (part of the viewing parameters 
in common \FCind{/GCDRAW/}) that define how objects 
will be displayed by the subsequent drawing operations.
The zoom is computed around {\tt UZ0}, {\tt VZ0} (user coordinates).
This point will be moved to {\tt U0}, {\tt V0} in the resulting picture.
{\tt ZFU}, {\tt ZFV} are the zoom factors (positive). If {\tt ZFU} 
or {\tt ZFV} are zero, the zoom parameters are reset, and the 
original viewing is restored.

\Shubr{GDAXIS}{(X0,Y0,Z0,AXSIZ)}
\begin{DLtt}{MMMMMMMM}
\item[X0]    ({\tt REAL}) {\tt X} coordinate of origin;
\item[Y0]    ({\tt REAL}) {\tt Y} coordinate of origin;
\item[Z0]    ({\tt REAL}) {\tt Z} coordinate of origin;
\item[AXSIZ] ({\tt REAL}) axis size in centimeters.
\end{DLtt}
Draws the axes of the {\tt MA}ster {\tt R}eference {\tt S}ystem,
corresponding to the current viewing parameters.
All the arguments refer to the {\tt MARS}.

\Shubr{GDSCAL}{(U0,V0)}
\begin{DLtt}{MMMMMMMM}
\item[U0]    ({\tt REAL}) {\tt U} coordinate of the centre of the scale;
\item[V0]    ({\tt REAL}) {\tt V} coordinate of the centre of the scale.
\end{DLtt}
Draws a scale corresponding to the current viewing parameters.
Seven kinds of units are available, from 1 micron to 100 cm.
The best unit is automatically selected.

\Shubr{GDMAN}{(U0,V0)}
\Shubr{GWOMA1}{(U0,V0)}
\Shubr{GDWMN2}{(U0,V0)}
\Shubr{GDWMN3}{(U0,V0)}
\begin{DLtt}{MMMMMMMM}
\item[U0]     ({\tt REAL}) {\tt U} coordinate of the centre of the figure;
\item[V0]     ({\tt REAL}) {\tt V} coordinate of the centre of the figure.
\end{DLtt}
Draws the profile of a man, or three different female figures
in 2D user coordinates, with the current scale factors.
The figure is approximately 160 cm high.

\Shubr{GDRAWT}{(U,V,CHTEXT,SIZE,ANGLE,LWIDTH,IOPT)}
\begin{DLtt} {MMMMMMMM}
\item[U]    ({\tt REAL}) {\tt U} position of text string;
\item[V]   ({\tt REAL}) {\tt V}   position of text string;
\item[CHTEXT] ({\tt CHARACTER*(*)}) text string;
\item[SIZE]   ({\tt REAL}) character size (cm);
\item[ANGLE]  ({\tt REAL}) rotation angle (degrees);
\item[LWIRTH] ({\tt INTEGER}) line width (1,2,3,4,5);
\item[IOPT]  ({\tt INTEGER}) centering option for the text:
\begin{DLtt}{MMMM}
\item[-1] left adjusted;
\item[~0] centered;
\item[~1] right adjusted.
\end{DLtt}
\end{DLtt}
Draws text with software characters. It has the same
arguments of the {\tt HPLOT}\cite{bib-HPLOT} routine \Rind{HPLSOF} 
(a call to \Rind{HPLSOF} is actually performed).

\Shubr{GDRAWV}{(U,V,NP)}
\begin{DLtt}{MMMMMMMM}
\item[U]    ({\tt REAL}) array of {\tt U} coordinates;
\item[DT]   ({\tt REAL}) array of {\tt V} coordinates;
\item[NP]   ({\tt INTEGER}) number of points.
\end{DLtt}
Draws 2D polylines in user coordinates.
The routine \Rind{GDFR3D} can be called to transform 3D points 
in 2D user coordinates.

\Shubr{GDHEAD}{(ISEL,CHNAME,CHRSIZ)}
\begin{DLtt}{MMMMMMMM}
\item[ISEL]  ({\tt INTEGER}) option to be selected for the title name 
(decimal integer):
\begin{DLtt}{MMMMMMM}
\item[~~~~~0] only the header lines;
\item[xxxxx1] add the text {\tt CHNAME} centered on top of header;
\item[xxxx1x] add global detector name (first volume) on left;
\item[xxx1xx] add date on right;
\item[xx1xxx] select thick characters for text in top of head (i.e. 
with larger line width);
\item[x1xxxx] add the text {\tt EVENT NR x} on top of header;
\item[1xxxxx] add the text {\tt RUN NR x} on top of header.
\end{DLtt}

{\bf Note:} {\tt ISEL=x1xxx1} or {\tt ISEL=1xxxx1} are illegal choices,
i.e. they generate overwritten text.
\item[CHNAME] ({\tt CHARACTER*4}) title string;
\item[CHRSIZ] ({\tt REAL}) character size (cm) of text {\tt CHNAME}.
\end{DLtt}
This routine draws a frame header.

\Shubr{GDCOL}{(ICOL)}

{\bf This routine has been kept for backward compatibility. The appropriate
{\tt HIGZ} routines should be called instead.}

\begin{DLtt}{MMMMMMMM}
\item[ICOL] ({\tt INTEGER}) colour code (1,2,\ldots,8), 
it can be positive, negative, 
or zero:
\begin{DLtt}{MMMM}
\item[$>$0] to set the colour permanently;
\item[$<$0] to set the colour temporarily;
\item[$=$0] to restore the permanent colour value.
\end{DLtt}
\end{DLtt}
This routine sets the colour code.
For example we can set {\tt ICOL=-1} to start with colour  1,
then change to {\tt ICOL=3} to set colour  3, and at the end
restore the original colour by setting {\tt ICOL=0} that
takes colour  1 again.

\Shubr{GDLW}{(LW)}

{\bf This routine has been kept for backward compatibility. The appropriate
{\tt HIGZ} routines should be called instead.}

\begin{DLtt}{MMMMMMMM}
\item[ LW] ({\tt INTEGER}) line width code (1,2,\ldots,5), it can be positive, 
negative, or zero:
\begin{DLtt}{MMMM}
\item[$>$0] to set the line width permanently;
\item[$<$0] to set the line width temporarily;
\item[$=$0] to restore the permanent line width value.
\end{DLtt}
\end{DLtt}
This routine sets the line width.
For example we can set {\tt LW=-1} to start with line width  1,
then change to {\tt LW=3} to set line width 3, and at the end
restore the original line width by setting {\tt LW=0} that
takes line width  1 again.

\Shubr{GDCURS}{(U0*,V0*,ICHAR*)}
\begin{DLtt}{MMMMMMMM}
\item[U0]   ({\tt REAL}) {\tt U} coordinate of the graphics cursor;
\item[V0]   ({\tt REAL}) {\tt V} coordinate of the graphics cursor;
\item[ICHAR] ({\tt INTEGER}) {\tt ASCII} value of the key pressed.
\end{DLtt}
A graphics input is provided by this routine to fetch the 2D user coordinates
of the graphics cursor on the screen.
Interactive commands to zoom, 
measure, or pick tracks or hits make use of this routine.
When the routine is called in the interactive
version of {\tt GEANT},
the present position of the graphics cursor on the screen becomes visible and
it can be moved with the mouse. The user then positions the 
cursor and presses the left button. 
The routine returns then in {\tt U0}, {\tt V0} the user coordinates
of the graphics cursor.
On terminals which do not have the mouse, the graphic cursor is moved
with the arrows, and the point is acquired when any key, except {\it carriage
return}, is pressed. In this case the routine returns in {\tt ICHAR} the 
{\tt ASCII} value of the key pressed. If the user types the carriage return, 
the previous value is retained.

\Shubr{GDFR3D}{(X,NPOINT,U*,V*)}
\begin{DLtt}{MMMMMMMM}
\item[X]      ({\tt REAL}) array {\tt X(3,NPOINT)} of space points;
\item[NPOINT] ({\tt INTEGER}) number of points:
\begin{DLtt}{MMMM}
\item[$>$0] {\tt X} is in the current {\tt DRS};
\item[$<$0] {\tt X} is in {\tt MARS};
\end{DLtt}
\item[U]  ({\tt REAL}) array of {\tt NPOINT U} coordinates;
\item[V]  {(\tt REAL}) array of {\tt NPOINT V} coordinates.
\end{DLtt}
Converts from 3D space coordinates (either in {\tt MA}ster or 
{\tt D}aughter {\tt R}eference {\tt S}ystem) to the corresponding 2D 
user coordinates.
 
This routine maps a space point ({\tt X, Y, Z} in a right-handed reference 
system) onto a plane perpendicular to the observer's line of sight,
defined by the spherical angles $\theta$, $\phi$:
\begin{DLtt}{MMMM}
\item[${\tt \theta}$] the angle between the line of sight and the {\tt Z} 
axis ($0 \leq \theta \leq 180$);
\item[${\tt \phi}$] the angle between the {\tt X} axis and the projection 
onto the {\tt X-Y} plane of the line of sight ($0 \leq \phi \leq 360$).
\end{DLtt}
The plane onto which the point is mapped is actually the {\tt X-Y} plane 
of the {\tt P}rojection {\tt R}eference {\tt S}ystem, and
the observer's line of sight is the {\tt Z} axis of {\tt PRS}. The vertical 
axis on
this plane ({\tt Y} axis on {\tt PRS}) is obtained by intersecting this plane
with the one of {\tt MARS} or {\tt DRS} containing the line of sight and 
the {\tt Y} axis.

\Shubr{GD3D3D}{(XIN,NPOINT,XOUT*)}
\begin{DLtt}{MMMMMMMM}
\item[XIN]   ({\tt REAL}) array {\tt XIN(3,NPOINT)} of input points in 
{\tt MARS};
\item[NPOINT] ({\tt INTEGER}) number of points;
\item[XOUT]   ({\tt REAL}) array {\tt XOUT(3,NPOINT)} of output points 
in {\tt PRS}.
\end{DLtt}
Converts from 3D space coordinates in {\tt MARS}
to 3D coordinates in {\tt P}rojection {\tt R}eference 
{\tt S}ystem (whose {\tt Z} axis is along
the line of sight given by $\theta$ and $\phi$ angles).

\putbib[cnasbibl,geabibl]
\end{bibunit}
 
%%     GEOM part     %%
 
\begin{bibunit}[unsrt]
\renewcommand{\bibname}{GEOM Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{F.Bruyant}
\Submitted{01.10.84}      \Revised{10.03.94}
\Version{Geant 3.21}\Routid{GEOM001}
\Makehead{The geometry package}

The geometry package has two main functions:

\begin{enumerate}
\item define, during the initialisation of the program,
the geometry in which the particles will be tracked;
\item communicate, during the event processing phase, to the tracking 
routines the information for 
the transport of the particles in the geometry which has been defined.
\end{enumerate}

The present section reviews the concepts of the geometry package and explains
how the geometrical information should be provided by the user.
It is important to point out that, once the geometry has been defined,
the tracking of particles through the different volumes proceeds without any
intervention from the user {\tt [TRAK]}. 

The connection between the
geometry and tracking packages is established by the subroutines
\Rind{GMEDIA}/\Rind{GTMEDI}, \Rind{GTNEXT}/\Rind{GNEXT} and
\Rind{GINVOL} which answer respectively the questions:
\begin{itemize}
\item    In which volume is a given point ?
\item    What is the distance to the nearest volume along the trajectory
of the particle ?
\item    What is the distance to the nearest volume ?
\item    Is a given point still in the current volume ?
\end{itemize}
The routines \Rind{GTMEDI}, \Rind{GTNEXT} are used in a dynamic context,
at tracking time, when the
knowledge of the track direction can be used to save time.
\section{ The volume definition }

Experimental setups, as complex as the LEP\footnote{The Large Electron Positron
collider in operation at CERN.} detectors, can be described 
rather accurately through the definition of a set of {\it volumes}.
Each {\it volume} is given a {\it name} and is characterised by:
\begin{itemize}
\item a {\it shape} identifier, specifying one of the basic
          geometrical shapes available {\tt [GEOM050]};
\item   the {\it shape} parameters, giving the dimensions of the volume;
\item   a local reference system, with origin and axes defined
for the each shape;
\item    the physical properties, given by a set of constants describing the
homogeneous {\it material} which fills the volume ({\tt [CONS]});
\item  additional properties, known as {\it tracking medium} parameters,
which depend on the characteristics of the volume itself (the
material identifier is one of the constants) and on its geometrical and
physical environment (properties of the neighbouring volumes, magnetic field, 
etc.) {\tt [CONS, TRAK]};
\item  a set of attributes, in connection with the drawing package
and the detector response package {\tt [DRAW, HITS]}.
\end{itemize}
Until it is {\it positioned} in a given reference frame,
a volume is an entity which has no spatial relation with the other volumes.
By convention, a unique initial volume has to be defined first
which will contain
all the other volumes. The reference frame intrinsic
to this volume is considered to be the master reference frame.

There are sixteen basic shapes in {\tt GEANT}, which are described in
{\tt [GEOM050]}.

\section{Volumes with contents}
A {\it volume} can be declared to have contents and as such it becomes a 
{\it mother}
volume. The contents are {\it either} predefined volumes which are explicitly 
positioned inside the mother, {\it or} new volumes which are implicitly defined
by a division mechanism applied to the mother. Positioning a volume with given 
shape and dimensions inside a mother volume is obtained by specifying its 
translation and rotation with respect to the mother reference frame. The user 
should make sure that no volume extends beyond the boundaries of its mother.

When a volume is positioned, the user gives it a {\it number}. Multiple copies 
of the same volume can be positioned inside the same or different mothers
as long as their copy numbers differ.
The contents of the positioned volume are reproduced 
in all copies. 

Mother volumes can be divided by planes along the three axes ($ x, y, z$),
radially along $R_{xy}$, or along the spherical coordinates of a 
polar system: $R$, $\theta$ and $\phi$. The axis along which it is
possible to perform a division depend on the shape to be divided. The
general rule is that the result of the division be still a {\tt GEANT} shape.

A volume can be partially or totally divided.
The division process
generates a number of {\it cells}, which are considered as new volumes.
The cell dimensions are computed
according to the number of divisions or the step size. A cell, as any
other volume, can again be divided, or have other
volumes positioned into it. Any operation of positioning or division
performed on one cell is repeated to all the cells resulting
from the division. A volume can be {\it either} divided {\it or} have
contents, but not the two things together.

These operations define a physical tree with several
levels. The material and properties of the contents replace the
ones of the mother within the space region they occupy.
A {\tt volume} is therefore defined not only by its intrinsic characteristics
but also by those of its {\it descendants}, namely its contents (by
division or positioning), the contents of its contents, etc.

\section{ Overlapping volumes, see also {\tt [GEOM020]} }
The user may define volumes which have no relation with the real
objects. It is sometimes convenient to make use of such volumes,
to artificially delimit regions with simple shapes.
Doing this, it may happen that
volumes partially overlap each other. (A volume positioned inside a mother is
obviously not regarded as overlapping the mother).

It is possible in {\tt GEANT} to handle partially overlapping volumes, but
there are some implications that the user should be aware of.
A flag {\tt 'ONLY'/'MANY'} is assigned to each copy of a given volume at the 
moment this is positioned. The {\tt 'MANY'} option indicates that
a point found in this volume could also be in other volumes which are
not its direct descendants. If one of the
overlapping volumes where the point is found is declared as {\tt 'ONLY'}, the
geometry subroutines will give priority to this volume, 
and the search stops.
If a point is inside several {\tt 'MANY'} volumes and outside all {\tt 'ONLY'}
ones, priority will be given to the volume
found at the deepest level, or to the first found, if there are many
valid {\tt 'MANY'} candidates at the same level. In order to avoid ambiguities,
two overlapping {\tt 'MANY'} volumes should in general
have the same tracking medium.

\section{The physical tree}
An example of a 4 level physical tree with embedded volumes and
the corresponding geometrical configuration are shown in fig~\ref{fg:geom001-1}.

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/geom001-1.eps,width=16cm}
      \caption{Example of geometrical tree structure}
      \label{fg:geom001-1}
\end{figure}

where A and B are {\tt BOX}es, C a {\tt TRAP}ezoid, and D and E {\tt TUBE}s
(see {\tt [GEOM050]} for more detail).
Notice that the same physical configuration could be described as well though
a 3 level tree if D were defined as a {\it hollow}
{\tt TUBE}, with inner radius non-zero and E
directly positioned into B.
The package accepts a maximum of 15 levels, which should be
enough to represent the fine details of a complex structure.
\section{The data structures {\tt JVOLUM} and {\tt JGPAR}
and the common {\tt /GCVOLU/}}

In practice, the physical tree is not represented as such in the
data part of the program. Instead, a logical tree structure is defined,
the {\tt JVOLUM} data structure, which describes the arrangement of
volumes in a compact and recurrent way. Each generic volume appears once,
and once only, and carries the information relevant to the volume itself
and to its contents, if any, by reference to the
generic volumes corresponding to those contents.
In the situation where division or multiple copies occur, there
is no longer a one-to-one correspondence between a volume in the
logical tree and a region in space. Information has to be added at
tracking time to identify which division cell or which copy was considered
at each depth level along the path through the physical tree. This
information is stored by the subroutine \Rind{GMEDIA}/\Rind{GTMEDI}, for the
current point of the current track, in the common \FCind{/GCVOLU/}. It includes
the current level number {\tt NLEVEL} and, for each level, starting from the
first mother volume, the identification of the corresponding volume, e.g.:
{\tt NAME}, {\tt  NUMBER}, {\tt 'ONLY'/'MANY'} flag, translation and rotation
with respect to the master reference frame and so on. 
The number of shape parameters
and pointers to the vector describing the actual values of those
parameters, for each level, are stored in the data part and in the link
part, of the data structure {\tt JGPAR}, respectively.

\section{The user tools }

The geometry through which the particles are transported is defined by the
user via a set of calls to subroutines of the {\tt GEANT} package.

The user can define a volume through a call to the subroutine:
\begin{DLtt}{MMMMMMMM}
\item[\Rind{GSVOLU}] define ({\it instantiate}) a volume by giving a 
{\tt NAME} and the actual parameters to a shape; the position of the volume 
inside the bank {\tt JVOLUM} is returned. If any of the parameters which
express a length is negative, {\tt GEANT} will assign to this parameter
at tracking time
the maximum value allowed, without protruding out of the mother 
which contains the particle transported.

A shape can be instantiated
into a volume also without actual parameters. These will then be supplied
when positioning each copy of the volume via the \Rind{GSPOSP} routine (see
below). This allows to have many {\it similar} volumes with the same name
and shape, but different actual parameters in each copy.
\end{DLtt}

The user can position a volume through a call to either one of the following 
subroutines:

\begin{DLtt}{MMMMMMMM}
\item[\Rind{GSPOS}] position a copy of a volume inside its mother with respect 
to the mother's reference system. A a point in space, a rotation matrix
index, a copy number and the {\tt 'ONLY'/'MANY'} flag are supplied;
\item[\Rind{GSPOSP}] position a copy of a volume which has been instantiated
without actual parameters inside its mother with respect to the mother reference
system. The parameters of the copy being positioned are supplied as well.
The volumes will be identified by name and copy number as for multiple copies
of the same volume.
\end{DLtt}
The user can divide a volume through a call to either one of the following
subroutines:

\begin{DLtt}{MMMMMMM}
\item[\Rind{GSDVN}] divide a volume in a given {\it number} of cells completely
filling the mother. In this case the cell tracking medium
is assumed to be the same as for the mother. See also \Rind{GSDVN2}.
\item[\Rind{GSDVT}] divide a volume with slices of a given {\it step}.
The cell tracking medium can be different from the one of the mother.
See also \Rind{GSDVT2}.
\item[\Rind{GSDVX}] divide a volume starting from a given offset. In addition 
to {\tt STEP} and {\tt NDIV} (with at least one of them positive to be 
effectively useful), the origin of the first cell, the cell tracking medium 
and eventually the computed (maximum) number of divisions must be specified.
\end{DLtt}


\section{Geometrical information retrieval}

The parameters of a volume may depend on the physical tree which leads to
this volume. The dimensions of one of the slices of a cone divided along
{\tt Z} depends on which slice we consider. So a volume is completely
defined only if we specify the path in the tree. This is composed by the
name and copy number of the volumes containing the one we are interested
in, from the first mother.

Given this information, the routine \Rind{GLVOLU} is capable to fill the
common \FCind{/GCVOLU/}, and the structure {\tt JGPAR} with the actual
parameters of the instance chosen.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{S.Giani, S.Ravndal}
\Submitted{10.03.94}      \Revised{10.03.94}
\Version{Geant 3.21}\Routid{GEOM010}
\Makehead{Tracking inside volumes and optimisation}



The tracking of particles through the geometrical data structure is the key
functionality of {\tt GEANT}. 
At every particle's step, the program must find the
volume where the particle is ({\tt GTMEDI}) and the next boundary it will cross
({\tt GTNEXT}). This can take
about $60\%$ of the total simulation time (even for detectors described
in an optimized way); therefore, a new logic has been introduced to minimize
the time spent for the search in the geometrical tree. 

\section{ Virtual divisions}

Instead of a linear or
binary search (time spent proportional or logarithmic with the number of
volumes, respectively), a `direct access' technique has been developed to
make the time basically independent from the number of volumes. Every volume
containing other volumes is `virtually' divided in equal slices at 
initialization time via the call to {\tt GGCLOS}
(the best axis is computed automatically). 
For each slice,
a data structure is filled with a list of the volumes 
identifiers intersecting such
slice. 
Slices with identical lists are pointing to the same contents
and are collected. At 
tracking time it is immediate to find in which slice the particle is and only
its contents have to be checked. The same is true to find the next boundary to
be crossed: only if the intersection point with a content lies outside the 
current collection of slices, the next one will be checked. The algorithm
gives in average about a factor 2 in speed for the overall simulation in the
large detectors. It also minimizes the dependency of the performance
on the skill and experience of the programmer and allows a fast tracking even
in geometrical structures received from CAD systems.

\section{ Other optimisation tools}

The following facilities are kept for backward compatibility reasons.
If called by the user, these optimisation tools are called at 
initialisation time, but not used at tracking time. Instead, the
new optimisation using 'virtual divisions' is performed.
If the user wants to use the older optimisation tools, he can 
recompile {\tt GEANT} 3.21 using the {\tt PATCHY} flag {\tt +OLD}.
\begin{enumerate}
\item \Rind{GSORD}/\Rind{GGORD}

From the position of the contents inside a given volume, the
subroutine \Rind{GSORD} computes fictitious
boundaries along the specified coordinate, simulating
a division with irregular step size. A binary search technique is used
to identify within which pseudo-cell the current point is. The slow process
of computing whether the point is inside or outside the contents is therefore
limited to the few (if any) volumes overlapping with that
pseudo-cell, as sketched in fig~\ref{fg:geom001-2}.

\begin{figure}[hbt]
      \centering
      \epsfig{file=eps/geom001-2.eps,width=16cm}
      \caption{Example of pseudo-cells created by {\tt GSORD}}
      \label{fg:geom001-2}
\end{figure}

The coordinate selected for the pseudo division can be any of
{\tt X, Y, Z, $R_{xy}$, $R$, $\phi$ or $\theta$;}.
For a given volume, the call to \Rind{GSORD} has to come after all its first
level contents have been positioned.

\item
\Rind{GSNEXT}/\Rind{GSNEAR}

when a particle exits from a daugther of a 
mother volume, the contents are scanned initially
in the order in which 
they have been positioned, and the user should take care over
the best sequence of \Rind{GSPOS} calls. However, when the particle
{\it  comes back}
inside the mother from any one of the contents, it is
usually possible to limit the search to the neighbour contents.
The subroutines \Rind{GSNEXT}/\Rind{GSNEAR} permit the user to inject, at
initialisation time, for each content
in turn, the list of neighbours to search for.
\Rind{GSNEAR} is recommended, \Rind{GSNEXT} is kept for backward,
compatibility and has a different default option. A proper use of this
facility can reduce the search time significantly.

\item \Rind{GSUNEA}/\Rind{GUNEAR}

The volumes to be checked when exiting from one daughter can depend on 
the direction and position of the exiting particles. To optimise tracking
taking into account these dynamic features, the user can code the
\Rind{GUNEAR} routine, and inform {\tt GEANT} that it has to use it
at tracking time by calling the \Rind{GSUNEA} routine.
\end{enumerate}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Documentation{S.Giani, S.Ravndal}
\Submitted{22.03.94}      \Revised{22.03.94}
\Version{Geant 3.21}\Routid{GEOM020}
\Makehead{`{\tt MANY}' Volumes and boolean operations on volumes}

The topology of 
{\tt GEANT} is given by 16 general shapes which are used to represent
solids in the design of detectors. These shapes are bounded by 2-nd order
surfaces for reasons of speed at tracking time. New tools have been 
introduced to extend the power of the {\tt GEANT} geometry: boolean operations 
(union, intersection and subtraction) between such shapes are now allowed, so
that an infinity of new shapes can be built; divisions along arbitrary axis
are now possible, allowing to exploit any simmetry in the design.
The tracking is now able to handle overlapping volumes in the most general
sense: the concept of {\tt MANY} volumes has been extended to automatic 
clipping 
for protuding objects. Thanks to this {\tt MANY} technique, 
any 3D or 2D geometrical
pattern can be reduced to a single dimensional structure, basically cancelling
the need for {\tt GUNEAR} at tracking time. 
Finally, more than one order of magnitude in speed has been gained compared
to the old step search algorithm used to track in {\tt MANY} volumes. \\[.5cm]
\begin{itemize}
\item Topological extensions via boolean operations.
\item Divisions along arbitrary axis.
\item Reduction of 2D structure to 1D structure.
\item Logic and algorithm.
\end{itemize} 
 
\section{Topological extensions via boolean operations}

Boolean operations between a given set of shapes allow the creation of an
infinite number of shapes. Adding a single new primitive (for ex. a toroid) to 
the basic set of shapes, all the possible combinations with all the old shapes
become moreover possible.\\[.5cm]
\begin{itemize}
\item UNION: the union of two volumes B and C is obtained positioning two
             overlapping `{\tt MANY}' daughters B and C inside the same mother
             A.
             To identify the result of the union as a single volume is enough
             to create a SET associated to the volumes B and C. 
\item SUBTRACTION: the subtraction of a volume B from a volume C is obtained
                   positioning B as `{\tt ONLY}' and C as a `{\tt MANY}' 
                   overlapping B.
                   The result of the subtraction is automatically what the
                   tracking sees as the C volume, so {\tt GSPOS} is the only 
                   user
                   interface needed. The volume B can have the same material as
                   the mother A or not. The normal positioning technique used
                   for `{\tt ONLY}s' is a particular case of boolean subtraction (a
                   volume is contained inside the other).
\item INTERSECTION: the intersection of two volumes B and C is obtained 
                    positioning a protuding `{\tt MANY}' object C in 
                    a `{\tt MANY}' object
                    B which is normally placed in a `{\tt ONLY}' mother A. A and B
                    must have the same material, while C has the material asked
                    for the intersection. The intersection is given by the part
                    of C which is not protuding from B, therefore by what the
                    new tracking sees as the volume C: again the only needed
                    user interface is {\tt GSPOS}. If not interacting with other
                    daughters of A, B could also be `{\tt ONLY}'. Without any
                    ambiguity, even further `{\tt MANY}' daughters of A can overlap
                    the protuding part of C outside B, because it is really
                    invisible to the new tracking. 
\end{itemize}
 
\section{Divisions along arbitrary axis}

As protuding {\tt MANY} daughters are automatically clipped by their mother, 
it is
possible to divide objects along arbitrary directions. Suppose for example
that we want to divide a PCON into planar slices parallel to the plane
X + Y = 0; it is enough to position a {\tt MANY} BOX embedding completely the
PCON `inside' the PCON itself; the BOX must be rotated of 45 degrees in X and
Y and then divided along one of its natural axis. Another example can be the
following: suppose we want to divide 24 times in PHI a PGON with only 6 natural
segmentations in PHI; 
then we have to position a {\tt MANY} TUBE, completely embedding
the PGON, `inside' the PGON itself; again, we can now divide the tube in 24
slices in PHI and the tracking will see only the PGON divided 24 times in PHI.
\begin{center}
Reduction of 2D structure to 1D structure.
\end{center}
Sometimes there are complicated multidimensional geometrical structures (like
honeycombs, spaghetti, etc.) which can be reduced to the overlap of several
one-dimensional patterns (for which divisions can be used or virtual divisions
are particularly efficient). The {\tt MANY} option allows to superimpose such 1D
structures to reproduce the multi-dimensional ones in a very effective way,
instead of positioning the volumes one by one in the 2D or 3D pattern.
The following picture will explain better this concept.


\section{Logic and algorithm}

In {\tt GTMEDI}, all the '{\tt MANY}' volumes for which the point 
is found inside (and not
in any of its daughters) is put in a stack saving also its branch of the tree.
The point is considered to be in the deepest level 
'{\tt MANY}'. Each time the point
is also found in an intermediate '{\tt ONLY}' volume the stack is 
cleared (to insure
boolean subtraction). In {\tt GTNEXT}, if stepping 
inside a '{\tt MANY}' volume, not {\tt ONLY}
its daughters and its own boundaries are checked, but also the daughters and
the boundaries of all the others '{\tt MANY}' in the 
list have to be checked. This
is not yet enough: the logic requires that the boundaries of all the possible
overlapping volumes are checked, so it is also necessary for each `{\tt MANY}' 
volume 
of the list to go up to the first '{\tt ONLY}' mother 
in the tree repeating the same 
procedure. This allows also boolean intersection. Obviously, volumes already
checked are not checked again. 



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, A.McPherson}
\Submitted{15.08.83}            \Revised{08.11.93}
\Version{Geant 3.16}\Routid{GEOM050}
\Makehead{The {\tt GEANT} shapes}
 
The {\tt GEANT} geometry package offers sixteen basic shapes with which
to describe the setups where particles are transported. In this section
we will describe these shapes. For each shape figs~(\ref{fg:geom050-1}),
(\ref{fg:geom050-2}), (\ref{fg:geom050-3}), (\ref{fg:geom050-4}) 
show a simple drawing illustrating the
meaning of the parameters and the position and orientation of the
reference frame proper of that shape. A description of the shapes and of
their parameters follows. Angles are always in degrees. With every shape is
given the code which is used internally by {\tt GEANT} to identify it.
 
\begin{DLtt}{MMMMMMMM}
\item[1  BOX] box with faces perpendicular to the
axes. It has 3 parameters:
\begin{enumerate}
\item {\tt DX} half-length of the box along the x-axis;
\item {\tt DY} half-length of the box along the y-axis;
\item {\tt DZ} half-length of the box along the z-axis;
\end{enumerate}
 
\item[2  TRD1] trapezoid with the x dimension varying along z. It has
4 parameters:
\begin{enumerate}
\item {\tt DX1} half-length along x at the z surface positioned
at {\tt -DZ};
\item {\tt DX2} half-length along x at the z surface positioned
at {\tt +DZ};
\item {\tt DY} half-length along the y-axis;
\item {\tt DZ} half-length along the z-axis;
\end{enumerate}
 
\item[3  TRD2] trapezoid with both x and y dimensions varying along z.
It has 5 parameters:
\begin{enumerate}
\item {\tt DX1} half-length along x at the z surface positioned
at {\tt -DZ};
\item {\tt DX2} half-length along x at the z surface positioned
at {\tt +DZ};
\item {\tt DY1} half-length along y at the z surface positioned
at {\tt -DZ};
\item {\tt DY2} half-length along y at the z surface positioned
at {\tt +DZ};
\item {\tt DZ} half-length along the z-axis;
\end{enumerate}

\item[4  TRAP] {\it general} trapezoid: the
faces perpendicular to z are trapezia and their centres are not necessarily
on a line parallel to the z axis. This shape has 11 parameters, but only 
considering that the faces should be planar, only 9 are really independent.
A check is performed on the user parameters and a message is printed in
case of non-planar faces. Ignoring this warning may cause unpredictable
effect at tracking time.
\begin{enumerate}
\item {\tt DZ} half-length along the z axis;
\item {\tt THET} polar angle of the line joining the centre of the
face at {\tt -DZ} to the centre of the one at {\tt +DZ};
\item {\tt PHI} azimuthal angle of the line joining the centre of the
face at {\tt -DZ} to the centre of the one at {\tt +DZ};
\item {\tt H1} half-length along y of the face at {\tt -DZ};
\item {\tt BL1} half-length along x of the side at {\tt -H1}
in y of the face at {\tt -DZ} in z;
\item {\tt TL1} half-length along x of the side at {\tt +H1}
in y of the face at {\tt -DZ} in z;
\item {\tt ALP1} angle with respect to the y axis from the centre
of the side at {\tt -H1} in y to the centre 
of the side at {\tt +H1} in y of the face at {\tt -DZ} in z;
\item {\tt H2} half-length along y of the face at {\tt +DZ};
\item {\tt BL2} half-length along x of the side at {\tt -H2}
in y of the face at {\tt +DZ} in z;
\item {\tt TL2} half-length along x of the side at {\tt +H2}
in y of the face at {\tt +DZ} in z;
\item {\tt ALP2} angle with respect to the y axis from the centre
of the side at {\tt -H2} in y to the centre 
of the side at {\tt +H2} in y of the face at {\tt +DZ} in z;
\end{enumerate}
 
\item[5  TUBE] tube. It has 3 parameters:
\begin{enumerate}
\item {\tt RMIN} inside radius;
\item {\tt RMAX} outside radius;
\item {\tt DZ} half length in z;
\end{enumerate}

\item[6  TUBS] $\phi$ segment of a tube. It has 5 parameters:
\begin{enumerate}
\item {\tt RMIN} inside radius;
\item {\tt RMAX} outside radius;
\item {\tt DZ} half length in z;
\item {\tt PHI1} starting angle of the segment;
\item {\tt PHI2} ending angle of the segment;
\end{enumerate}
{\tt PHI1} should be smaller than {\tt PHI2}. If this is not the case,
the system adds 360 degrees to {\tt PHI2}.
 
\item[7  CONE] conical tube. It has 5 parameters:
\begin{enumerate}
\item {\tt DZ} half-length in z;
\item {\tt RMN1} inside radius at {\tt -DZ} in z;
\item {\tt RMX1} outside radius at {\tt -DZ} in z;
\item {\tt RMN2} inside radius at {\tt +DZ} in z;
\item {\tt RMX2} outside radius at {\tt +DZ} in z;
\end{enumerate}

 
\item[8  CONS] $\phi$ segment of a conical tube. It has 7 parameters:
\begin{enumerate}
\item {\tt DZ} half-length in z;
\item {\tt RMN1} inside radius at {\tt -DZ} in z;
\item {\tt RMX1} outside radius at {\tt -DZ} in z;
\item {\tt RMN2} inside radius at {\tt +DZ} in z;
\item {\tt RMX2} outside radius at {\tt +DZ} in z;
\item {\tt PHI1} starting angle of the segment;
\item {\tt PHI2} ending angle of the segment;
\end{enumerate}
{\tt PHI1} should be smaller than {\tt PHI2}. If this is not the case,
the system adds 360 degrees to {\tt PHI2}.

\item[9  SPHE] segment of spherical shell. It has 6 parameters:
\begin{enumerate}
\item {\tt RMIN} inside radius of the shell;
\item {\tt RMAX} outside radius of the shell;
\item {\tt THE1} starting polar angle of the shell;
\item {\tt THE2} ending polar angle of the shell;
\item {\tt PHI1} starting azimuthal angle of the shell;
\item {\tt PHI2} ending azimuthal angle of the shell;
\end{enumerate}
 
\item[10  PARA] parallelepiped. It has 6 parameters:
\begin{enumerate}
\item {\tt DX} half-length in x;
\item {\tt DY} half-length in y;
\item {\tt DZ} half-length in z;
\item {\tt ALPH} angle formed by the y axis and by the plane joining the
centre of the faces parallel to the z-x plane at {\tt -DY} and {\tt +DY};
\item {\tt THET} polar angle of the line joining the centres of the faces
at {\tt -DZ} and {\tt +DZ} in z;
\item {\tt PHI} azimuthal angle of the line joining the centres of the faces
at {\tt -DZ} and {\tt +DZ} in z;
\end{enumerate}

\item[11  PGON] {\it polygon}. It has at least 10 parameters:
\begin{enumerate}
\item {\tt PHI1} the azimuthal angle $\phi$ at which the volume {\it begins}
(angles are counted counterclockwise);
\item {\tt DPHI} {\it opening} angle of the volume, which extends from
{\tt PHI1} to {\tt PHI1+DPHI};
\item {\tt NPDV} number of sides of the cross section between the
given $\phi$ limits;
\item {\tt NZ} number of planes perpendicular to the z axis where the
dimension of the section is given -- this number should be at least
2 and {\tt NP} triplets of numbers must follow;
\item {\tt Z} z coordinate of the section;
\item {\tt RMIN} radius of the circle tangent to the sides of the inner
polygon in the cross-section;
\item {\tt RMAX} radius of the circle tangent to the sides of the outer
polygon in the cross-section;
\end{enumerate}

\item[12  PCON] {\it polycone}. It has at least 9 parameters:
\begin{enumerate}
\item {\tt PHI1} the azimuthal angle $\phi$ at which the volume {\it begins}
(angles are counted counterclockwise);
\item {\tt DPHI} {\it opening} angle of the volume, which extends from
{\tt PHI1} to {\tt PHI1+DPHI};
\item {\tt NZ} number of planes perpendicular to the z axis where the
dimension of the section is given -- this number should be at least
2 and {\tt NP} triplets of numbers must follow;
\item {\tt Z} z coordinate of the section;
\item {\tt RMIN} radius of the inner circle in the cross-section;
\item {\tt RMAX} radius of the outer circle in the cross-section;
\end{enumerate}

\item[13 ELTU] elliptical cross-section tube. It has three parameters:
\begin{enumerate}
\item {\tt P1} semi-axis of the ellipse along x;
\item {\tt P2} semi-axis of the ellipse along y;
\item {\tt DZ} half-length in z;
\end{enumerate}

The equation of the surface is $x^2\mbox{\tt P1}^{-2} + y^2
\mbox{\tt P2}^{-2} = 1$.

\item[14 HYPE] hyperbolic  tube, i.e. the inner and  outer surfaces are
hyperboloids, as would be formed by a system of cylindrical
wires  which were  then  rotated  tangentially about  their
centres. It has  4  parameters:
\begin{enumerate}
\item {\tt RMIN} inner radius at the extremities;
\item {\tt RMAX} outer radius at the extremities;
\item {\tt DZ} half-length in z;
\item {\tt THET} {\it stereo  angle} of rotation of the two faces;
\end{enumerate}

The hyperbolic  surfaces are  given by: $r^2 = (z \tan \theta )^2
+r_{z=0}^2$

\item[28  GTRA] general twisted trapezoid: the
faces perpendicular to z are trapezia and their centres are not necessarily
on a line parallel to the z axis as the {\tt TRAP}; additionally, the
faces may be {\it twisted} so that none of their edges are parallel. 
It is a {\tt TRAP} shape, except that it is {\it twisted}
in the x-y plane as a function of z. 
The parallel sides perpendicular to the z axis
are rotated with respect to the x axis by an angle {\tt
TWIST}, which is one of the parameters. The shape is defined by the eight
corners and is assumed to be constructed of straight lines joining points on
the boundary of the trapezoidal face at z=-DZ to the corresponding points on the
face at z=DZ. Divisions are not allowed.  It has 12 parameters: 
\begin{enumerate}
\item {\tt DZ} half-length along the z axis;
\item {\tt THET} polar angle of the line joining the centre of the
face at {\tt -DZ} to the centre of the one at {\tt +DZ};
\item {\tt PHI} azimuthal angle of the line joining the centre of the
face at {\tt -DZ} to the centre of the one at {\tt +DZ};
\item {\tt TWIST} {\it twist} angle of the faces parallel to the x-y plane
at z = $\pm${\tt DZ} around an axis parallel to z passing through their
centre;
\item {\tt H1} half-length along y of the face at {\tt -DZ};
\item {\tt BL1} half-length along x of the side at {\tt -H1}
in y of the face at {\tt -DZ} in z;
\item {\tt TL1} half-length along x of the side at {\tt +H1}
in y of the face at {\tt -DZ} in z;
\item {\tt ALP1} angle with respect to the y axis from the centre
of the side at {\tt -H1} in y to the centre 
of the side at {\tt +H1} in y of the face at {\tt -DZ} in z;
\item {\tt H2} half-length along y of the face at {\tt +DZ};
\item {\tt BL2} half-length along x of the side at {\tt -H2}
in y of the face at {\tt +DZ} in z;
\item {\tt TL2} half-length along x of the side at {\tt +H2}
in y of the face at {\tt +DZ} in z;
\item {\tt ALP2} angle with respect to the y axis from the centre
of the side at {\tt -H2} in y to the centre 
of the side at {\tt +H2} in y of the face at {\tt +DZ} in z;
\end{enumerate}

{\bf Note:} this shape suffers from the same limitations than the {\tt TRAP}:
the tracking routines assume that the faces are planar, but this constraint
is not easily expressed in terms of the 12 parameters. Additionally, no check
on the faces is performed in this case. Users should avoid to use this shape
as much as possible, and if they have to do so, they should make sure that the
faces are really planes. If this is not the case, the result of the transport
is unpredictable.

To accelerate the computations necessary for transport, 18 additional 
parameters are calculated for this shape:

\begin{enumerate}
\item {\tt DX0DZ} $dx/dz$ of the line joining the centres of the faces at 
z=$\pm${\tt DZ};
\item {\tt DY0DZ} $dy/dz$ of the line joining the centres of the faces at 
z=$\pm${\tt DZ};
\item {\tt X01} x at z=0 for line joining the
+ on parallel side, perpendicular corners at z=$\pm${\tt DZ};
\item {\tt Y01} y at z=0 for line joining the
+ on parallel side, + on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DXDZ1} $dx/dz$ for line joining the + on parallel side,
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DYDZ1} $dy/dz$ for line joining the + on parallel side,
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt X02} x at z=0 for line joining the - on parallel side,
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt Y02} y at z=0 for line joining the - on parallel side,
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DXDZ2} $dx/dz$ for line joining the - on parallel side,
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DYDZ2} $dy/dz$ for line joining the - on parallel side, 
+ on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt X03} x at z=0 for line joining the - on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt Y03} y at z=0 for line joining the - on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DXDZ3} $dx/dz$ for line joining the - on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DYDZ3} $dy/dz$ for line joining the - on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt X04} x at z=0 for line joining the + on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt Y04} y at z=0 for line joining the + on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DXDZ4} $dx/dz$ for line joining the + on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\item {\tt DYDZ4} $dy/dz$ for line joining the + on parallel side,
- on perpendicular corners at z=$\pm${\tt DZ};
\end{enumerate}

\item[29 CTUB] {\it cut} tube, a tube cut at the extremities with planes
not necessarily perpendicular to the z axis. It has 11 parameters:
\begin{enumerate}
\item {\tt RMIN} inside radius;
\item {\tt RMAX} outside radius;
\item {\tt DZ} half length in z;
\item {\tt PHI1} starting angle of the segment;
\item {\tt PHI2} ending angle of the segment;
\item {\tt LX} x component of a unit vector perpendicular to the face at {\tt -DZ};
\item {\tt LY} y component of a unit vector perpendicular to the face at {\tt -DZ};
\item {\tt LZ} z component of a unit vector perpendicular to the face at {\tt -DZ};
\item {\tt HX} x component of a unit vector perpendicular to the face at {\tt +DZ};
\item {\tt HY} y component of a unit vector perpendicular to the face at {\tt +DZ};
\item {\tt HZ} z component of a unit vector perpendicular to the face at {\tt +DZ};
\end{enumerate}
{\tt PHI1} should be smaller than {\tt PHI2}. If this is not the case,
the system adds 360 degrees to {\tt PHI2}.
\end{DLtt}
\newpage
\begin{figure}[hbt]
\vspace{3cm}
      \centering
      \epsfig{file=eps/geom050-1.eps,width=16cm}
      \caption{shapes {\tt BOX, TRD1, TRD2, TRAP}}
      \label{fg:geom050-1}
\end{figure}
\newpage
\begin{figure}[hbt]
\vspace{3cm}
      \centering
      \epsfig{file=eps/geom050-2.eps,width=16cm}
      \caption{shapes {\tt TUBE, TUBS, CONE, CONS}}
      \label{fg:geom050-2}
\end{figure}
\newpage
\begin{figure}[hbt]
\vspace{3cm}
      \centering
      \epsfig{file=eps/geom050-3.eps,width=16cm}
      \caption{shapes {\tt PARA, SPHE, PGON, PCON}}
      \label{fg:geom050-3}
\end{figure}
\newpage
\begin{figure}[hbt]
\vspace{3cm}
      \centering
      \epsfig{file=eps/geom050-4.eps,width=16cm}
      \caption{shapes {\tt GTRA}}
      \label{fg:geom050-4}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun,A.McPherson}
\Submitted{15.08.83}   \Revised{16.11.93}
\Version{Geant 3.16}   \Routid{GEOM100}
\Makehead{Creation of a volume}
 
\Shubr{GSVOLU}{(CHNAME,CHSHAP,NMED,PAR,NPAR,IVOLU*)}
Defines a volume with a given name, shape, tracking medium number
and shape parameters.

\begin{DLtt}{MMMMMMMM}
\item[CHNAME]  ({\tt CHARACTER*4}) volume name -- it must be unique;
\item[CHSHAP] ({\tt CHARACTER*4}) name of one of the {\tt GEANT} shapes;
\item[NMED]  ({\tt INTEGER}) tracking medium number for the volume --
if other volumes are positioned within this one, their tracking medium
replaces the one of the mother;
\item[PAR]   ({\tt REAL}) array containing the shape parameters;
\item[NPAR]  ({\tt INTEGER}) number of parameters -- if zero, then the
volume must be positioned via the routine \Rind{GSPOSP} indicating
the parameters for each copy (see {\tt [GEOM120]});
\item[IVOLU] ({\tt INTEGER}) internal volume number -- if $\leq 0$
an error condition has happened.
\end{DLtt}
 
If one of the parameters expressing a length is negative,
{\tt GEANT} will try to maximise its value in each copy, without
extending beyond the limits of the mother. This
facility can be used in conjunction with the
division of volumes using \Rind{GSDVN}, \Rind{GSDVT}, and \Rind{GSDVX}.
Restriction apply to this facility:
\begin{itemize}
\item the daughter should be positioned without a rotation matrix;
\item all shapes can be positioned within a similar shape with negative
parameters, but only in the centre of the mother;
\item boxes with negative parameters can be positioned in: box, {\tt TRD1},
{\tt TRD2} and {\tt TRAP} with $\theta = \phi = 0$;
\item {\tt HYPE}, {\tt ELTU} and {\tt CTUB} cannot have negative parameters;
\item {\tt PCON} and {\tt PGON} can only have 2 z planes.
\end{itemize}
{\bf Examples}
\begin{verbatim}
      DIMENSION PECAL(3)
      DATA PECAL/1.71,4.,0.2/
 
      CALL GSVOLU('ECAL','BOX ',1,PECAL,3,IVOLU)
\end{verbatim}
\Shubr{GPVOLU}{(IVOLU)}
Prints the volume parameters:
\begin{DLtt}{MMMM}
\item[IVOLU]  ({\tt INTEGER}) {\tt GEANT} number of the volume to print -- if
{\tt IVOLU} $\leq 0$, all volumes will be printed;
\end{DLtt}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, A.McPherson}
\Submitted{15.08.83}              \Revised{16.11.93}
\Version{Geant 3.16}\Routid{GEOM110}

\Makehead{Positioning a volume inside its mother}

\Shubr{GSPOS}{(CHNAME,NR,CHMOTH,X,Y,Z,IROT,CHONLY)}
Places a copy of a volume previously defined by a call to \Rind{GSVOLU} 
inside its mother volume {\tt CHMOTH}.

\begin{DLtt}{MMMMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) name of the volume being positioned;
\item[NR] ({\tt INTEGER}) copy number of the volume {\tt CHNAME} being 
positioned;
\item[CHMOTH]({\tt CHARACTER*4}) name of the volume in which copy
{\tt NR} of {\tt CHNAME} is positioned;
\item[X] ({\tt REAL}) x position of the volume in the mother reference system;
\item[Y] ({\tt REAL}) y position of the volume in the mother reference system;
\item[Z] ({\tt REAL}) z position of the volume in the mother reference system;
\item[IROT] ({\tt INTEGER}) rotation matrix number
describing the orientation of the volume relative to
the coordinate system of the mother;
\item[CHONLY] ({\tt CHARACTER*4}) flag to indicate whether
a point found to be in this volume may also be in other volumes which
are not direct descendants of it -- possible values are {\tt ONLY} and
{\tt MANY}.
\end{DLtt}

The following points are important for a correct use of \Rind{GSPOS}:
\begin{itemize}
\item the position and rotation with which a volume is positioned are
relative to the mother reference system, that is to the reference system
of the volume which contains the copy being positioned. To see how the
reference system is defined for the {\tt GEANT} shapes, see {\tt [GEOM050]};
\item 
\Rind{GSPOS} can be called several times with the same name, to place 
multiple copies of the same volume either in the
same mother volume or in different ones.
The copy number parameter {\tt NR} is user defined, and it allows
the different copies of the same volume to be distinguished. The user is
free to assign any valid integer to this parameter. If two volumes
are positioned with the same copy number, it will be impossible to decide
in which one a particle is during tracking. If the same volume is positioned
twice inside the same mother with the same copy number, the parameters
of the second call to \Rind{GSPOS} will override the first ones for that
copy;
\item all the copies of a volume are identical: in particular they contain
all the same daughters recursively -- conversely, positioning a volume 
inside a mother will insert it in all the copies of that mother;
\item the volumes mentioned in the call must be already defined by a call
to \Rind{GSVOLU};
\item no volume can be positioned in a divided mother;
\item in case of positioning without rotation, {\tt IROT} should be set
to 0 -- note that this is faster than defining a unit matrix;
\item the first volume, containing all the apparatus, cannot be positioned;
\item if the {\tt CHONLY} flag is equal to {\tt ONLY}, the volume being
positioned should not overlap with any other volume except his mother
and his daughters and should not extend beyond the limits of its mother. 
In this case the search routines assume that, when a point
is found in this volume, the only further searching required is in its contents.
Other volumes at the same or higher levels
or in separate branches will not be looked at. The first volume must be 
{\tt ONLY};
\item if the {\tt CHONLY} flag is set to {\tt MANY}, a point found in
this volume can also be in another volume at the same or higher level or in
a different branch of the tree. To decide where a point is the following
algorithm is applied:
\begin{enumerate}
\item the tree is scanned {\it upward} until an {\tt ONLY} mother
with {\it positioned} contents (i.e. non-divided) is found;
\item all the branches of the tree descending from this volume are
scanned to find other volumes where the point may be;
\item a winner is selected among the candidates according to the
following rules:
\begin{itemize}
\item if one of the candidates is {\tt ONLY}, the point is declared in this
volume. If more than one candidate is {\tt ONLY} there is an error in the
geometry definition;
\item amongst several {\tt MANY} candidates, the one at the deepest level
is chosen;
\item amongst several {\tt MANY} candidates at the same level, the first one
found is chosen;
\end{itemize}
\end{enumerate}
Although a considerable effort has been put in making sure that the {\tt MANY}
option works properly and caters for all the possible cases, still it introduces
a considerable complication in the tracking and performance can be
rather poor.

Users should resort to this only when it is not possible to describe the
experimental setup with {\tt ONLY} volumes.
\end{itemize}

The data structure is so designed that, in any case, the parameters
of a volume and the information about the number and position of
its daughters are stored only once. This allows the creation of
very complex geometries without correspondingly large storage
requirements.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Bruyant, M.Maire, A.McPherson}
\Submitted{15.08.83}               \Revised{18.11.93}
\Version{Geant 3.16}\Routid{GEOM120}
\Makehead{Positioning a volume inside its mother with parameters}

\Shubr{GSPOSP}{(CHNAME,NR,CHMOTH,X,Y,Z,IROT,CHONLY,PAR,NPAR)}

Position a copy of volume {\tt CHNAME} inside its mother {\tt CHMOTH}
assigning its parameters.

\begin{DLtt}{MMMMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) name of the volume being positioned;
\item[NR] ({\tt INTEGER}) copy number of the volume {\tt CHNAME} being
positioned;
\item[CHMOTH]({\tt CHARACTER*4}) name of the volume in which copy
{\tt NR} of {\tt CHNAME} is positioned;
\item[X] ({\tt REAL}) x position of the volume in the mother reference system;
\item[Y] ({\tt REAL}) y position of the volume in the mother reference system;
\item[Z] ({\tt REAL}) z position of the volume in the mother reference system;
\item[IROT] ({\tt INTEGER}) rotation matrix number
describing the orientation of the volume relative to
the coordinate system of the mother;
\item[CHONLY] ({\tt CHARACTER*4}) flag to indicate whether
a point found to be in this volume may also be in other volumes which
are not direct descendants of it -- possible values are {\tt ONLY} and
{\tt MANY};
\item[PAR] ({\tt REAL}) array of parameters for the volume being positioned;
\item[NPAR] ({\tt INTEGER}) number of parameters.
\end{DLtt}

It is often the case in a detector to have a family of similar objects,
differing only by their dimensions. A typical example are the crystals of
an electromagnetic calorimeter. In this case it is convenient and logically
consistent to give them all the same name, but assign to each copy a different
set of parameters.

This can be done defining the volume with 0 parameters through the routine
\Rind{GSVOLU} and then assigning the parameters to each copy via the routine
\Rind{GSPOSP}.

\Rind{GSPOSP} is similar in all other aspects to \Rind{GSPOS} and the user is
referred to the description of this routine for more information. An obvious
limitation is that a volume defined with 0 parameters can only be positioned
via \Rind{GSPOSP}, because otherwise its dimensions will be undefined.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                                     %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, A.McPherson}
\Submitted{29.09.83}             \Revised{18.11.93}
\Version{Geant 3.16}\Routid{GEOM130}
\Makehead{Division of a volume into a given number of cells}

\Shubr{GSDVN}{(CHNAME,CHMOTH,NDIV,IAXIS)}

Divide a volume in a given number of parts along a direction. 

\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) a unique name for the volume to be generated
by subdivision of the mother volume;
\item[CHMOTH] ({\tt CHARACTER*4}) volume that has to be subdivided;
\item[NDIV] ({\tt INTEGER}) number of divisions into which the mother volume 
is to be divided;
\item[IAXIS] ({\tt INTEGER}) {\it axis} of the division.
\end{DLtt}

The volumes resulting from a division are true volumes in
the {\tt GEANT} sense, with the only limitation that they cannot be
positioned. They can have daughters and they can still be divided in turn.
Different divisions are distinguished by a different division number,
much the same as different copy of the same volume by the copy number.
Every operation performed on a division cell (positioning or further division),
is automatically propagated to all divisions cells of the same mother.

The kind of the division is indicated by the {\tt IAXIS} argument. The
allowed values of {\tt IAXIS} and the resulting divisions are shown in
figs. \ref{fg:geom130-1}, \ref{fg:geom130-2}, \ref{fg:geom130-3}, 
\ref{fg:geom130-4}. The
basic constraint imposed by the {\tt GEANT} geometry is that the result
of a division is a volume which can be described in terms of the basic 
shapes.

The local coordinate system of the divisions is parallel to the
system of the mother in case of divisions obtained by parallel planes or
concentric divisions. In the case of parallel axes the coordinate system
is shifted so that it is in the centre of the division.
In case of $\phi$ divisions produced by planes
passing through the axis of a volume with axial symmetry ({\tt TUBE, TUBS,
CONE, CONS, PGON, PCON, SPHE}), the local coordinate systems will be 
rotated so that the x axis passes through the centre of the division.

This routine allows the user to generate a large number of identical
volumes filling a defined volume. The material of the slices is inherited
from the mother.

It may happen that the different divisions of a volume have different
dimensions. In this case, if a volume has to be positioned in each division, 
its dimensions must be different according to the division number. This can
be obtained in some special cases giving to the dimension of the
volume which has to vary in order to fit into the different mothers,
the value of -1 in the call to
\Rind{GSVOLU} which defines it. As explained in {\tt [GEOM050]}, {\tt GEANT}
will take care to assign to this dimension the maximum value in order to
fill the current mother.

What can be done with division can be done also, in most cases, explicitly
positioning all the copies. Users must be aware, however, that divisions
offer the best performance in tracking of all {\tt GEANT} geometrical
constructs, and they should be used instead of positioning whenever
possible in the definition of objects.

%\newpage
%\begin{figure}[hbt]
%      \centering
%      \epsfig{file=eps/geom130-1.eps,width=16cm}
%      \caption{shapes {\tt BOX, TRD1, TRD2, TRAP}}
%      \label{fg:geom130-1}
%\end{figure}
%\newpage
%\begin{figure}[hbt]
%      \centering
%      \epsfig{file=eps/geom130-2.eps,width=16cm}
%      \caption{shapes {\tt TUBE, TUBS, CONE, CONS}}
%      \label{fg:geom130-2}
%\end{figure}
%\newpage
%\begin{figure}[hbt]
%      \centering
%      \epsfig{file=eps/geom130-3.eps,width=16cm}
%      \caption{shapes {\tt PARA, SPHE, PGON, PCON}}
%      \label{fg:geom130-3}
%\end{figure}
%\newpage
%\begin{figure}[hbt]
%      \centering
%      \epsfig{file=eps/geom130-4.eps,width=16cm}
%      \caption{shapes {\tt GTRA, ELTU, HYPE, CTUB}}
%      \label{fg:geom130-4}
%\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{F.Bruyant, A.McPherson, M.Maire}
\Submitted{17.12.83}       \Revised{18.11.93}
\Version{Geant 3.16}\Routid{GEOM140}
\Makehead{Division of a Volume into cells of a given size}

This routine creates new volumes from a mother 
by divisions of a given step.

\Shubr{GSDVT}{(CHNAME,CHMOTH,STEP,IAXIS,NUMED,NDVMX)}

\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) a unique name for the volume to be generated
by subdivision of the mother volume;
\item[CHMOTH] ({\tt CHARACTER*4}) volume that has to be subdivided;
\item[STEP] ({\tt REAL}) size of the divisions -- this value can be in 
centimeters or degrees according to the value of {\tt IAXIS};
\item[IAXIS] ({\tt INTEGER}) {\it axis} of the division.
\item[NUMED] ({\tt INTEGER}) medium number of the divisions -- this can be 
different from the one of the mother, as the division cells may leave a
portion of the mother undivided (see below) --
if {\tt NUMED} $\leq 0$  the medium of the mother;
\item[NDVMX] ({\tt INTEGER}) expected (maximum) number of divisions -- if
$ \leq 0 $ or $ > 255 $, 255 is assumed.
\end{DLtt}

The full range of the mother will be divided
in sections of the user supplied step. If the step is such that the mother
cannot be divided exactly, the largest possible number
of divisions will be generated, the excess space will be equally
divided between each end of the range of the mother. These extra
spaces will be assumed to belong to the mother.

For more information on the division in general, see {\tt [GEOM130]}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Bruyant, A.McPherson}
\Submitted{17.12.83}               \Revised{18.11.93}
\Version{Geant 3.16}\Routid{GEOM150}
\Makehead{Division of a volume - general case}

\Shubr{GSDVX}{(CHNAME,CHMOTH,NDIV,IAXIS,STEP,C0,NUMED,NDVMAX)}

Divide a volume in a given number of parts along a direction, with
a given step starting from an offset.

\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) a unique name for the volume to be generated
by subdivision of the mother volume;
\item[CHMOTH] ({\tt CHARACTER*4}) volume that has to be subdivided;
\item[NDIV] ({\tt INTEGER}) number of divisions into which the mother volume
is to be divided;
\item[IAXIS] ({\tt INTEGER}) {\it axis} of the division.
\item[STEP] ({\tt REAL}) size of the divisions -- this value can be in
centimeters or degrees according to the value of {\tt IAXIS};
\item[C0] ({\tt REAL}) offset where division should start -- this value can be 
in centimeters or degrees according to the value of {\tt IAXIS};
\item[NUMED] ({\tt INTEGER}) medium number of the divisions -- this can be
different from the one of the mother, as the division cells may leave a
portion of the mother undivided (see below) --
if {\tt NUMED} $\leq 0$  the medium of the mother;
\item[NDVMX] ({\tt INTEGER}) expected (maximum) number of divisions -- if
$ \leq 0 $ or $ > 255 $, 255 is assumed.
\end{DLtt}

For more information on the division mechanism, see {\tt [GEOM130]} and
{\tt [GEOM140]}. For the moment either
{\tt NDIV} or {\tt STEP} must be set negative or 0, so that they
will be computed from the {\tt CHMOTH}'s size.
The case with both {\tt NDIV} and {\tt STEP}
positive is not coded yet. It would permit leaving different
gaps at both ends of the
{\tt CHMOTH}.

Provisionally the code consists of a call to either \Rind{GSDVN2} or
\Rind{GSDVT2}.

\Shubr{GSDVN2}{(CHNAME,CHMOTH,NDIV,IAXIS,C0,NUMED)}

Divide a volume in a given number of parts along a direction, 
starting from an offset.

\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) a unique name for the volume to be generated
by subdivision of the mother volume;
\item[CHMOTH] ({\tt CHARACTER*4}) volume that has to be subdivided;
\item[NDIV] ({\tt INTEGER}) number of divisions into which the mother volume
is to be divided;
\item[IAXIS] ({\tt INTEGER}) {\it axis} of the division.
\item[C0] ({\tt REAL}) offset where division should start -- this value can be 
in centimeters or degrees according to the value of {\tt IAXIS};
\item[NUMED] ({\tt INTEGER}) medium number of the divisions -- this can be
different from the one of the mother, as the division cells may leave a
portion of the mother undivided (see below) --
if {\tt NUMED} $\leq 0$  the medium of the mother;
\end{DLtt}

The divisions start at the user specified coordinate value
and extend to the end of the volume. The range from this offset to
the upper coordinate limit of the mother volume will be divided
into the supplied number of cells. 
In the case of 
$\phi$ division of a complete tube or cone, the whole 360 degrees
will be divided into the user-supplied number of slices no matter
what the origin is. Specifying an origin for the division, in this
case, just moves the
division boundaries. This can be useful to avoid a rotation.
In all other cases the search routines will
assume that a point is in the mother if the coordinate value is
less than the value of the supplied offset.

\Shubr{GSDVT2}{(CHNAME,CHMOTH,STEP,IAXIS,C0,NUMED,NDVMX)}

Divide a volume along a direction with a given step starting from an offset.

\begin{DLtt}{MMMMMMMM}
\item[CHNAME] ({\tt CHARACTER*4}) a unique name for the volume to be generated
by subdivision of the mother volume;
\item[CHMOTH] ({\tt CHARACTER*4}) volume that has to be subdivided;
\item[STEP] ({\tt REAL}) size of the divisions -- this value can be in
centimeters or degrees according to the value of {\tt IAXIS};
\item[IAXIS] ({\tt INTEGER}) {\it axis} of the division;
\item[C0] ({\tt REAL}) offset where division should start -- this value can be
in centimeters or degrees according to the value of {\tt IAXIS};
\item[NUMED] ({\tt INTEGER}) medium number of the divisions -- this can be
different from the one of the mother, as the division cells may leave a
portion of the mother undivided (see below) --
if {\tt NUMED} $\leq 0$  the medium of the mother;
\item[NDVMX] ({\tt INTEGER}) expected (maximum) number of divisions -- if
$ \leq 0 $ or $ > 255 $, 255 is assumed.
\end{DLtt}

The division start at the user-specified coordinate value
and extend to the end of the volume. The range from origin to
upper coordinate limit of the mother volume is divided
in sections of the user supplied step. If the step is such that
the range of the mother cannot be filled with cells, the largest
possible number of cells is created.
The excess space up to the end
of the mother volume will be assumed to belong to the mother.

In the case of 
$\phi$ division of a complete tube or cone, the whole 360 degrees
will be filled with slices, no matter
what the origin is. Specifying an origin for the division, in this
case, just moves the
division boundaries. This can be useful to avoid a rotation.

In all other cases the search routines will
assume a point is just in the mother if the coordinate value is
less than the value of the user supplied origin.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun,F.Bruyant,A.McPherson}
\Submitted{01.11.83}                     \Revised{18.11.93}
\Version{Geant 3.16}\Routid{GEOM199}
\Makehead{The volume data structure -- {\tt JVOLUM}}

\section{The data structure {\tt JVOLUM} and {\tt JGPAR}}

The meaning of the variables in the data structure {\tt JVOLUM} shown
in fig. \ref{fg:geom199-1}
is the following:

\begin{DLtt}{MMMMMMMM}
\item[ISEARC] search flag {\tt [GEOM400], [GEOM410]}:
\begin{DLtt}{MMMM}
\item[$=$0] volume positioning order or ordering by \Rind{GSNEXT}/\Rind{GSNEAR};
\item[$<$0] binary search as defined by \Rind{GSORD};
\item[$>$0] user ordering \Rind{GSUNEA}/\Rind{GUNEAR};
\end{DLtt}
\item[ISHAPE] system shape number (see {\tt [GEOM050]};
\item[NIN] number of volumes contained in the mother volume --
if negative the volume is divided;
\item[NMED] medium number for the volume;
\item[NPAR] number of shape parameters;
\item[NATT] number of attributes;
\item[PAR] array of shape parameters;
\item[IAT] array of attributes;
\item[IAXIS] direction of the division (see {\tt [GEOM130]});
\item[IVO] system volume number;
\item[NDIV] number of divisions ({\tt -NDVMX}, if computed dynamically,
see {\tt [GEOM140]});
\item[C0] coordinate value at which the division starts;
\item[STEP] coordinate step for the division;
\item[NR] user copy number;
\item[IROT] rotation matrix number defining the orientation of the volume
with respect to the mother reference system;
\item[X,Y,Z] position of the volume with respect to the mother reference
system;
\item[KONLY] {\tt ONLY/MANY} flag, see {\tt [GEOM110]} for more information;
\end{DLtt}
 
\begin{figure}[hbt]
     \centering
     \epsfig{file=eps/geom199-1.eps,width=14cm}
     \caption{Example of geometrical tree structure}
     \label{fg:geom199-1}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun, F.Carena}
\Submitted{01.06.83}             \Revised{14.12.93}
\Version{Geant 3.16}\Routid{GEOM200}
\Makehead{Rotation matrices}

The relative position of a volume inside its mother is expressed in
{\tt GEANT} by a translation vector and a rotation matrix which are 
arguments of the routines \Rind{GSPOS} and \Rind{GSPOSP}. The rotation
matrix expresses the transformation from the {\tt M}other {\tt R}eference
{\tt S}ystem to the {\tt D}aughter {\tt R}eference {\tt S}ystem.

A rotation matrix is described to {\tt GEANT} by giving the polar and
azimuthal angles of the axes of the {\tt DRS} ($x', y', z'$) in the
{\tt MRS} via the routine \Rind{GSROTM}.

\Shubr{GSROTM}{(IROT,THETA1,PHI1,THETA2,PHI2,THETA3,PHI3)}
\begin{DLtt}{MMMMMMMM}
\item[IROT] ({\tt INTEGER}) number of the rotation matrix;
\item[THETA1] ({\tt REAL}) polar angle for axis $x'$;
\item[PHI1] ({\tt REAL}) azimuthal angle for axis $x'$;
\item[THETA2] ({\tt REAL}) polar angle for axis $y'$;
\item[THI2] ({\tt REAL}) azimuthal angle for axis $y'$;
\item[THETA3] ({\tt REAL}) polar angle for axis $z'$;
\item[PHI3] ({\tt REAL}) azimuthal angle for axis $z'$.
\end{DLtt}
Stores rotation matrix {\tt IROT} in the data structure {\tt JROTM}. If the
matrix is not orthonormal, it will be corrected by setting $y' \perp x'$ and
then $z' = x' \times y'$. A warning message is printed in this case.

{\bf Note:}
the angles {\tt THETA} and {\tt PHI} must be given in degrees.
 
\section*{Examples of use}
The unit matrix is defined in the following way:

\[
\left . \begin{array}{lcl}
x' & \| & x \\
y' & \| & y \\
z' & \| & z
\end{array} \right \}
\Rightarrow
\left \{
\begin{array}{lcr@{\mbox{\hspace{3mm};\hspace{8mm}}}lcr}
\theta_1 & = & 90^{\circ} & \phi_1 & = & 0^{\circ} \\
\theta_2 & = & 90^{\circ} & \phi_2 & = & 90^{\circ} \\
\theta_3 & = & 0^{\circ} & \phi_3 & = & 0^{\circ} 
\end{array} \right .
\]

This is just an example. There is in fact no need to define a unit rotation
matrix. Giving the value 0 to the rotation matrix number in the call to
\Rind{GSPOS} and \Rind{GSPOSP} is equivalent to a positioning without 
rotation and it improves tracking performance.

The result of a $90^{\circ}$ counterclockwise rotation around $z$, followed
by a $90^{\circ}$ counterclockwise rotation around the new $x$ is a cyclic
shift of the axes: $x \rightarrow z', \; y \rightarrow x', \; z \rightarrow  
y'$. This is expressed by the following rotation matrix:

\[
\left . \begin{array}{lcl}
x' & \| & y \\
y' & \| & z \\
z' & \| & x
\end{array} \right \}
\Rightarrow
\left \{
\begin{array}{lcr@{\mbox{\hspace{3mm};\hspace{8mm}}}lcr}
\theta_1 & = & 90^{\circ} & \phi_1 & = & 90^{\circ} \\
\theta_2 & = & 0^{\circ} & \phi_2 & = & 0^{\circ} \\
\theta_3 & = & 90^{\circ} & 
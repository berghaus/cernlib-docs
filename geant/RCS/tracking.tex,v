head     1.1;
access   ;
symbols  ;
locks    goossens:1.1; strict;
comment  @@;


1.1
date     94.04.25.09.23.54;  author goossens;  state Exp;
branches ;
next     ;


desc
@Initial Entry
@



1.1
log
@Initial revision
@
text
@\documentstyle[epsf]{book}
\oddsidemargin -0.15cm
\evensidemargin -0.15cm
\topmargin .3cm
\textheight 21.5cm \textwidth 16.cm

\rm
\begin{document}
\pagestyle{empty}
\Large
Tracking in GEANT 3.21 \\[.7cm]
\large
\rm
The tracking of particles through the geometrical data structure is the key
functionality of Geant. At every particle's step, the program must find the
volume where the particle is (GTMEDI) and the next boundary it will cross
(GTNEXT). This can take
about $60\%$ of the total simulation time (even for detectors described
in an optimized way); therefore, a new logic has been introduced to minimise
the time spent for the search in the geometrical tree. Instead of a linear or
binary search (time spent proportional or logarithmic with the number of
volumes, respectively), a `direct access' technique has been developped to
make the time basically independent from the number of volumes. Every volume
containing other volumes is `virtually' divided in equal slices at 
initialization time via the call to GGCLOS
(the best axis is computed automatically); for each slice,
a data structure is filled with a list of the volumes IDs intersecting such
slice; slices with identical lists are pointing to the same contents
and are collected. At 
tracking time it is immediate to find in which slice the particle is and only
its contents have to be checked. The same is true to find the next boundary to
be crossed: only if the intersection point with a content lies outside the 
current collection of slices, the next one will be checked. The new algorithm
gives in average about a factor 2 in speed for the overall simulation in the
LHC and LEP detectors. It also minimises the dependency of the performance
on the skill and experience of the programmer and allows a fast tracking even
in geometrical structures received from CAD systems.
The initialization time for a detector like ATLAS
(11 millions of volumes) is about 2 sec on a 10 CU machine and the specialized
data structure for the tracking is about 50000 words.
 















\end{document}
@

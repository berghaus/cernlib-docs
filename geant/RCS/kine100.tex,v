head	1.2;
access;
symbols;
locks
	goossens:1.2; strict;


1.2
date	94.12.07.19.33.27;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.25.09.23.35;	author goossens;	state Exp;
branches;
next	;


desc
@Initial Entry
@


1.2
log
@Mods Dec 1994
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%  GEANT manual in LaTeX form                              %
%                                                                 %
%  Michel Goossens (for translation into LaTeX)                   %
%  Version 1.00                                                   %
%  Last Mod. Jan 24 1991  1300   MG + IB                          %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Origin{R.Brun}
\Revision{M.Maire}
\Documentation{R.Brun}
\Submitted{01.06.83}              \Revised{14.12.93}
\Version{Geant 3.16}              \Routid{KINE100}
\Makehead{Storing and retrieving vertex and track parameters}

\Shubr{GSVERT}{(VERT,NTBEAM,NTTARG,UBUF,NUBUF,NVTX*)}
 
\begin{DLtt}{MMMMMMMM}
\item[VERT] ({\tt REAL}) array of 3 containing the position of 
the vertex in the {\tt MRS};
\item[NTBEAM] ({\tt INTEGER}) beam track number origin of the vertex
(0 if none exists);
\item[NTTARG] ({\tt INTEGER}) target track number origin of the vertex
(0 if none exists);
\item[UBUF] ({\tt REAL}) user array of {\tt NUBUF} user words
to be stored in the data structure together with the vertex;
\item[NWBUF] ({\tt INTEGER}) number of user words;
\item[NVTX] ({\tt INTEGER}) number of the vertex stored (0 in case of error).
\end{DLtt}

This routine stores the parameters of a vertex to which tracks should be
attached via calls to \Rind{GSKINE}. Vertices are stored in the {\tt JVERTX}
data structure (see {\tt [KINE199]}) and they are preserved for the whole
duration of the event.

{\tt GEANT} tracks one vertex at a time: all the particles of one
vertex, and all the secondaries generated thereof must be transported
before the particles of the next vertex are considered.

This routine should be called only from \Rind{GUKINE} when the initial
kinematics of the event is defined. During tracking it is possible to add
vertices to the {\tt JVERTX} data structure, but this should be done via
the \Rind{GSKING} routine and the appropriate variables in the \FCind{/GCKING/}
common block. Please see {\tt [TRAK300]} for more information.

\Shubr{GSVERU}{(NVTX,NUBUF,UBUF,IADR*)}
\begin{DLtt}{MMMMMMMM}
\item[NVTX] ({\tt INTEGER}) vertex number;
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\item[IADR] ({\tt INTEGER}) position where information is stored in the
user bank of the vertex.
\end{DLtt}

This routine stores the first {\tt NUBUF} words of array {\tt BUF} in the
user bank attached to vertex {\tt NVTX}, starting at location {\tt IADR+1}.
On exit {\tt IADR} is set to {\tt IADR+NUBUF}, allowing subsequent filling. 
This allows effectively 
to {\it add} information to an existing vertex, whether or not it has already
an user buffer. This is the only way to add user information to a vertex
which has been created at tracking time by the routine \Rind{GSKING} via
an appropriate setting of parameters in the common \FCind{/GCKING/}.

\Shubr{GFVERT}{(NVTX,VERT*,NTBEAM*,NTTARG*,TOFG*,UBUF*,NUBUF*)}
Retrieves vertex parameters. The parameters have the same meaning
than the ones of \Rind{GSVERT}.
\begin{DLtt}{MMMMMMMM}
\item[TOFG] ({\tt REAL}) time of flight when the vertex was created;
\end{DLtt}

\Shubr{GPVERT}{(IVTX)}
 
Prints vertex parameters.
\begin{DLtt}{MMMMMMMM}
\item[IVTX] ({\tt INTEGER}) vertex number to be printed, all vertices if IVTX=0;
\end{DLtt}

\Shubr{GSKINE}{(PLAB,IPART,NV,UBUF,NUBUF,NT*)}
 
\begin{DLtt}{MMMMMMMM}
\item[PLAB] ({\tt REAL}) array of 3 containing the components of
the momentum of the particle in GeV c$^{-1}$;
\item[IPART] ({\tt INTEGER}) particle code (see {\tt [CONS300]});
\item[NV] ({\tt INTEGER}) number of the vertex origin of track;
\item[UBUF] ({\tt REAL}) array of {\tt NUBUF} user words
to be stored with the track;
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[NT] ({\tt INTEGER}) number of the stored track (0 in case of error).
\end{DLtt}

This routine stores the parameters of a track in the {\tt JKINE}
data structure (see {\tt [KINE199]}). This data structure survives for
the whole event, and it is wiped out by \Rind{GTRIGI} at the beginning 
of each new event.  There are two reasons to store tracks
in the {\tt JKINE} data structure:
\begin{itemize}
\item at the beginning of an event, from within \Rind{GUKINE}, to define
the initial kinematics of the event, i.e. the particles which {\tt GEANT}
will transport. This must be done through \Rind{GSKINE}
after that the vertices from which the particles originate have been defined
through \Rind{GSVERT};
\item during tracking, to preserve the kinematic information of a 
particular track till the end of the current event. In this case the user should
not call \Rind{GSKINE} directly, but rather set the appropriate flags in the
\FCind{/GCKING/} common block and call \Rind{GSKING}. This is explained in 
detail in {\tt [TRAK300]}.
\end{itemize}

\Shubr{GSKINU}{(NT,NUBUF,UBUF,IADR*)}
\begin{DLtt}{MMMMMMMM}
\item[NT] ({\tt INTEGER}) track number;
\item[NUBUF] ({\tt INTEGER}) number of user words;
\item[UBUF] ({\tt REAL}) array of user words;
\item[IADR] ({\tt INTEGER}) position where information is stored in the
user bank of the track.
\end{DLtt}

This routine stores the first {\tt NUBUF} words of array {\tt BUF} in the
user bank attached to track {\tt NT}, starting at location {\tt IADR+1}.
On exit {\tt IADR} is set to {\tt IADR+NUBUF}, allowing subsequent filling. 
This allows effectively 
to {\it add} information to an existing track, whether or not it has already
an user buffer. This is the only way to add user information to a track
which has been created at tracking time by the routine \Rind{GSKING} via
an appropriate setting of parameters in the common \FCind{/GCKING/}.

\Shubr{GFKINE}{(ITRA,VERT*,PVERT*,IPART*,NVERT*,UBUF*,NUBUF*)}
Retrieves long-life track parameters. The parameters have the same meaning
than the ones of \Rind{GSKINE}.

\Shubr{GPKINE}{(ITRA)}
Prints initial track parameters.
\begin{DLtt}{MMMMMMMM}
\item[ITRA] ({\tt INTEGER}) track to be printed, all tracks if {\tt IVTX}=0;
\end{DLtt}
@


1.1
log
@Initial revision
@
text
@d65 1
a65 1
\Shubr{GFVERT}{(VERT*,NTBEAM*,NTTARG*,UBUF*,NUBUF*)}
d68 3
@

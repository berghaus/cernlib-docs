head	1.2;
access;
symbols;
locks;


1.2
date	94.11.01.09.19.40;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.01;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@revision KSK
@
text
@% 28.09.94 ksk
\Version{INDEXX}                               \Routid{M433}
\Keywords{CHARACTER CASE INDEX SUBSTRING REPEAT SPACE}
\Author{M. Goossens, A. Petrilli, M. Marquina} \Library{KERNLIB}
\Submitter{}                                   \Submitted{11.02.1986}
\Language{Fortran}                             \Revised{28.09.94}
\Cernhead {Utility Package for Character Manipulation}
{\tt M433} is a comprehensive package for the manipulation of type
{\tt CHARACTER} strings.
\Structure
{\tt SUBROUTINE} and {\tt FUNCTION} subprograms \\
User Entry Names:
\begin{tabular}[t]{l*{7}{@@{\hspace{4pt}}l}}
\Rdef{INDEXA}, & \Rdef{INDEXB}, & \Rdef{INDEXC}, & \Rdef{INDEXN}, &
\Rdef{INDEXS}, & \Rdef{INDXAC}, & \Rdef{INDXBC}, & \Rdef{INDXNC}, \\
\Rdef{ISCAN},  & \Rdef{REPEAT}, & \Rdef{SPACES}, & \Rdef{STRIP},  &
\Rdef{SUBWORD},& \Rdef{VERIFY}, & \Rdef{WORD},   & \Rdef{WORDS},  \\
\Rdef{WORDSEP}
\end{tabular}
\Usage
In what follows, the parameters {\tt STR}, {\tt SSTR}, {\tt SET},
the functions {\tt REPEAT}, {\tt SPACES} and the variables
{\tt CHD}, {\tt CHOPT} and {\tt H} are
of type {\tt CHARACTER}. The function {\tt VERIFY} is of type
{\tt INTEGER}.
\begin{verbatim}
    I = INDEXA(STR)
\end{verbatim}
sets {\tt I} equal to the position of the first alphabetic character
(upper or lower case) in {\tt STR}. $\mathtt{I=0}$ if no such character
is present.
\begin{verbatim}
    I = INDEXB(STR,SSTR)
\end{verbatim}
sets {\tt I} equal to the position of the first occurrence of string
{\tt SSTR} in string {\tt STR} scanning backwards. $\mathtt{I=0}$ if no such
string is present.
\begin{verbatim}
    I = INDEXC(STR,SSTR)
\end{verbatim}
sets {\tt I} equal to the leftmost position where string {\tt SSTR}
does not match a substring in {\tt STR}. $\mathtt{I=0}$ if there is
no such mismatch.
\begin{verbatim}
    I = INDEXN(STR)
\end{verbatim}
sets {\tt I} equal to the position of the first numeric character in
{\tt STR}. $\mathtt{I=0}$ if no such character is present.
\begin{verbatim}
    I = INDEXS(STR)
\end{verbatim}
sets {\tt I} to the position of the first special (i.e.
non-alphanumeric) character in {\tt STR}. $\mathtt{I=0}$ if no such
character is present.
\begin{verbatim}
    I = INDXAC(STR)
\end{verbatim}
sets {\tt I} equal to the position of the first non-alphabetic character
(upper or lower case) in {\tt STR}. $\mathtt{I=0}$ if no such character
is present.
\newpage
\begin{verbatim}
    I = INDXBC(STR,SSTR)
\end{verbatim}
sets {\tt I} equal to the position of the first mismatch of string
{\tt SSTR} with respect to string {\tt STR} scanning backwards.
$\mathtt{I=0}$ if there is no such mismatch.
\begin{verbatim}
    I = INDXNC(STR)
\end{verbatim}
sets {\tt I} equal to the position of the first non-numeric character
in {\tt STR}. $\mathtt{I=0}$ if no such character is present.
\begin{verbatim}
    I = ISCAN(STR,SET)
\end{verbatim}
sets {\tt I} to the leftmost position where any of
the characters in {\tt SET} matches a character in {\tt STR}.
$\mathtt{I=0}$ if there is no such match.
\begin{verbatim}
    H = REPEAT(STR,NTIMES)
\end{verbatim}
sets {\tt H} equal to {\tt NTIMES} concatenated copies of the
string {\tt STR}.
\begin{verbatim}
    H = SPACES(STR,NSPACE)
\end{verbatim}
sets {\tt H} equal to a character string equivalent to {\tt STR} with
leading blanks removed and each occurence of one or more blanks inside
{\tt STR} replaced by {\tt NSPACE} blanks.
\begin{verbatim}
    H = STRIP(STR,CHOPT,CHD)
\end{verbatim}
sets {\tt H} to a character string equivalent to {\tt STR}
with leading and trailing occurances of the character {\tt CHD}
removed.
If {\tt CHOPT} is equal to {\tt 'L'}, only leading
characters will be removed.
If {\tt CHOPT} is equal to {\tt 'T'}, only trailing
characters will be removed.
\begin{verbatim}
    H = SUBWORD(STR,IW,NW)
\end{verbatim}
sets {\tt H} equal to the character string starting with
word {\tt IW} of {\tt STR} and containing {\tt NW} words.
\begin{verbatim}
    I = VERIFY(STR,SET)
\end{verbatim}
sets {\tt I} to the leftmost position of any character in {\tt STR}
which is not part of {\tt  SET}.
\begin{verbatim}
    H = WORD(STR,IW)
\end{verbatim}
sets {\tt H} equal to the word {\tt IW} of {\tt STR}.
\begin{verbatim}
    I = WORDS(STR)
\end{verbatim}
sets {\tt I} to the number of words in {\tt STR}.
\begin{verbatim}
    CALL WORDSEP(STR)
\end{verbatim}
sets the word separator for {\tt SUBWORD}, {\tt WORD}
and {\tt WORDS} to the first character of the string {\tt STR}.
 
\Examples
Assume the following declarations:
\begin{verbatim}
    CHARACTER STR*41,REP10*10,REP17*17
    CHARACTER REPEAT*16,SPAC17*17,SPAC30*30,SPACES*20
    INTEGER VERIFY
\end{verbatim}
and a string {\tt STR} defined as:
\begin{verbatim}
    DATA STR /'A B C 1 2 3 A B C 1 2 3 A B C 1 2 3 A B C'/
\end{verbatim}
The following results are obtained: \\[2mm]
\begin{tabular}{@@{\hspace*{8mm}}l@@{\hspace*{25mm}}l}
    Statement/ Expression   &      Yields the value
\end{tabular}
\begin{verbatim}
    REP10 = REPEAT('ABC',5)        'ABCABCABCA'
    REP17 = REPEAT('ABC',5)        'ABCABCABCABCABC  '
    REP17 = REPEAT('ABC',6)        'ABCABCABCABCABCAB'
\end{verbatim}
\newpage
\begin{verbatim}
    INDEXB(STR,' ')                 40
    INDEXC(STR,' ')                  1
    INDXBC(STR,' ')                 41
    INDEXA(STR)                      1
    INDXAC(STR)                      2
    INDEXN(STR)                      7
    INDXNC(STR)                      1
    INDEXS(STR)                      2
    ISCAN(STR,' ')                   2
    VERIFY(STR,' ')                  1
 
    INDEXB(STR,'1 2 3')             31
    INDEXC(STR,'1 2 3')              1
    INDXBC(STR,'1 2 3')             37
    ISCAN(STR,'123')                 7
    VERIFY(STR,'123')                1
    INDEXB(STR,'A B C')             31
    INDEXC(STR,'A B C')              2
    INDXBC(STR,'A B C')             36
    ISCAN(STR,'ABC')                 1
    VERIFY(STR,'ABC')                2
 
    SPAC17=SPACES(STR,0)             'ABC123ABC123ABC12'
    SPAC30=SPACES(STR,2)             'A  B  C  1  2  3  A  B  C  1  2'
\end{verbatim}
$\bullet$
 
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
\Version{INDEXX}                              \Routid{M433}
d4 3
a6 3
\Author{M. Goossens, A. Petrilli}            \Library{KERNLIB}
\Submitter{}                                  \Submitted{11.02.1986}
\Language{Fortran}               %\Revised{}
d8 1
a8 1
{\tt CLTOU} provides a comprehensive package for the manipulation of type
d16 3
a18 1
\Rdef{ISCAN},  & \Rdef{REPEAT}, & \Rdef{SPACES}, & \Rdef{VERIFY}
d22 2
a23 1
the functions {\tt REPEAT}, {\tt SPACES} and the variable {\tt H} are
d91 15
d110 14
d172 1
@

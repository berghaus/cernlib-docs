head	1.2;
access;
symbols;
locks;


1.2
date	95.05.12.17.28.47;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.14;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@latest version with new amsmath
@
text
@% 12 may 1995  ksk
\Version {PERMU}                               \Routid{V202}
\Keywords{COMBINATION PERMUTATION ORDER LEXICOGRAPH}
\Author{F. Beck, T. Lindel\"of}               \Library{MATHLIB}
\Submitter{K.S. K\"olbig}                     \Submitted{15.09.1978}
\Language{Fortran}                      \Revised{07.06.1992}
\Cernhead {Permutations and Combinations}
Successive calls to
subroutine subprogram {\tt PERMU} will generate all permutations of a
set of integers of total length $N$ consisting of $n_1$ repetitions of
the integer $1$, followed by $n_2$ repetitions of the integer $2,\ldots$
etc, concluding with $n_m$ repetitions of the integer $m$, where
$\sum_{j=1}^m n_j = N$.
\par
Subroutine subprogram {\tt PERMUT} generates {\it directly} a single
member of the set of all lexicographically ordered permutations of the
first integers $1,2,\ldots,N$, as specified by its
lexicographical ordinal.
\par
Successive calls to subroutine subprogram {\tt COMBI} will generate all
the $\binom{N}{J}$ possible combinations without repetition of
$J \leq N$ integers from the set $\{1,2,\ldots,N\}$.
\Structure
{\tt SUBROUTINE} subprogram \\
User Entry Names: \Rdef{PERMU}, \Rdef{PERMUT}, \Rdef{COMBI} \\
Files Referenced: {\tt Unit 6}
\Usage
{\bf Subroutine PERMU:}
\begin{verbatim}
    CALL PERMU(IA,N)
\end{verbatim}
\begin{DLtt}{1234}
\item[IA] ({\tt INTEGER}) One-dimensional array of length
$\geq \mathtt{N}$.
On entry, $\mathtt{IA(i),(i=1,2,\ldots,N)}$, must contain the
initial set of integers to be permuted (see {\bf Examples}). A call with
$\mathtt{IA(1)=0}$ will place the set $\{\mathtt{1,2,\ldots,N}\}$ in
{\tt IA}. On exit, {\tt IA} contains the "next" permutation. If all the
permutations have been generated, the next call sets $\mathtt{IA(1)=0}$.
\item[N] ({\tt INTEGER}) Length of the set to be permuted.
\end{DLtt}
{\bf Subroutine PERMUT:}
\begin{verbatim}
    CALL PERMUT(NLX,N,IP)
\end{verbatim}
\begin{DLtt}{1234}
\item[NLX] ({\tt INTEGER}) Lexicographical ordinal of the permutation
desired.
\item[N] ({\tt INTEGER}) Length of the set to be permuted.
\item[IP] ({\tt INTEGER}) One-dimensional array of length
$\geq \mathtt{N}$.
On exit, $\mathtt{IP(i),(i=1,2,\ldots,N})$, contains the {\tt NLX}-th
lexicographically ordered permutation of the integers $1,2,\ldots,N$
(see {\bf Examples}).
\end{DLtt}
{\bf Subroutine COMBI:}
\begin{verbatim}
    CALL COMBI(IC,N,J)
\end{verbatim}
\begin{DLtt}{1234}
\item[IC] ({\tt INTEGER}) One-dimensional array of length
$\geq \mathtt{N}+1$. The first call must be made with
$\mathtt{IC(1)=0}$. This
generates the first combination $\mathtt{IC(i)=i,(i = 1,2,\ldots,J})$.
Each successive call generates a new combination and places it in
the first {\tt J} elements of {\tt IC}. If all the combinations have
been generated, the next call sets $\mathtt{IC(1)=0}$.
\item[N] ({\tt INTEGER}) Length of the set from which the combinations
are taken.
\item[J] ({\tt INTEGER}) Length of the combinations.
\end{DLtt}
\newpage
\Examples
\begin{enumerate}
\item Consider the following set of $N=12$ objects, only 8 are different:
$$ \{y_1,y_2,y_3,y,y,r_1,r_2,r,r,b,b,b\}. $$
This set consists of $m=8$ sequences of length $n_1=n_2=n_3=n_5=n_6=1$,
\, $n_4=n_7=2$, \, $n_8 = 3$. Thus, in order to get the possible
permutations, set
$$ \mathtt{IA = \{1 \ 2 \ 3 \ 4 \ 4 \ 5 \ 6 \ 7 \ 7 \ 8 \ 8 \ 8\}} $$
before calling {\tt PERMU(IA,12)} the first time.
\item To generate all permutations of $N$ indistinguishable objects,
set $\mathtt{IA(1)=0}$, which is equivalent to
$\mathtt{IA(i)=i,(i = 1,2,\ldots,N})$, before calling {\tt PERMU(IA,N)}
the first time.
\item To compute the, lexicographically second, third and last $(4!=24)$
permutions of the set $\{\mathtt{1,2,3,4}\}$: \\[2mm]
\begin{tabular}{@@{\hspace*{25mm}}l@@{\qquad \mbox{\rm sets} \qquad}l}
{\tt CALL PERMUT(\ 2,4,IP)} & $\mathtt{IP = \{1,2,4,3\}}$ \\
{\tt CALL PERMUT(\ 3,4,IP)} & $\mathtt{IP = \{1,3,2,4\}}$ \\
{\tt CALL PERMUT(24,4,IP)}  & $\mathtt{IP = \{4,3,2,1\}}$
\end{tabular}
\item To generate and print all 20 combinations of 3 integers from the
set $\{\mathtt{1,2,3,4,5,6}\}$ one could write:
\begin{verbatim}
    ...
    IA(1)=0
  1 CALL COMBI(IC,6,3)
    IF(IC(1) .NE. 0) THEN
     PRINT *, IC(1),IC(2),IC(3)
     GO TO 1
    ENDIF
    ...
\end{verbatim}
\end{enumerate}
\Restrict
{\tt PERMUT:} $\mathtt{1 \leq NLX \leq N!,\,N \leq 12}$. \\
{\tt COMBI:} $\mathtt{J \leq N}$.
\Errorh
If any of the above conditions is not satisfied, a message is written
on {\tt Unit 6}.
\Notes
\begin{enumerate}
\item If $\mathtt{N \leq 0}$ or $\mathtt{J \leq 0}$, the subprograms
return control without action.
\item The number of distinct permutations of a set of $N$ numbers
which can be decomposed into $m$ groups of $n_1,n_2,\ldots,n_m$
indistinguishable elements is given by
$$ \displaystyle \frac{N!}{n_1!\,n_2! \cdots n_m!} $$
where $n_1+n_2+\cdots+n_m = N$. This number can become large even
for seemingly simple cases, e.g. in Example 1 above,
$$ \displaystyle \frac{12!}{1!\,1!\,1!\,2!\,1!\,1!\,2!\,3!}
= 19958400. $$
\end{enumerate}
$\bullet$
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
% 5 jun 1992 mg
d21 1
a21 1
the ${N \choose J}$ possible combinations without repetition of
@

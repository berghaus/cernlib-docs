head	1.3;
access;
symbols;
locks;
comment	@% @;


1.3
date	96.05.14.08.07.29;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	96.05.08.12.29.29;	author abbey;	state Exp;
branches;
next	1.1;

1.1
date	94.12.19.15.06.30;	author goossens;	state Exp;
branches;
next	;


desc
@New version by KSK
@


1.3
log
@Optimized version (KSK)
@
text
@%   18 oct 94  ksk
\Version{RADAPT}                                \Routid{D102}
\Keywords{ADAPTIVE NUMERICAL GAUSSIAN QUADRATURE}
\Author{F. James}                          \Library{MATHLIB}
\Submitter{}                               \Submitted{01.12.1994}
\Language{Fortran}                    %    \Revised{}
\Cernhead{Adaptive Gaussian Quadrature}
Subroutine subprograms {\tt RADAPT} and {\tt DADAPT} calculate, to
an attempted specified accuracy, the value of the integral
$$I \ = \ \int_a^b f(x)\,dx$$
by adaptive subdivision of the interval $(a,b)$, calculating the
integrals over the subintervals using {\tt RGS56P} and
{\tt DGS56P} (D106).
\par
On CDC and Cray computers, the double-precision version {\tt DADAPT}
is not available.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names: \Rdef{RADAPT}, \Rdef{DADAPT} \\
External References: \Rind{RGS56P}{D106}, \Rind{DGS56P}{D106},
user-supplied {\tt FUNCTION} subprogram.
\Usage
For $\mathtt{t=R}$ (type {\tt REAL}), $\mathtt{t=D}$ (type
{\tt DOUBLE PRECISION}),
\begin{verbatim}
    CALL tADAPT(F,A,B,NSEG,RELTOL,ABSTOL,RES,ERR)
\end{verbatim}
\begin{DLtt}{1234567}
\item[F]
(type according to {\tt t}) Name of a user-supplied
{\tt FUNCTION} subprogram, declared {\tt EXTERNAL} in the calling
program. This subprogram must set $\mathtt{F(X)} = f(\mathtt{X})$.
\item[A,B] (type according to {\tt t}) End-points of integration
interval. Note that {\tt B} may be less than {\tt A}.
\item[NSEG] ({\tt INTEGER}) Specifies how the adaptation is to
be done: \\
$\mathtt{= 0:}$ use the subdivisions as determined in the previous
call to {\tt tADAPT}, \\
$\mathtt{= 1:}$ fully automatic, adapt until tolerance attained, \\
$\mathtt{= n>1:}$ first split interval into n equal segments,
              then adapt as necessary to attain tolerance.
\item[RELTOL] (type according to {\tt t})
Specified {\it relative} tolerance.
\item[ABSTOL] (type according to {\tt t})
Specified {\it absolute} tolerance.
\item[]  The calculation comes to an end if either {\tt RELTOL} or
{\tt ABSTOL} is satisfied, or the number of segments exceeds {\tt 100}.
Either {\tt RELTOL} or {\tt ABSTOL} can be set to zero, in which
case only the other is used.
\item[RES] (type according to {\tt t}) The calculated approximation
for $I$.
\item[ERR] (type according to {\tt t}) An estimated absolute
uncertainty on this approximation.
\end{DLtt}
\Method
The automatic adaption is done as follows: At each step, the total
integral is estimated as the sum of the integrals over the
subdivisions, and the squared uncertainty is estimated as the sum
of the squares of the uncertainties over all subdivisions. If this
uncertainty is too big (failing both the absolute and relative
tolerance criteria) then the subinterval with the largest absolute
uncertainty is divided in half.
\newpage
\Accuracy
The true accuracy is usually very close to the uncertainty returned
by the subroutine, sometimes it is much better, but very seldom
worse. Even on functions with (integrable) singularities, the results
are usually reliable, as long as the singularity is ``wide enough''
to be detected in the early stages, which can be controlled by the
value of {\tt NSEG}.
\\ $\bullet$
@


1.2
log
@*** empty log message ***
@
text
@d20 1
a20 1
External References: \Rind{RGS56P}, \Rind{DGS56P}{D106},
d63 1
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
External References: \Rind{RGS56P}, \Rind{DGS56P} (D106),
@

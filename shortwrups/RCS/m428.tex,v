head	1.1;
access;
symbols;
locks;


1.1
date	94.04.02.16.47.00;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@



1.1
log
@Initial revision
@
text
@\Version {LOCBYT}                        \Routid{M428}
\Keywords{BYTE CONTENT SEARCH}
\Author{J. Zoll}                         \Library{KERNLIB}
\Submitter{}                             \Submitted{01.06.1973}
\Language{Fortran or Assembler}         \Revised{15.09.1978}
\Cernhead {Search for Byte-Content}
{\tt LOCBYT} searches through a vector in steps of 1 or more words
looking for the first word which has a certain bit configuration in a
certain part of the word.
\Structure
{\tt FUNCTION} subprogram \\
User Entry Names: \Rdef{LOCBYT}
\Usage
\begin{verbatim}
    J = LOCBYT(IT,VECT,N,INC,L,NBITS)
\end{verbatim}
searches through the {\tt N} element vector {\tt VECT}, but only
looking every {\tt INC} words for the first word which contains {\tt IT}
in the byte {\tt (L,NBITS)}, and returns its address in {\tt J} which
may be {\tt 1}, {\tt INC+1}, {\tt 2*INC+1}, {\tt 3*INC+1}, etc.
\par
{\tt IT} must contain the desired byte value right-justified with
zero-fill.
\par
$\mathtt{J=0}$ is returned if such a word is not found, or if ${\tt N=0}$.
\par
The byte {\tt (L,NBITS)} is a byte of {\tt NBITS} bits, occupying the
bits {\tt L,L+1,\ldots,L+NBITS-1}. The bits are numbered as with the
routines of {\tt BITBYT} (M421) / {\tt PACBYT} (M422):
$\mathtt{L = 1,2,3,\ldots}$; bit 1 is the least significant bit of the word.
\\ $\bullet$
@

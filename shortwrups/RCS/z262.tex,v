head	1.3;
access;
symbols;
locks; strict;


1.3
date	95.02.28.08.33.42;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.12.19.15.03.52;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.24;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@ Version of Feb. 28th
@
text
@% 20 feb 95  ksk
\Version {GOPARM}                              \Routid{Z262}
\Keywords{GOPARM PROVIDE STEP STRING USER}
\Author{J. Ehrman}                         \Library{KERNLIB, IBM only}
\Submitter{}                                \Submitted{15.09.1978}
\Language{Assembler}                         \Revised{20.06.1985}
\Cernhead {Provide the User with the G Step PARM-String (IBM)}
\begin{center}
\fbox{\parbox{120mm}{
\begin{center}
{\bf OBSOLETE}
\end{center}
Please note that this routine has been obsoleted in CNL 219. Users are
advised not to use it any longer and to replace it in older programs.
No maintenance for it will take place and it will eventually disappear.
\\[3mm]
Suggested replacement: {\tt IARGC} (Z264) }}
\end{center}
{\tt GOPARM} returns to a Fortran program the character string
specified in the {\tt PARM} field of the {\tt JCL} corresponding to the
step being executed. (This is the {\tt G}-step when using the CERN
procedure {\tt JFORTCLG}).
\Structure
{\tt SUBROUTINE} subprogram \\
User Entry Names: \Rdef{GOPARM}
\Usage
\begin{verbatim}
    CALL GOPARM(LENGTH,PARMS)
\end{verbatim}
\begin{DLtt}{12345678}
\item [LENGTH] ({\tt INTEGER}) Contains the length in characters
of the parameter string specified in the {\tt JCL} of the step in
which this routine is executed. $(\mathtt{0 \le LENGTH \le 100})$.
\item [PARMS] ({\tt CHARACTER*100}) Contains the {\tt LENGTH} characters
of the string.
\end{DLtt}
\Restrict
In the VM-CMS operating system {\tt GOPARM} must be called before any
Input/Output operations have been performed. The mechanism for passing
parameters depends on how a program is loaded. For a module type:
\par
Module--name parameter--string
\par
After a {\tt LOAD} the parameters must be placed on the subsequent
{\tt START} command:
\par
{\tt START} entry--name parameter--string
\par
If {\tt START} is used as an option of {\tt LOAD} then no parameters are
passed and {\tt LENGTH} is returned as zero. Note that any {\tt '('}
will be passed as part of the parameter-string.
\Notes
The form with parentheses must be used if the parameter string is to be
continued on a second {\tt JCL} card, since a value or subvalue cannot
be split over two {\tt JCL} cards.
\Examples
The following are all equivalent:
\begin{verbatim}
//EXEC JFORTCLG,GPRM='FIRST,SECOND,THIRD=YES'
//EXEC JFORTCLG,GPRM=(FIRST,SECOND,'THIRD=YES')
//EXEC JFORTCLG,GPRM=('FIRST','SECOND','THIRD=YES')
\end{verbatim}
and give the following parm-string of length {\tt 22}:
\begin{verbatim}
    FIRST,SECOND,THIRD=YES
\end{verbatim}
$\bullet$
@


1.2
log
@New version by KSK
@
text
@d1 1
a1 1
% 07 nov 94  ksk
d8 11
@


1.1
log
@Initial revision
@
text
@d1 1
d20 3
a22 3
\item [LENGTH]  ({\tt INTEGER}) Contains the length in
characters of the parameter string specified in the {\tt JCL} of the
step in which this routine is executed. $({\tt 0 \leq LENGTH \leq 100})$.
@

head	1.1;
access;
symbols;
locks;


1.1
date	94.04.02.16.47.05;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@



1.1
log
@Initial revision
@
text
@\Version {LOCF}                            \Routid{N100}
\Keywords{ABSOLUTE ADDRESS VARIABLE}
\Author{CDC}                               \Library{KERNLIB}
\Submitter{J.Zoll}                         \Submitted{01.03.1968}
\Language{Fortran or Assembler or C}       \Revised{16.09.1991}
\Cernhead {Address of a Variable}
The function {\tt LOCB} returns the absolute address of the variable
given as its argument.
\par
{\tt LOCF} returns the absolute address measured in terms of
Fortran machine words.
\Structure
{\tt FUNCTION} subprogram \\
User Entry Names: \Rdef{LOCF}, \Rdef{LOCB}
\Usage
\begin{verbatim}
    IAD = LOCB(X)
\end{verbatim}
where {\tt X} is the name of a variable of any type,
or a name declared {\tt EXTERNAL} in the calling program.
\begin{verbatim}
    IAD = LOCF(X)
\end{verbatim}
where {\tt X} is the name of a variable of type {\tt INTEGER}
or {\tt REAL}.
\Notes
On CDC, {\tt LOCF} is included in the FTN library, and documented in
the Fortran manual.
\par
On all machines {\tt LOCF} is intended to measure the displacement
between variables, thus for example for:
\begin{verbatim}
      COMMON /X/ M(12),A(4),LAST
      N = LOCF(LAST) - LOCF(M(1))
\end{verbatim}
{\tt N} will be set to contain 16 on all machines, whilst
\verb" LOCB(LAST) - LOCB(M(1)) " will give some multiple of 16.
\\ $\bullet$
@

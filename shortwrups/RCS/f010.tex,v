head	1.2;
access;
symbols;
locks;


1.2
date	96.05.14.08.07.29;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.43;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@Optimized version (KSK)
@
text
@% 27 May 1992 mg
\Version {RINV}                   \Routid{F010}
\Keywords{LINEAR EQUATION MATRIX INVERSION}
\Author{G.A. Erskine}             \Library{KERNLIB}
\Submitter{}                      \Submitted{18.12.1979}
\Language{Fortran}                 \Revised{27.11.1984}
\Cernhead {Linear Equations, Matrix Inversion}
Subroutine {\tt tEQN} (where $\mathtt{t=R}$, {\tt D} or
{\tt C} as described below) solves the matrix equation
$$\mathbf{AX=B},\mbox{\hspace{2cm} (*)}$$
which represents a system of $N$ simultaneous linear equations with
$K$ right-hand sides:
$$     \sum^N_{j=1} a_{ij} x_{jk} =
b_{ik},\mbox{\hspace{1cm}}(i=1,2,\ldots,N, \ k=1,2,\ldots,K).$$
Subroutine {\tt tINV} computes the inverse of a square matrix {\bf A}.
Subroutine {\tt tEQINV} solves the system (*) and also computes
the inverse of {\bf A}, but is appreciably slower than {\tt tEQN}.
\par
If the determinant of {\bf A} is also required, or if several
systems of the form (*) are to be solved sequentially with the same
coefficient matrix {\bf A} but differing right-hand sides {\bf B}, the
subroutines in {\tt RFACT} (F011) should be used.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names:
\Rdef{RINV}, \Rdef{REQN}, \Rdef{REQINV},
\Rdef{DINV}, \Rdef{DEQN}, \Rdef{DEQINV},
\Rdef{CINV}, \Rdef{CEQN}, \Rdef{CEQINV} \\
Internal Entry Names: {\tt F010PR} \\
 Files Refeenced: Printer \\
External References: 
   \begin{tabular}[t]{@@{}llll}
      \Rind{RFACT}{F011},&\Rind{RFEQN}{F011},&\Rind{RFINV}{F011}, \\
      \Rind{DFACT}{F011},&\Rind{DFEQN}{F011},&\Rind{DFINV}{F011}, \\
      \Rind{CFACT}{F011},&\Rind{CFEQN}{F011},&\Rind{CFINV}{F011}, \\
      \Rind{TMPRNT}{F011},&\Rind{KERMTR}{N001},&\Rind{ABEND}{Z035}
   \end{tabular}
\Usage
For $\mathtt{t=R}$ (type {\tt REAL}), $\mathtt{t=D}$ (type
{\tt DOUBLE PRECISION}), $\mathtt{t=C}$ (type {\tt COMPLEX}):
\begin{verbatim}
    CALL tEQN  (N,A,IDIM,IR,IFAIL,K,B)
    CALL tINV  (N,A,IDIM,IR,IFAIL)
    CALL tEQINV(N,A,IDIM,IR,IFAIL,K,B)
\end{verbatim}
\begin{DLtt}{123456}
\item [N]  ({\tt INTEGER}) Order of the square matrix {\bf A}.
\item [A] (Type according to {\tt t}) Two-dimensional array
whose first dimension has the value {\tt IDIM}.
\item[IDIM] ({\tt INTEGER}) First dimension of array {\tt A}
(and of array {\tt B} if $ {\tt K > 1}$).
\item [IR] ({\tt INTEGER}) Array of at least {\tt N}
elements, required as working space.
\item[IFAIL]({\tt INTEGER}) On exit, {\tt IFAIL} will be set to
$\mathtt{-1}$ if {\bf A} is found to be singular, and to {\tt 0}
otherwise.
(Singularity will often go undetected because of rounding errors during
factorization even if the elements of {\bf A} have integral values.)
\item [K]({\tt INTEGER}) Number of columns of the matrices
{\bf B} and {\bf X}.
\item [B](Type according to {\tt t}) In general, a two-dimensional
array whose first dimension has the value {\tt IDIM}. {\tt B} may be
one-dimensional if $\mathtt{K = 1}$.
\end{DLtt}
These subroutines must be called with matrix {\bf A} in array {\tt A}
and matrix {\bf B} in array {\tt B}. Then, provided the matrix
{\bf A} is non-singular, {\tt IFAIL} will be set to {\tt 0}
and arrays {\tt A} and {\tt B} will be set as follows:
\begin{DLtt}{12345678}
\item [tEQN] The solution {\bf X} replaces {\bf B}. The matrix
{\bf A} is destroyed.
\item [tINV] The inverse $\mathbf{A^{-1}}$ of {\bf A} replaces {\bf A}.
\item [tEQINV] The solution {\bf X} replaces {\bf B}, and the
inverse $\mathbf{A^{-1}}$ of {\bf A} replaces {\bf A}.
\end{DLtt}
If the matrix {\bf A} is singular, {\tt IFAIL} will be set to
$\mathtt{-1}$. In this case the contents of {\tt A} is unpredictable
and the contents of {\tt B} is unchanged.
\Method
Triangular factorization with row interchanges, implemented by in-line
code if $\mathtt{N \leq 3}$ and by calls to library program {\tt RFACT}
(F011) if $\mathtt{N > 3}$. If $\mathtt{N<1}$ or $\mathtt{IDIM<N}$ or
$\mathtt{K < 1}$, a message is printed and program execution is
terminated by calling {\tt ABEND} (Z035).
\Examples
Assume that the $10 \times 10$ matrix {\bf A} and the $10 \times 3$
matrix {\bf B} are stored according to the Fortran convention in
arrays {\tt A} and {\tt B} respectively of a program containing
declarations
\begin{verbatim}
    DIMENSION IR(25)
    DOUBLE PRECISION A(25,30),B(25,10)
\end{verbatim}
To replace {\bf B} by the $10 \times 3$ solution matrix {\bf X}
of the system of equations $\mathbf{AX=B}$ and to replace {\bf A}
by $\mathbf{A^{-1}}$, with a jump to label {\tt 100} if {\bf A} is
singular:
\begin{verbatim}
    CALL DEQINV (10,A,25,IR,IFAIL,3,B)
    IF(IFAIL .NE. 0) GO TO 100
\end{verbatim}
$\bullet$
@


1.1
log
@Initial revision
@
text
@d31 7
a37 5
External References: \parbox[t]{.7\textwidth}{
\Rind{RFACT}, \Rind{RFEQN}, \Rdef{RFINV},
\Rind{DFACT}, \Rind{DFEQN}, \Rdef{DFINV},
\Rind{CFACT}, \Rind{CFEQN}, \Rdef{CFINV}, \\
\Rind{TMPRNT} (F011), \Rind{KERMTR} (N001), \Rind{ABEND} (Z035)}
@

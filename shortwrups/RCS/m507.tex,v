head	1.1;
access;
symbols;
locks;


1.1
date	94.04.02.16.47.04;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@



1.1
log
@Initial revision
@
text
@\Version{LENOCC}                                 \Routid{M507}
\Keywords{CHARACTER LENGTH LENOCC STRING}
\Author{F. Rademakers, J. Zoll}                  \Library{KERNLIB}
\Submitter{}                                     \Submitted{27.11.1984}
\Language{Fortran or C}                   \Revised{05.05.1992}
\Cernhead {Occupied Length of a Character String}
{\tt LENOCC} returns the occupied length of a string of type
{\tt CHARACTER}.
\Structure
{\tt FUNCTION} subprogram \\
User Entry Names: \Rdef{LENOCC}
\Usage
In any arithmetic expression,
\begin{center}
{\tt LENOCC(LINE)}
\end{center}
has the value of the occupied length of the character string {\tt LINE},
i.e. the length up to and including the last non-blank character.
$\mathtt{LENOCC = 0}$ if {\tt LINE} contains blanks only.
{\tt LINE} is of type {\tt CHARACTER} and {\tt LENOCC} is of type
{\tt INTEGER}.
 
For few trailing blanks {\tt LENOCC} is slower than
{\tt LNBLNK} of {\tt M432},
but it may be substantially faster for very many trailing blanks;
the break-even point depends on the machine and is usually
around 25 trailing blanks.
\Method
On some machines {\tt LINE} is first scanned backwards
for machine words containing all blanks,
and then the remaining string is scanned for the
last non-blank character.
\\ $\bullet$
@

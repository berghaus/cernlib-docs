head	1.3;
access;
symbols;
locks;


1.3
date	96.05.14.08.07.29;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	95.01.13.08.38.58;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.18;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@Optimized version (KSK)
@
text
@%  05 jan 95   ksk
\Version {CALDAT}                            \Routid{Z009}
\Keywords{CALDAT CALENDAR CONVERSION DATE}
\Author{O. Hell}                             \Library{KERNLIB}
\Submitter{}                                 \Submitted{27.11. 1984}
\Language{Fortran}                        %\Revised{}
\Cernhead {Calendar Date Conversion}
{\tt CALDAT} converts any calendar date represention in a set of
such representations to all other calendar date representations in
the set; in addition a few extra bits of information are produced.
\Structure
{\tt SUBROUTINE} subprogram \\
User Entry Names: \Rdef{CALDAT}\\
Internal Entry Names: {\tt CDMON}, {\tt CLEAP}, {\tt CYDIY},
{\tt CYEARY}\\
External References: \Rind{DATIME}{Z007}
\Usage
\begin{verbatim}
    CALL CALDAT(IINDEX,CHREP,IBNREP,IERR)
\end{verbatim}
\begin{DLtt}{12345678}
\item [IINDEX] ({\tt INTEGER}) Integer specifying which of the possible
date representations is being given as the input representation. This
input may either be as type {\tt CHARACTER} within the {\tt CHREP}
string or as type {\tt INTEGER} within the {\tt IBNREP} array.
\item [CHREP] ({\tt CHARACTER*119}) A character string containing,
as substrings, the possible date representations. One such substring may
be filled as the input representation, in which case it should be pointed
to by {\tt IINDEX}.
\item [IBNREP] ({\tt INTEGER}) Array of length 8 containing various
binary date representations. One such date representation may be filled
as the input representation, in which case it should be pointed to by
{\tt IINDEX}.
\item [IERR] ({\tt INTEGER}) Error flag. $\mathtt{IERR=0}$ success,
$\mathtt{IERR \neq 0}$ failure of the conversion.
\end{DLtt}
The substrings of {\tt CHREP} can be accessed directly,
using {\tt CHARACTER} substring operations. Alternatively all, or part,
of the {\tt EQUIVALENCE} statements below may be used:
\begin{verbatim}
    CHARACTER   DMY14*14,DMY11*11,DMY9*9,DMY10*10
    CHARACTER*8 DMY8A,DMY8B,YMD8,MDY8,YDM8
    CHARACTER*6 DMY6,       YMD6,MDY6,YDM6
    CHARACTER   YD5*5,W4*4,W2*2
    EQUIVALENCE
   *   (CHREP(  1: 14), DMY14), (CHREP( 15: 25), DMY11),
   *   (CHREP( 26: 34), DMY9 ), (CHREP( 35: 44), DMY10),
   *   (CHREP( 45: 52), DMY8A), (CHREP( 53: 60), DMY8B),
   *   (CHREP( 61: 66), DMY6 ), (CHREP( 67: 74), YMD8 ),
   *   (CHREP( 75: 80), YMD6 ), (CHREP( 81: 88), MDY8 ),
   *   (CHREP( 89: 94), MDY6 ), (CHREP( 95:102), YDM8 ),
   *   (CHREP(103:108), YDM6 ), (CHREP(109:113), YD5  ),
   *   (CHREP(114:117), W4   ), (CHREP(118:119), W2   )
\end{verbatim}
\newpage
Details of the substrings in argument {\tt CHREP} and the
corresponding {\tt IINDEX} values:
\begin{verbatim}
            EXAMPLE       IINDEX            EXAMPLE  IINDEX
 
    DMY14   16. APRIL 1982     1      YMD6  820416        9
    DMY11   16 APR 1982        2      MDY8  04/16/82     10
    DMY9    16 APR 82          3      MDY6  041682       11
    DMY10   16. 4.1982         4      YDM8  82/16/04     12
    DMY8A   16. 4.82           5      YDM6  821604       13
    DMY8B   16/04/82           6      YD5   82106        14
    DMY6    160482             7      W4    FRI.
    YMD8    82/04/16           8      W2    FR
\end{verbatim}
Details of the elements in argument {\tt IBNREP} and the
corresponding {\tt IINDEX} values:
\begin{verbatim}
 Element     Contents          Type          Example     IINDEX
   1,2,3        d, m, y             binary        16, 4, 1982    101
       4        day in the year     binary                106    102
       5        00YYDDDC            packed dec       0082106C    103
       6        Julian date         binary             723651    104
       7        weekday, MO=0,...   binary                  4
       8        week in the year    binary                 15
     3,4        y, day in year      binary          1982, 106    105
\end{verbatim}
Notes: Julian date $=$ days since {\tt 1/1/1}, without Gregory's pause.
Week 1 of the year contains the 1st Thursday in the year (ISO). \\[2mm]
Names of the months: \\[1mm]
3 characters:
\begin{tabular}[t]{llllll}
{\tt 'JAN'}, & {\tt 'FEB'}, & {\tt 'MAR'}, & {\tt 'APR'}, &
{\tt 'MAY'}, & {\tt 'JUN'}, \\
{\tt 'JUL'}, & {\tt 'AUG'}, & {\tt 'SEP'}, & {\tt 'OCT'}, &
{\tt 'NOV'}, & {\tt 'DEC'}
\end{tabular} \\[1mm]
5 characters:
\begin{tabular}[t]{llllll}
{\tt 'JAN.\ '}, & {\tt 'FEB.\ '}, & {\tt 'MARCH'}, & {\tt 'APRIL'}, &
{\tt 'MAY\ \ '},& {\tt 'JUNE\ '}, \\
{\tt 'JULY\ '}, & {\tt 'AUG.\ '}, & {\tt 'SEPT.'}, & {\tt 'OCT.\ '},&
{\tt 'NOV.\ '}, & {\tt 'DEC.\ '}
\end{tabular} \\[2mm]
Names of the week days: \\[1mm]
2 characters:
{\tt 'MO'}, {\tt 'TU'}, {\tt 'WE'}, {\tt 'TH'}, {\tt 'FR'},
{\tt 'SA'}, {\tt 'SU'}.  \\[1mm]
4 characters:
{\tt 'MON.'}, {\tt 'TUE.'}, {\tt 'WED.'}, {\tt 'THUR'}, {\tt 'FRI.'},
{\tt 'SAT.'}, {\tt 'SUN.'}.
\Method
Two arguments are used for passing the calendar dates: a character
string and an array of full words. The various representations are
numbered, and an input parameter ('input index') specifies the
representation containing the input calendar date.
\par
An extra output parameter receives a return code. \\[2mm]
Special cases:
\begin{DLtt}{12}
\item[$\bullet$]  Input index = 0 designates {\it today} which
{\tt CALDAT} will find.
\item[$\bullet$]  Input year {\tt yy} rather than {\tt yyyy},
designates {\it this century}.
\item[$\bullet$]  Input index or input data invalid:
\item[] -- output character string with all {\tt '*'};
\item[] -- output numbers all {\tt X'81818181'} = {\tt -2 122 219 135}.
\end{DLtt}
\newpage
\Restrict
{\tt CALDAT} will give incorrect dates and weekdays for dates prior to
the reformation of the Calendar by pope Gregory (16th century).
\Errorh
\begin{tabular}{@@{\hspace*{15mm}}rl}
{\tt IERR} & Meaning \\[1mm]
 0 & everything fine  \\
 4 & $\mathtt{IINDEX < 0}$ \\
 8 & upper bound for $\mathtt{CHREP < IINDEX <}$ lower bound for
     {\tt IBNREP} \\
12 & upper bound for $\mathtt{IBNREP < IINDEX}$ \\
16 & {\tt ddd}  out of bounds \\
20 & {\tt mm | dd} out of bounds \\
24 & {\tt yyyy} out of bounds
\end{tabular} \\[2mm]
Syntax errors:
\begin{verbatim}
IERR   in  IINDEX      IERR  in  IINDEX            IERR   in   IINDEX
 
1001   DMY14    1      1006  DMY8B    6            1011   MDY6     11
1002   DMY11    2      1007  DMY6     7            1012   YDM8     12
1003   DMY9     3      1008  YMD8     8            1013   YDM6     13
1004   DMY10    4      1009  YMD6     9            1014   YD5      14
1005   DMY8A    5      1010  MDY8    10            1103   Julian  103
\end{verbatim}
\Notes
Element {\tt 5} of {\tt IBNREP} is not a Fortran type. Nevertheless
this calendar date format may show up in data from the 'real world'.
Element {\tt 7} of {\tt IBNREP} is especially well suited for
arithmetical calculations with dates.
\Examples
\begin{verbatim}
 C    Initialize substring CHREP(15:25)
      DMY11='16 APR 1982'
 C    Define this substring to be the input format
      IINDEX=2
      CALL CALDAT(IINDEX,CHREP,IBNREP,IERR)
\end{verbatim}
$\bullet$
@


1.2
log
@New version KSK Jan 12th 1995
@
text
@d16 1
a16 1
External References: \Rind {DATIME} (Z007)
@


1.1
log
@Initial revision
@
text
@d1 1
d123 1
@

head     1.1;
access   ;
symbols  ;
locks    goossens:1.1; strict;
comment  @@;


1.1
date     94.04.02.16.46.49;  author goossens;  state Exp;
branches ;
next     ;


desc
@Initial entry
@



1.1
log
@Initial revision
@
text
@% 20 may 1992  mg
\Version{ASSIGN}                           \Routid{H300}
\Keywords{ASSIGNMENT MATRIX PERMUTATION MINIMUM}
\Author{F. Bourgeois}                       \Library{MATHLIB}
\Submitter{}                               \Submitted{15.06.1970}
\Language{Fortran}                          \Revised{15.09.1978}
\Cernhead {Assignment Problem}
Subroutine subprogram {\tt ASSIGN} solves the so-called
{\it Assignment problem} which, for square matrices, may
be formulated as follows:
Given an $n \times n$ matrix ($a_{ij}$) of real numbers, find a
permutation $k(1),k(2),\ldots,k(n)$ of $1,2,\ldots,n$ that minimizes
$$ \sum_{i=1}^n a_{i,k(i)}.$$
The subprogram {\tt ASSIGN} will also solve the assignment
problem for rectangular matrices.
\Structure
{\tt SUBROUTINE} subprogram \\
User Entry Names: \Rdef{ASSIGN}
\Usage
\begin{verbatim}
    CALL ASSIGN(A,N,M,IDIM,K,TOTAL,MODE)
\end{verbatim}
\begin{DLtt}{123456}
\item[A] ({\tt REAL}) Two-dimensional array containing a rectangular
matrix which will be overwritten by the program.
\item[N]({\tt INTEGER}) Number $N$ of rows in the matrix.
\item[M]({\tt INTEGER}) Number $M$ of columns in the matrix.
\item [IDIM]({\tt INTEGER}) First dimension parameter of {\tt A}
as declared in the calling program.
\item[K] ({\tt INTEGER}) One-dimensional array of length {\tt N} at
least.
\item [TOTAL] ({\tt REAL}) Variable.
\item [MODE] ({\tt INTEGER}) Must be set either {\tt 1} or {\tt 2}
(see below).
\end{DLtt}
$\mathtt{MODE=1}:$ \\[2mm]
{\tt K(1),K(2),\ldots,K(N)} are assigned integer values which minimize
$$\mathtt{TOTAL = \sum_{I=1}^N A(I,K(I))}.$$
If $\mathtt{M > N}$, the {\tt K(I)} are distinct and are a subset of
the integers $1,2,\ldots,\mathtt{M}$. \\
If $\mathtt{M = N}$, the {\tt K(I)} are a permutation of the integers
$1,2,\ldots,\mathtt{M}$. \\
If $\mathtt{M<N}$, the set of {\tt K(I)} consists of some permutation of
the integers $1,2,\ldots,\mathtt{M}$, interspersed with
$\mathtt{N-M}$ zeros. The permutation and the positions of the zeros are
chosen in such a way as to minimize the above sum with the convention
that $\mathtt{A(I,0)=0}$.
\\[3mm]
$\mathtt{MODE=2}:$ \\[2mm]
{\tt K(1),K(2),\ldots, K(M)} are assigned integer values which minimize
$$ \mathtt{TOTAL = \sum_{J=1}^M A(K(J),J)}.$$
If $\mathtt{M>N}$, $\mathtt{M-N}$ of the {\tt K(J)} are set to zero,
with the convention that $\mathtt{A(0,J)=0}$.
\newpage
\Method
The subprogram is based on the Algol procedure given in Ref. 3.
\Restrict
$\mathtt{2 \leq N,\,M \leq 100}$.
\Notes
Problems requiring maximization instead of minimization can be solved by
reversing the sign of the matrix elements before calling the subprogram.
\Examples
The following example illustrates a possible use of the subprogram.
A workshop has to carry out $N$ jobs, each of
which can be performed on any of $M (>N)$ available machines.
The cost of performing job $I$ on machine $J$ is $A(I,J)$.
It is required to assign jobs to machines in such a way
as to minimize the total cost.
The solution is obtained by calling the subprogram
with $\mathtt{MODE=1}$ and then assigning job {\tt I} to machine
$\mathtt{K(I),\,(I=1,2,\ldots,N)}$.
\Refer
\begin{enumerate}
\item J. Munkres, Algorithms for the assignment and
transportation problems, J. SIAM 5 (1957) 32--38.
\item R. Silver, An algorithm for the assignment problem,
Comm. ACM {\bf 3} (1960) 605--606.
\item R. Silver, Algorithm 27 ASSIGNMENT, Collected Algorithms from CACM
(1960).
\end{enumerate}
$\bullet$
@

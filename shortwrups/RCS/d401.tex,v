head	1.3;
access;
symbols;
locks;


1.3
date	96.05.08.12.48.30;	author abbey;	state Exp;
branches;
next	1.2;

1.2
date	94.12.19.15.06.34;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.35;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@*** empty log message ***
@
text
@%  21 oct 94   ksk
\Version{RDERIV}                          \Routid{D401}
\Keywords{NUMERICAL DIFFERENTIATION}
\Authors {K.S. K\"olbig}                 \Library{MATHLIB}
\Submitter{}                             \Submitted{15.02.1989}
\Language{Fortran}                   \Revised{01.12.1994}
\Cernhead{Numerical Differentiation}
Subroutine subprograms {\tt RDERIV}  and {\tt DDERIV} compute an
approximate numerical value of the derivative $f'(x)$ of a function
$f(x)$ at a specified point $x$.
\par
On computers other than CDC and Cray, only the double-precision version
{\tt DDERIV} is available. On CDC and Cray computers,
only the single-precision version {\tt RDERIV} is available.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names : \Rdef{RDERIV}, \Rdef{DDERIV}\\
Obsolete User Entry Names: \Rdef{DERIV} $\equiv$ {\tt RDERIV} \\
Files  Referenced : {\tt Unit 6} \\
External References: \Rind{MTLMTR}{N002}, \Rind{ABEND}{Z035},
user-supplied {\tt FUNCTION} subprogram
\Usage
For $\mathtt{t=R}$ (type {\tt REAL}), $\mathtt{t=D}$ (type
{\tt DOUBLE PRECISION}),
\begin{verbatim}
    CALL tDERIV(F,X,DELTA,DFDX,RERR)
\end{verbatim}
\begin{DLtt}{123456}
\item[F] (type according to {\tt t}) Name of a user-supplied
{\tt FUNCTION} subprogram, declared {\tt EXTERNAL} in the calling
program. This subprogram must set $\mathtt{F(X)} = f(\mathtt{X})$.
\item[X] (type according to {\tt t}) The specified point $x$ for
which the derivative is to be calculated.
\item[DELTA] (type according to {\tt t}) On entry, {\tt DELTA} must
contain a scaling factor $\delta$, which can usually be set equal to 1.
On exit, it contains the last value of this factor (see Method).
\item[DFDX] (type according to {\tt t}) On exit, {\tt DFDX}
contains an approximation to $f'(\mathtt{X})$.
\item[RERR] (type according to {\tt t}) On exit, {\tt RERR} contains
an estimate of the relative error of {\tt DFDX}.
\end{DLtt}
\Method
The method is based on an extension to numerical differentiation of
Romberg's principle of sequence extrapolation, originally developed for
numerical integration. The subroutine starts by computing the 10 numbers
$$ T_0^{(k)} = [f(x+h)-f(x-h)]/(2h), \quad (k = 0,1,\ldots,9),$$
with
$$\begin{array}{l@@{\qquad}l}
h = \delta*0.0256*2^{-k/2} & (k \ \mbox{\rm even}) \\
h = \delta*0.0192*2^{-(k-1)/2} & (k \ \mbox{\rm odd}),
\end{array}$$
where the scaling factor $\delta$ is initially set to {\tt DELTA}.
This procedure is repeated up to 9 times, with $\delta$ replaced by
$\delta/10$ each time, until the sequence $T_0^{(k)}$ is found to be
monotone. A Romberg-like triangular table
$$ T_m^{(k)} = u_mT_{m-1}^{(k+1)} - w_mT_{m-1}^{(k)}.$$
with appropriate weights $u_m,w_m$ is then computed for $m = 1,2,\ldots,
9; k = 0,1,\ldots,9-m,$ and {\tt DFDX} is set equal to $T_9^{(0)}$.
\Restrict
The function $f(x)$ must be differentiable at $x=\mathtt{X}$ and in a
neighbourhood of {\tt X}. Misleading results will be obtained if this is
not true.
\Errorh
Error {\tt D401.1}:
If the function $f(x)$ is such that, after 9 successive reductions of
$\delta$ by a factor 1/10, the sequence $T_0^{(k)}$ is not monotone,
an error message is written {\tt Unit 6}, unless subroutine
{\tt MTLSET} (N002) has been called. {\tt DFDX} is set equal to zero,
{\tt RERR} is set equal to one in this case.
\Refer
\begin{enumerate}
\item  H. Rutishauser, Ausdehnung des Rombergschen Prinzips,
Numer. Math. {\bf 5} (1963) 48--54.
\end{enumerate}
$\bullet$
@


1.2
log
@New version by KSK
@
text
@d20 1
a20 1
External References: \Rind{MTLMTR} (N002), \Rind{ABEND} (Z035),
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
\Version{DERIV}                          \Routid{D401}
d6 1
a6 1
\Language{Fortran}                   \Revised{15.03.1993}
d8 1
a8 1
Subroutine subprograms {\tt DERIV}  and {\tt DDERIV} compute an
d14 1
a14 1
only the single-precision version {\tt DERIV} is available.
d17 2
a18 1
User Entry   Names : \Rdef{DERIV}, \Rdef{DDERIV}\\
d23 2
a24 1
{\bf Single-precision version:}
d26 1
a26 1
    CALL DERIV(F,X,DELTA,DFDX,RERR)
d29 7
a35 7
\item[F] ({\tt INTEGER}) Name of a user-supplied {\tt FUNCTION}
subprogram, declared {\tt EXTERNAL} in the calling program. This
subprogram must set $\mathtt{F(X)} = f(\mathtt{X})$.
\item[X] ({\tt REAL}) The specified point $x$ for which the derivative
is to be calculated.
\item[DELTA] ({\tt REAL}) On entry, {\tt DELTA} must contain a scaling
factor $\delta$, which can usually be set equal to 1.
d37 4
a40 4
\item[DFDX] ({\tt REAL}) On exit, {\tt DFDX} contains an approximation to
$f'(\mathtt{X})$.
\item[RERR] ({\tt REAL}) On exit, {\tt RERR} contains an estimate of the
relative error of {\tt DFDX}.
a41 6
{\bf Double-precision version:}
\begin{verbatim}
    CALL DDERIV(F,X,DELTA,DFDX,RERR)
\end{verbatim}
where {\tt F}, {\tt X}, {\tt DELTA}, {\tt DFDX} and {\tt RERR}
are of type {\tt DOUBLE PRECISION.}
@

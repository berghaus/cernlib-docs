head	1.3;
access;
symbols;
locks;


1.3
date	94.12.19.15.03.53;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.04.05.12.39.19;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.25;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@New version by KSK
@
text
@% 19 dec 94 ksk
\Version {FTOVAX}                           \Routid{Z267}
\Keywords{FILENAME UNIX CONVERT VAX VMS}
\Author{J. Zoll}                     \Library{KERNLIB, VAX only}
\Submitter{}                                 \Submitted{01.09.1990}
\Language{Fortran}                       \Revised{01.11.1994}
\Cernhead {Convert File-name to and from UNIX Syntax}
These routines convert a file name from {\tt UNIX} form
to {\tt VAX VMS} form, and vice versa.
The correspondance is as follows:
\begin{verbatim}
   VAX:    node::disk:[a.b.c]file.ext;cy
   UNIX:   //node/disk/a/b/c/file.ext;cy
 
   VAX:     [a.b.c]file.ext;cy   and   [.a.b.c]file.ext;cy
   UNIX:   /(a/b/c/file.ext;cy           a/b/c/file.ext;cy
\end{verbatim}
Forms like \qquad {\tt ../file.ext;cy}  \qquad and \qquad
{\tt ~/dir/file.ext;cy} \qquad are also handled. \\
For back-compatibility  \qquad {\tt /=disk} \qquad
is handled as  \qquad {\tt /disk}.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names: \Rdef{FTOVAX}, \Rdef{FFRVAX} \\
Common Blocks: {\tt COMMON /SLATE/ ISTAT,DUMMY(39)}
\Usage
{\bf Convert to VAX form}
\begin{verbatim}
    CALL FTOVAX(CHNAME,NCH)
 
       *CHNAME*  file-name to be converted in situ
          *NCH*  significant length of the name
\end{verbatim}
 
No conversion is done if the file-name does not contain
a character {\tt "/"} on input. \\[3mm]
{\bf Convert to UNIX form}
\begin{verbatim}
    CALL FFRVAX(CHNAME,NCH)
 
       *CHNAME*  file-name to be converted in situ
          *NCH*  significant length of the name
\end{verbatim}
No conversion is done if the file-name does already contain
a character {\tt "/"} on input.
\par
This routine does some tidying up if necessary, thus for example
the troublesome
\begin{center}
{\tt disk:[a][b.c]fn.ext} \qquad becomes the correct \qquad
{\tt /disk/a/b/c/fn.ext}
\end{center}
\par
Both routines return {\tt ISTAT=0} if no conversion was needed,
{\tt ISTAT=1} for successful conversion, \\
and {\tt ISTAT=-1} if a syntax error was detected.
 
Note that both routines update both the file-name and its useful
length {\tt NCH} in situ.
\Examples
\begin{verbatim}
   tex/z267.tex                   [.tex]z267.tex
   ../wyl/kernfor.car             [-.wyl]kernfor.car
   /(julia/kern/wyl/kernvax.car   [julia.kern.wyl]kernvax.car
   /cern_root/pam/kernfor.car     cern_root:[pam]kernfor.car
\end{verbatim}
$\bullet$
@


1.2
log
@latest by Siegfried
@
text
@d1 1
a1 1
% 24 mar 94 ksk
d6 4
a9 6
\Language{Fortran}                       \Revised{01.04.1994}
\Cernhead {Convert file-name to and from UNIX syntax}
 
These routines allow one to specify a file name in UNIX form
and to convert it to {\tt VAX VMS form} before using it
in an {\tt OPEN} statement.
d12 2
a13 2
      VAX:    node::disk:[a.b.c]file.ext;cy
      UNIX:  //node/=disk/a/b/c/file.ext;cy
d15 2
a16 1
      forms like ../file.ext;cy    and    ~/dir/file.ext;cy
d18 4
a21 1
are  also handled.
d24 2
a25 3
User Entry Names:
\Rdef{FTOVAX}, \Rdef{FFRVAX} \\
Common Blocks: {\tt COMMON /SLATE/ISTAT,DUMMY(39)}
d29 1
a29 1
    CALL FTOVAX (CHNAME, NN)
d32 1
a32 1
           *NN*  significant length of the name
d36 1
a36 2
a character {\tt "/"} on input.
 
d39 1
a39 1
    CALL FFRVAX (CHNAME, NN)
d42 1
a42 1
           *NN*  significant length of the name
a43 1
 
d46 8
a53 1
 
d57 3
d64 2
a65 2
   /julia/kern/wyl/kernvax.car    [julia.kern.wyl]kernvax.car
   /=cern_root/pam/kernfor.pam    cern_root:[pam]kernfor.pam
@


1.1
log
@Initial revision
@
text
@d1 1
d6 1
a6 1
\Language{Fortran}                       \Revised{}
d17 1
a17 1
      forms like ../file.ext;cy   are also handled, but not ~/
d19 1
a24 1
 
a25 1
 
d35 1
a35 1
a character "/" on input.
d46 1
a46 1
a character "/" on input.
@

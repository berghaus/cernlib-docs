head	1.2;
access;
symbols;
locks;


1.2
date	96.05.20.15.02.33;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.37;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@new version KSK May 20th
@
text
@\Version{RFT}                            \Routid{D700}
\Keywords{REAL FAST FOURIER TRANSFORM}
\Author{C. Iselin}                       \Library{MATHLIB}
\Submitter{}                              \Submitted{04.09.1972}
\Language{Fortran}                        \Revised{15.01.1977}
\Cernhead{Real Fast Fourier Transform}
Let the discrete Fourier transform be defined by
$$ y_j \ = \
\frac{1}{\sqrt{N}}\sum^{N-1}_{k=0}\exp\left(\frac{2\pi ijk}{N}\right) \
x_k, \qquad (j=0,1,\ldots,N). $$
The subroutines of package {\tt RFT} compute this transform or its
inverse
$$ x_k \ = \
\frac{1}{\sqrt{N}}\sum^{N-1}_{j=0}\exp\left(\frac{-2\pi ijk}{N}\right) \
y_j, \qquad (k=0,1,\ldots,N) $$
for real functions, with the restriction that $N$ is a power of 2.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names: \Rdef{RFT}, \Rdef{RCA}, \Rdef{RPA}, \Rdef{RPS},
\Rdef{RSA}\\
Internal Entry Names: {\tt D700SU}\\
Files Referenced: Printer  \\
{\tt COMMMON} Block Names and Lengths:
{\tt /D700DT/ 6}, {\tt /FWORK/ 321}
\Usage
\begin{DLtt}{1234}
\item[] {\tt CALL RFT(M,X,IX,Y,IY,MODE)} \qquad or
\item[] {\tt CALL RCA(M,X,IX,Y,IY)} \qquad or
\item[] {\tt CALL RPA(M,X,IX,Y,IY)} \qquad or
\item[] {\tt CALL RPS(M,X,IX,Y,IY)} \qquad or
\item[] {\tt CALL RSA(M,X,IX,Y,IY)}
\end{DLtt}
\begin{DLtt}{123456}
\item[M] ({\tt INTEGER}) Number $m$ (such that $n=2^m$) of
input values (full period or half period).
\item[X] ({\tt REAL}) Input array. The input values are taken from
$\mathtt{X}(k\mathtt{*IX}+1)$ for $k=0,1,\ldots,n$.
\item[Y] ({\tt REAL}) Output array. The results are stored in
$\mathtt{Y}(k\mathtt{*IY}+1)$ for $j=0,1,\ldots,n$.
\item [MODE] ({\tt INTEGER}) Selects the mode of operation for {\tt RFT}
as follows:
\end{DLtt}
{\tt MODE = 1:} {\bf Analysis of a  general real function.}
\begin{DLtt}{1234}
\item[] {\tt CALL RFT(M,X,IX,Y,IY,1)} \qquad or
\item[] {\tt CALL RPA(M,X,IX,Y,IY)}
\end{DLtt}
assumes $x_k =\mathtt{X}(k\mathtt{*IX}+1)\,(k=0,1,\ldots,n-1); \
n=2^m=N$ to define a full period of the function to be analysed.
The value $x_n$ is ignored. The results are returned in the following
order:
\begin{DLtt}{1234}
\item[] $y_0=y_n=\mathtt{Y(1)}$
\item[] $y_j=y_{n-j}=\mathtt{Y}(j\mathtt{*IY}+1)+
i\mathtt{Y}((j+n/2)\mathtt{*IY}+1), \quad (j=1,2,\ldots,n/2)$.
\end{DLtt}
The other values in {\tt Y} are not changed.\\
\newpage
{\tt MODE = 4:} {\bf Synthesis of a general real function.}
\begin{DLtt}{1234}
\item[] {\tt CALL RFT(M,X,IX,Y,IY,4)} \qquad or
\item[] {\tt CALL RPS(M,X,IX,Y,IY)}
\end{DLtt}
is exactly the inverse of {\tt MODE=1} as described above. The value
$x_n$ is set equal to $x_0$. \\[3mm]
{\tt MODE=2/5:} {\bf Analysis/Synthesis of a real even function.} \\
For an even function, the transform is identical to its inverse.
\begin{DLtt}{1234}
\item[] {\tt CALL RFT(M,X,IX,Y,IY,2)} \qquad or
\item[] {\tt CALL RFT(M,X,IX,Y,IY,5)} \qquad or
\item[] {\tt CALL RCA(M,X,IX,Y,IY)}
\end{DLtt}
all assume that $x_k=\mathtt{X}(k\mathtt{*IX}+1),\,(k=0,1,\ldots,n), \
n=2^m=N/2$ define a {\it half-period} of the function to be
analysed and that the other half period is generated by {\it even}
continuation. The results returned are the cosine terms
\begin{DLtt}{1234}
\item $y_j=y_{2n-j}=\mathtt{Y}(j\mathtt{*IY}+1), \quad (j=0,1,\ldots,n).$
\end{DLtt}
Note that the full period has $2n=N$ points. \\ [3mm]
{\tt MODE = 3/6:} {\bf Analysis/Synthesis of a real odd function.} \\
For an odd function the transform is also identical to its inverse.
All assume that
$x_k=\mathtt{X}(k\mathtt{*IX}+1),\,(k=1,2,\ldots,n)$;
\begin{DLtt}{1234}
\item[] {\tt CALL RFT(M,X,IX,Y,IY,3)} \qquad or
\item[] {\tt CALL RFT(M,X,IX,Y,IY,6)} \qquad or
\item[] {\tt CALL RSA(M,X,IX,Y,IY)}
\end{DLtt}
$n=2^m=N/2$ define a  {\it half-period} of the function to be
analysed and that the other half period is generated by {\it odd}
continuation. The results returned are the sine terms
\begin{DLtt}{1234}
\item $y_j=-y_{2n-j}=\mathtt{Y}(j\mathtt{*IY}+1), \quad
(j=1,2,\ldots,n)$.
\end{DLtt}
Note that $y_0=y_n=0$ and that the values returned are
$\mathtt{Y(1)=X(1)}$ and $\mathtt{Y}(n\mathtt{*IY}+1)=
\mathtt{X}(n\mathtt{*IX}+1)$.
Again the full period has $2n=N$ points.
\Restrict
These subroutines work for any input such that the {\it full period}
has at least four points, i.e., $m\geq 2$ for general
functions, or $m\geq 1$ for odd or even functions. If the number of
data points exceeds 129 ($ m\leq 7$), the calling program must provide
sufficient working storage by using the statement
\begin{verbatim}
    COMMON /FWORK/ W(nnn)
\end{verbatim}
where $\mathtt{nnn}=5*2^m$.
\Refer
\begin{enumerate}
\item C. Iselin, An approach to fast Fourier transform, CERN 71-19.
\end{enumerate}
 A copy of Ref. 1 is available.
\\ $\bullet$
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
\frac{1}{\sqrt{N}}\sum^{N-1}_{k=0}\exp(\frac{2\pi ijk}{N}) \
d14 1
a14 1
\frac{1}{\sqrt{N}}\sum^{N-1}_{j=0}\exp(\frac{-2\pi ijk}{N}) \
@

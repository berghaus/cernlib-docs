head	1.3;
access;
symbols;
locks;


1.3
date	96.05.14.08.07.29;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	96.05.08.12.40.22;	author abbey;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.32;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@Optimized version (KSK)
@
text
@\Version{RGMLT}                                \Routid{D110}
\Keywords{MULTIPLE NUMERICAL INTEGRATION GAUSS CUBATURE}
\Author{K.S. K\"olbig}                          \Library{MATHLIB}
\Submitter{}                                     \Submitted{01.12.1988}
\Language{Fortran}                        \Revised{15.03.1993}
\Cernhead {Gaussian Quadrature for Multiple Integrals}
Function subprogram packages {\tt RGMLT} and {\tt DGMLT}
compute an approximate value of an n-dimensional integral of the form
\\[4mm]
\hspace*{35mm} $ I_n \ = \ \displaystyle
\int_{a_n}^{b_n} dx_n \phi_n(x_n)
\displaystyle \int_{a_{n-1}(x_n)}^{b_{n-1}(x_n)}
dx_{n-1} \phi_{n-1}(x_{n-1},x_n) \cdots$ \\[4mm]
\hspace*{55mm} $\phi_2(x_2,\ldots,x_n)
\displaystyle \int_{a_1(x_2,\ldots,x_n)}^{b_1(x_2,\ldots,x_n)}
dx_1 \phi_1(x_1,\ldots,x_n),$ \\[4mm]
where $1 \leq n \leq 6$.
\par
Each subprogram integrates over only one variable. The integral $I_n$
is computed by means of a set of $n$ nested calls to these subprograms.
\par
On computers other than CDC or Cray, only
the double-precision version {\tt DGMLT} is available.
On CDC and  Cray computers, only the single-precision version
{\tt RGMLT} is available.
\Structure
{\tt FUNCTION} subprograms\\
User Entry Names: \parbox[t]{.6\textwidth}{%
\Rdef{RGMLT1}, \Rdef{RGMLT2}, \Rdef{RGMLT3}, \Rdef{RGMLT4},
\Rdef{RGMLT5}, \Rdef{RGMLT6},  \\
\Rdef{DGMLT1}, \Rdef{DGMLT2}, \Rdef{DGMLT3}, \Rdef{DGMLT4},
\Rdef{DGMLT5}, \Rdef{DGMLT6}} \\[1mm]
Files Referenced: {\tt Unit 6} \\
External References: \Rind{MTLMTR}{N002}, \Rind{ABEND}{Z035},
user-supplied {\tt SUBROUTINE} subprograms
\Usage
\begin{enumerate}
\item Let {\tt k} be one of the integers $\mathtt{1,2,\ldots,6}$.
Then, in any arithmetic expression,
\begin{DLtt}{12345678}
\item[]{\tt RGMLTk(FSUBk,Ak,Bk,NIk,NGk,X)} \qquad or
\item[]{\tt DGMLTk(FSUBk,Ak,Bk,NIk,NGk,X)}
\end{DLtt}
has the approximate value of the integral with respect to $x_k$ of
the function specified below. \\[2mm]
{\tt RGMLTk} is of type {\tt REAL}, {\tt DGMLTk} is of type
{\tt DOUBLE PRECISION}, and the arguments {\tt Ak}, {\tt Bk}, and
{\tt X} have the same type as the function name. {\tt NIk} and
{\tt NGk} are of type {\tt INTEGER}.
\begin{DLtt}{12345678}
\item [FSUBk] Name of a user-supplied {\tt SUBROUTINE}
subprogram, declared {\tt EXTERNAL} in the calling program.
\item [Ak,Bk] End points of the integration interval for variable $x_k$.
\item [NIk] Number of equal subintervals into which the interval
{\tt (Ak,Bk)} is divided.
\item[NGk] Number of Gaussian quadrature points to be used in each of
the {\tt NIk} subintervals. (If {\tt NGk} has any value other than
{\tt 6} or {\tt 8}, the value {\tt 6} is assumed).
\item[X] 0ne-dimensional array of dimension $\geq n$.
\end{DLtt}
\newpage
\item The subroutine {\tt FSUBk} should be of the form
\begin{DLtt}{12345678}
\item{\tt SUBROUTINE FSUBk (M,Uk,Fk,X)}
\end{DLtt}
where {\tt Uk}, {\tt Fk} and {\tt X} are of type {\tt REAL} for
{\tt RGMLTk} and of type {\tt DOUBLE PRECISION} for {\tt DGMLTk}, and
where {\tt M} is of type {\tt INTEGER}.
\begin{DLtt}{1234}
\item[M] An integer $({\tt \leq 64})$, whose value is set by
{\tt RGMLTk (DGMLTk)}.
\item[Uk] One-dimensional array with declared dimension {\tt (*)},
whose contents is set by {\tt RGMLTk (DGMLTk)}.
\item[Fk] One-dimensional array with declared dimension {\tt (*)},
whose contents must be set by {\tt FSUBk} as described below.
\item[X] One-dimensional array which must be the same as the array
{\tt X} appearing as an actual argument in all calls to {\tt RGMLT1},
{\tt RGMLT2},$\ldots$ ({\tt DGMLT1}, {\tt DGMLT2}, $\ldots$).
\end{DLtt}
\end{enumerate}
The subprogram {\tt RGMLTk} ({\tt DGMLTk}) which calls subroutine
{\tt FSUBk}
sets the value of {\tt M} and places in array {\tt Uk} a set of {\tt M}
values of the variable $x_k$. Then, if $f_k(x_k,\ldots,x_n)$ denotes
the function which is to be integrated with respect to $x_k$, it is the
job of subroutine {\tt FSUBk} to set {\tt X(k)} to the appropriate
value of $x_k$, to compute $f_k$ for each of these values of $x_k$
(taking the remaining variables $x_{k+1},\ldots,x_n$ from
{\tt X(k+1)},$\ldots$,{\tt X(n)} respectively) and place the results in
array {\tt Fk}. (See {\bf Examples}).
\Method
Integration with respect to each variable is performed by applying the
6- or 8-point Gaussian quadrature formula to each of the equal
sub-intervals.
\Notes
\begin{enumerate}
\item The time needed to compute an $n$-dimensional integral by means
of these subprograms is approximately
$$\mathtt{(NG1*NG2*\cdots*NGn)*(NI1*NI2*\cdots*NIn)}.$$
This should be kept in mind when choosing the values of {\tt NIk}.
\item The accuracy of a particular calculation can be estimated by
repeating the integration with different values of {\tt NGk} (e.g.,
8 instead of 6) or by changing {\tt NIk}, the latter usually being less
economical.
\end{enumerate}
\Errorh
Error {\tt D110.1}: $\mathtt{NIk \le 0}$. A message is written on
{\tt Unit 6}, unless subroutine {\tt MTLSET} (N002) has been called.
Execution is halted on a {\tt STOP} instruction.
\Examples
To calculate (in type {\tt REAL}) the integral
$$ Q_2 \ = \
\displaystyle \int_0^1 dx_2 \sqrt{x_2} e^{x_2}
\displaystyle \int_0^{\sqrt{x_2}} dx_1 x_1 \sqrt{x_1^2+x_2} \ = \
\frac{1}{3} (2\sqrt{2}-1)(e-2)$$
using 6-point Gaussian quadrature over each of $n_2 = 3, n_1 = 4$
subdivisions of the corresponding interval.
In the main program, write for instance
\newpage
\begin{verbatim}
    ...
    EXTERNAL FSUB2
    DIMENSION X(2)
    Q2=RGMLT2(FSUB2,0.,1.,3,6,X)
    ...
\end{verbatim}
For the {\tt SUBROUTINE} subprograms {\tt FSUB2}, {\tt FSUB1} write
for instance
\begin{verbatim}
    SUBROUTINE FSUB2(M,U2,F2,X)
    EXTERNAL FSUB1
    DIMENSION U2(*),F2(*),X(2)
    DO 1 L = 1,M
    X(2)=U2(L)
    R=SQRT(X(2))
  1 F2(L)=R*EXP(X(2))*RGMLT1(FSUB1,0.,R,4,6,X)
    RETURN
    END
 
    SUBROUTINE FSUB1(M,U1,F1,X)
    DIMENSION U1(*),F1(*),X(2)
    DO 1 L = 1,M
    X(1)=U1(L)
  1 F1(L)=X(1)*SQRT(X(1)**2+X(2))
    RETURN
    END
\end{verbatim}
$\bullet$
@


1.2
log
@*** empty log message ***
@
text
@d35 1
a35 1
User supplied {\tt SUBROUTINE} subprograms
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
External References: \Rind{MTLMTR} (N002), \Rind{ABEND} (Z035),
@

head	1.2;
access;
symbols;
locks; strict;


1.2
date	95.02.28.08.32.25;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.54;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@ Version of Feb. 28th
@
text
@% 20 feb 1995  ksk
\Version {CVTVAX}                             \Routid{M214}
\Keywords{CONVERT TRANSLATION TRANSLATE VAX IBM}
\Author{F. Carminati}                      \Library{KERNLIB, IBM only}
\Submitter{}                               \Submitted{18.11.1986}
\Language{Fortran}          %\Revised{}
\Cernhead {Conversion To and From VAX Number Formats on IBM}
\begin{center}
\fbox{\parbox{120mm}{
\begin{center}
{\bf OBSOLETE}
\end{center}
Please note that this routine has been obsoleted in CNL 219. Users are
advised not to use it any longer and to replace it in older programs.
No maintenance for it will take place and it will eventually disappear.
\\[3mm]
Suggested replacement: {\tt IE3CONV} (M220) }}
\end{center}
{\tt CVTVAX} converts floating point numbers between host machine and
VAX formats. Both Short (32-bit) and Long (64-bit) VAX formats are
catered for.
\Structure
{\tt SUBROUTINE} package \\
User Entry Names:
\begin{tabular}[t]{l*{3}{@@{\hspace{4pt}}l}}
\Rdef{SVXDX}, & \Rdef{SVXSX}, & \Rdef{SXDVX}, & \Rdef{SXSVX}, \\
\Rdef{DVXDX}, & \Rdef{DVXSX}, & \Rdef{DXDVX}, & \Rdef{DXSVX}
\end{tabular}
\Usage
\begin{verbatim}
    CALL SVXDX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt DOUBLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} in the calling program and containing on input VAX 32-bit
F\underline{ }floating point numbers, stored in the elements of
{\tt DWORDS}, right-adjusted with zero-fill. After the call the first
{\tt NWORDS} elements will contain converted normalised
{\tt DOUBLE PRECISION} floating point numbers in the host machine format.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of VAX numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL DXSVX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt DOUBLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} in the calling program and containing on input in the first
{\tt NWORDS} elements {\tt DOUBLE PRECISION} floating point
numbers in the host machine format. After the call the first {\tt NWORDS}
elements will contain converted  VAX 32-bit F\underline{ }floating
point numbers, in the elements of {\tt DWORDS} right-adjusted with
zero-fill.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of host numbers to be converted. Unchanged on output. A value
$\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL DVXSX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt SINGLE PRECISION}) Array dimensioned to at least
{\tt 2*NWORDS} in the calling program and containing on input VAX 64-bit
D\underline{ }floating point numbers, stored in 2 consecutive pairs of
elements of {\tt DWORD}. After the call the first {\tt NWORDS} elements
will contain converted normalised {\tt SINGLE PRECISION} floating point
numbers in the host machine format.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of VAX numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\newpage
\begin{verbatim}
    CALL SXDVX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS]  ({\tt SINGLE PRECISION}) Array dimensioned to at
least {\tt 2*NWORDS} in the calling program and containing on input in
the first {\tt NWORDS} elements {\tt SINGLE PRECISION} floating point
numbers in the host machine format. After the call the first
{\tt 2*NWORDS} elements will contain converted VAX 64-bit
D\underline{ }floating point numbers, 2 consecutive pairs of elements of
{\tt DWORDS}.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of host numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL DVXDX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS]  ({\tt DOUBLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} in the calling program and containing on input VAX 64-bits
D\underline{ }foating point numbers, stored in the elements of
{\tt DWORDS}. After the call the first {\tt NWORDS} elements will contain
converted normalised {\tt DOUBLE PRECISION} floating point numbers in the
host machine format.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of VAX numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL DXDVX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt DOUBLE PRECISION}) Array dimensioned to at
least {\tt NWORDS} in the calling program and containing on input in the
first {\tt NWORDS}  elements {\tt DOUBLE PRECISION} floating point
numbers in the host machine format. After the call the first {\tt NWORDS}
elements will contain converted VAX 64-bits D\underline{ }floating point
numbers, one in each element of {\tt DWORDS}.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of host numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL SVXSX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt SINGLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} in the calling program and containing on input VAX 32-bit
F\underline{ }floating point numbers, stored in the consecutive elements
of {\tt DWORDS}. After the call the first {\tt NWORDS} elements will
contain converted normalised {\tt SINGLE PRECISION} floating point
numbers in the host machine format.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of VAX numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\begin{verbatim}
    CALL SXSVX(DWORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item[DWORDS] ({\tt SINGLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} in the calling program and containing on input in the first
{\tt NWORDS} elements {\tt SINGLE PRECISION} floating point
numbers in the host machine format. After the call the first {\tt NWORDS}
elements will contain converted VAX 32-bit F\underline{ }floating point
numbers in the consecutive elements of {\tt DWORDS}.
\item[NWORDS] ({\tt INTEGER}) Constant or variable containing on input
the number of host numbers to be converted. Unchanged on output. A
value $\mathtt{< 1}$ causes a do-nothing return.
\end{DLtt}
\newpage
\Accuracy
Precision in the mantissa will be lost by rounding off the least
significant bits when converting from a source format to a target
format with fewer bits in the mantissa. Note that the mantissa
lengths are 23 bits for VAX short, 55 bits for VAX long, 24 bits for
IBM short, 56 bits for IBM long. The precisions obtained in some
tests are:
\begin {center} \begin{tabular}{l@@{\qquad}l}
{\bf Routine}     &  {\bf Rounding}              \\[2mm]
{\tt SVXSX} & $\Delta=0.62 \times 10^{-7}\pm 0.14 \times 10^{-6}$\\[1mm]
            & $0\leq \Delta \leq 0.92 \times 10^{-6}$\\[2mm]
{\tt SVXDX} & $\Delta =0.11 \times 10^{-19}\pm 0.44 \times 10^{-18}$
\\[1mm]
            &  $ 0\leq \Delta\leq 0.17  \times 10^{-16}$\\[2mm]
{\tt DVXSX} & $ 0.97 \times 10^{-8}\pm 0.30  \times 10^{-7}$\\[1mm]
            & $ 0\leq\Delta\leq 0.51 \times 10^{-6}$\\[2mm]
{\tt DVXDX} & $\Delta=0.14  \times 10^{-16}\pm 0.33  \times 10^{-16}$
\\[1mm]
            & $ 0\leq \Delta\leq 0.22  \times 10^{-16}$\\[2mm]
{\tt SXSVX} & (exact conversion) \\[2mm]
{\tt SXDVX} & $\Delta=0.83 \times 10^{-9}\pm 0.90 \times 10^{-9}$\\[1mm]
            & $0\leq \Delta\leq 0.48X10^{-8}$\\[2mm]
{\tt DXSVX} & (exact conversion) \\[2mm]
{\tt DXDVX} & (exact conversion) \\
\end{tabular} \end{center}
Exponent ranges also differ between machines. The rule
followed on conversion is that when a source machine value is out of
range for the target machine the value set is the limiting value for
the target machine, i.e. the largest or smallest possible floating
point number on that machine. The sign of the source
number is preserved during these out-of-range conversions. The
exponent ranges are $10^{-78}$ to $10^{76}$ for IBM short and long and
$10^{-39}$ to $10^{38}$ for VAX short and long floating point numbers.
Hence all IBM numbers greater than $10^{38}$ will be set to $10^{38}$
when converted to VAX {\tt DOUBLE} and {\tt SINGLE PRECISION} while any
IBM numbers smaller than $10^{-39}$ would be set to $10^{-39}$ when
converted .
to VAX format.
\Notes
In the calling sequences above {\tt S} stands for short
representation, i.e. 32 bits on both IBM and VAX,
while {\tt D} stands for long representation, i.e. 64
bits on both IBM and VAX. The default lengths
on IBM and VAX are short. The long forms must be explicitly
requested by a {\tt DOUBLE PRECISION} statement. {\tt X} stands for the
host machine and the position of {\tt VX} and {\tt X} implies the
direction of processing. Hence {\tt DVXSX} implies convert long VAX
format (64-bits) to short host machine format.
\\ $\bullet$
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
% 20 may 1992  mg
d8 11
@

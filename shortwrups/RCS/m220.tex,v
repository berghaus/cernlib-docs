head	1.3;
access;
symbols;
locks;


1.3
date	95.02.28.08.32.31;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.04.05.12.35.41;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.55;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@ Version of Feb. 28th
@
text
@% 20 feb 1995 ksk
\Version{IE3CONV}                      \Routid{M220}
\Keywords{CONVERSION FORMAT IEEE NUMBER TRANSLATE}
\Author{J. Zoll, M. Jonker, M. Roethlisberger} \Library{KERNLIB}
\Submitter{}                                 \Submitted{30.11.1986}
\Language{Fortran or Assembler}               \Revised{01.04.1994}
\Cernhead {Conversion To and From IEEE Number Format}
These routines convert vectors of single- or double- precision numbers
between the internal and the standard {\tt IEEE} representations.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names: \Rdef{IE3FOS}, \Rdef{IE3FOD}, \Rdef{IE3TOS},
\Rdef{IE3TOD}
\Usage
{\tt IEEE} {\bf for/to internal, single precision:}
\begin{verbatim}
    CALL IE3FOS(VSINGL,VIEEES,NV,JCODE)
    CALL IE3TOS(VIEEES,VSINGL,NV,JCODE)
\end{verbatim}
\begin{DLtt}{12345678}
\item [VSINGL] Vector of {\tt NV} words with floating point numbers
in internal representation.
\item [VIEEES] Vector of {\tt NV} words with the same floating point
number in {\tt IEEE} representation.
\item [NV] Size of the vectors.
\item [JCODE] Error code returned, normally zero,otherwise
{\tt VSINGL(JCODE)} is the last number which had conversion problems,
such as overflow and not-a-number.
\end{DLtt}
{\tt IEEE} {\bf for/to internal, double precision:}
\begin{verbatim}
    CALL IE3FOD(VDOUBL,VIEEED,NV,JCODE)
    CALL IE3TOD(VIEEED,VDOUBL,NV,JCODE)
\end{verbatim}
\begin{DLtt}{12345678}
\item [VDOUBL] Vector of {\tt 2*NV} words with {\tt NV} double-precision
floating point numbers in internal representation.
\item [VIEED] Vector of {\tt 2*NV} words with the same floating point
numbers in {\tt IEEE} representation.
\item [NV] Size of the vectors.
\item [JCODE] Error code returned, normally zero, otherwise
{\tt VDOUBL(JCODE)} is the last number which had conversion problems,
assuming the declaration {\tt DOUBLE PRECISION VDOUBL(NV)}.
\end{DLtt}
\Notes
The {\tt IEEE} format provides for representing
exceptions, both for single and for double precision: \\[2mm]
\begin{tabular}{@@{\hspace*{20mm}}lll}
a) Not-a-number:      &   single  & {\tt 7F8nnnnn},    \\
                      &   double  & {\tt 7FFnnnnn...} . \\
b) Positive infinity: &   single  & {\tt 7F800000},    \\
                      &   double  & {\tt 7FF00000...} . \\
c) Negative infinity: &   single  & {\tt FF800000},    \\
                      &   double  & {\tt FFF00000...} .
\end{tabular} \\[2mm]
\newpage
Depending on the machine, mapping is done either naturally
or artificially: \\[2mm]
\begin{tabular}{@@{\hspace*{20mm}}lll}
CDC    & \multicolumn{2}{l} {Indefinite maps to not-a-number,
overflow to infinity.} \\
CRAY   & \multicolumn{2}{l} {Overflow maps to infinity,
not-a-number gives overflow.} \\
IBM    & Positive infinity  & maps to internal {\tt 7FFFFFF0}, \\
       & not-a-number       & maps to internal {\tt 7FFFFFFF}. \\
NORD   & Positive infinity  & maps to internal {\tt 177...70}, \\
       & not-a-number       & maps to internal {\tt 177...77}. \\
VAX    & Positive infinity  & maps to internal {\tt 00007F81}, \\
       & not-a-number       & maps to internal {\tt 00008001}.
\end{tabular} \\[2mm]
Underflow gives exact zero in all cases.
\par
On the VAX: if a file has been imported from a big-endian machine,
byte-inversion (see {\tt VXINV} (M434)) has to be done before calling
{\tt IE3TOx}; similarly byte-inversion has to be done after calling
{\tt IE3FOx} and before exporting the file.
\par
On machines where the internal representation is {\tt IEEE} (Apollo,
Sun, Silicon Graphics, etc) these routines are simple copy operations.
\\ $\bullet$
@


1.2
log
@latest by Siegfried
@
text
@d1 1
a1 1
% 24 mar 1994 ksk
d75 2
a76 2
{\tt IO3TOx}; similarly byte-inversion has to be done after calling
{\tt IO3FOx} and before exporting the file.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
% 20 may 1992  mg
d6 1
a6 1
\Language{Fortran or Assembler}               \Revised{08.03.1989}
d72 5
@

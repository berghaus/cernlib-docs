head	1.2;
access;
symbols;
locks; strict;


1.2
date	94.11.01.09.19.24;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.56;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.2
log
@obsoleted KSK
@
text
@% 28.09.94 ksk
\Version {CVTIB}                 \Routid{M231}
\Keywords{CONVERT TRANSLATE FLOAT NUMBER HOST IBM}
\Author{F. Carminati}            \Library{KERNLIB, VAX only}
\Submitter{}                     \Submitted{13.02.1985}
\Language{Assembler}             \Revised{14.08.1985}
\Cernhead {Convert Floating-Point Numbers Between Host Machine and IBM
Formats}
\begin{center}
\fbox{\parbox{120mm}{
\begin{center}
{\bf OBSOLETE}
\end{center}
Please note that this routine has been obsoleted in CNL 217. Users are
advised not to use it any longer and to replace it in older programs.
No maintenance for it will take place and it will eventually disappear.
\\[3mm]
Suggested replacement: see CNL 217}}
\end{center}
The {\tt CVTIB} package converts floating point numbers between host
machine and IBM formats.
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry  Names:  \Rdef{SIBSX}, \Rdef{SXSIB}, \Rdef{DIBDX},
\Rdef {DXDIB}
\Usage
\begin{verbatim}
    CALL SIBSX(WORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item [WORDS] ({\tt SINGLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} 32-bit words in the calling program, containing IBM short
floating point numbers to be converted into VAX F\underline{ }floating
point format. The conversion is done in place; on output {\tt WORDS}
contains the converted numbers. The numbers are converted into standard
VAX F\underline{ }floating format if they are in the appropriate range.
If the number to be converted is bigger than the maximum
VAX F\underline{ }floating (ca. $10^{38}$) it will be set to this value
while if it is smaller than the minimum VAX F\underline{ }floating
(ca. $10^{-38}$) it will be set to the latter value.
Zero is correctly converted, however.
\item [NWORDS] ({\tt INTEGER}) Number of 32-bit words to be converted.
$\mathtt{NWORDS \leq 0}$ results in do-nothing.
\end{DLtt}
\begin{verbatim}
    CALL SXSIB(WORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item [WORDS] ({\tt SINGLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} 32-bit words in the calling program, containing
VAX F\underline{ }floating
point numbers to be converted into IBM short floating point format. The
conversion is done in place; on output {\tt WORDS} contains the converted
numbers. The numbers are converted into standard normalized IBM long
floating format. Where necessary the VAX mantissa is truncated to
normalize the number according to IBM conventions. Zero is correctly
converted.
\item [NWORDS] ({\tt INTEGER}) Number of 32-bit words to be converted.
$\mathtt{NWORDS \leq 0}$ results in do-nothing.
\end{DLtt}
\begin{verbatim}
    CALL DIBDX(WORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item [WORDS] ({\tt DOUBLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} 64-bit words in the calling program, containing IBM
double-precision floating point numbers to be converted into VAX
D\underline{ }floating point format numbers. The conversion is done in
place; on output {\tt WORDS} contains the converted numbers. The numbers
are converted into standard VAX D\underline{ }floating format if they
are in the appropriate range. If the number to be converted is bigger
than the maximum VAX D\underline{ }floating (ca. $10^{38}$) it
will be set to this value while if it is smaller than the minimum VAX
D\underline{ }floating (ca. $10^{-38}$) it will be set to the latter
value. Zero is correctly converted, however.
\item [NWORDS] ({\tt INTEGER}) Number of 64-bit words to be converted.
$\mathtt{NWORDS \leq 0}$ results in do-nothing.
\end{DLtt}
\begin{verbatim}
    CALL DXDIB(WORDS,NWORDS)
\end{verbatim}
\begin{DLtt}{12345678}
\item [WORDS] ({\tt DOUBLE PRECISION}) Array dimensioned to at least
{\tt NWORDS} 64-bit words in the calling program and containing VAX
D\underline{ }floating point numbers to be converted into IBM
double-precision floating point format. The conversion is done in place;
on output {\tt WORDS} contains the converted numbers. The numbers are
converted into standard normalized IBM extended floating format.
Where necessary the VAX mantissa is truncated to normalize the number
according to IBM conventions. Zero is correctly converted, however.
\item [NWORDS] ({\tt INTEGER}) Number of 64-bit words to be converted.
$\mathtt{NWORDS \leq 0}$ results in do-nothing.
\end{DLtt}
\Notes
In the routine names above {\tt X} stands for the host
machine (VAX only) and {\tt IB} stands for the foreign machine (IBM).
{\tt S} stands for short (i.e. 32 bits) floating point while the
{\tt D} stands for long (i.e. 64 bits) floating point.
The sequence of the letters gives the direction of the conversion.
\\ $\bullet$
@


1.1
log
@Initial revision
@
text
@d1 1
d9 11
@

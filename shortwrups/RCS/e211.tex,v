head	1.3;
access;
symbols;
locks;


1.3
date	94.12.19.15.03.45;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.04.05.12.33.10;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.46.40;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.3
log
@New version by KSK
@
text
@% 18 oct 1994  ksk
\Version{RCSPLN}              \Routid{E211}
\Keywords{CUBIC SPLINE INTEGRAL APPROXIMATION FIT}
\Author{K.S. K\"olbig, H. Lipps}      \Library{MATHLIB}
\Submitter{K.S. K\"olbig}   \Submitted{01.05.1990}
\Language{Fortran}                    %\Revised{}
\Cernhead{Cubic Splines and their Integrals}
Subroutines {\tt RCSPLN} and {\tt DCSPLN}
compute a (vector-valued) cubic spline function $F(x)$ which
interpolates between a given set of points. Entries {\tt RCSPNT} and
{\tt DCSPNT} compute the first and second integral over $F(x)$.
\par
On computers other than CDC or Cray, only the double-precision versions
{\tt DCSPLN} and {\tt DCSPNT} are available.
On CDC and Cray computers, only the single-precision versions
{\tt RCSPLN} and {\tt RCSPNT} are available.
\par
Given an interval $[a,b]$, a subdivision of this interval into $n \ge 2$
subintervals
$$a = x_{0} < x_{1} < ... < x_{n-1} < x_{n} = b,$$
and $n+1$ function values $Y_{k} = \{y_{k1},\ldots,y_{km}\}$ on the $n+1$
abscissae (called `knots') $x_k$ ($k=0,1,\ldots,n$), {\tt RCSPLN} and
{\tt DCSPLN} compute a function $F(x)$ of class $C^2$, defined on
$[a,b]$, which assumes the given value $Y_k$ at the knot $x_k$ (i.e.
$F(x_k) = Y_k$), and which, when restricted to the $i$th sub-interval
$[x_{i-1}, x_{i}]$ is identical with a set of $m$ polynomials
$\{p_{i1},...,p_{im}\}$,
each of degree at most $3$. Any function $F(x)$ which satisfies the above
two conditions is called a `cubic spline' through the $n + 1$ points
$(x_k, Y_k)$. To define the spline function $F(x)$ uniquely the
subroutines impose an additional boundary condition, specified by their
{\tt MODE} parameter:
\begin{DL}{MM}
\item[] {\tt MODE = 0:} $F''(x_0) = F''(x_n)=0$ (the so-called
{\it natural spline}).
\item[] {\tt MODE = 1:} $F''(x_0) = F''(x_1)$ and
$F''(x_{n-1}) = F''(x_n)$.
\end{DL}
\Structure
{\tt SUBROUTINE} subprograms \\
User Entry Names: \Rdef{RCSPLN}, \Rdef{RCSPNT}, \Rdef{DCSPLN},
\Rdef{DCSPNT} \\
Files referenced: {\tt Unit 6}
\Usage
For $\mathtt{t=R}$ (type {\tt REAL}), $\mathtt{t=D}$ (type
{\tt DOUBLE PRECISION}), \\[3mm]
\begin{tabular}{l@@{\qquad}l}
Spline:&{\tt CALL tCSPLN(N,X,M,Y,NDIM,MODE,A,B,C,D)}\\
Integrals:&{\tt CALL tCSPNT(N,X,M,Y,NDIM,MODE,A,B,C,D)}
\end{tabular}
\begin{DLtt}{1234567}
\item[N]({\tt INTEGER}) Number $n$ of subintervals $[x_{i-1}, x_{i}]$.
Must contain a value of at least 2 on entry.  Unchanged on return.
\item[X] (type according to {\tt t}) One-dimensional array of
dimension {\tt (0:d)} of at least $n + 1$ elements.
On entry, {\tt X(k)} must contain the abscissa $x_{k}$,
$(k=0,1,\ldots,n)$. Unchanged on return.
\item[M] ({\tt INTEGER}) Number $m$ of components of the vector-valued
spline function $F(x)$.
Must contain a value of at least 1 on entry. Unchanged on return.
\item[Y] (type according to {\tt t}) Two-dimensional array of
dimension {\tt (0:NDIM,d)} where {\tt d} is a value not less than $m$.
On entry, {\tt Y(k,j)} must contain the value $y_{kj}$ of the
$j$th component of the vector $Y_k$, $(k=0,1,\ldots,n$; $j=1,\ldots,m)$.
Unchanged on return.
\item[NDIM] ({\tt INTEGER}) Upper bound of the first dimension of arrays
{\tt A}, {\tt B}, {\tt C}, {\tt D} and {\tt Y}.
Must contain a value of at least $n$ on entry. Unchanged on return.
\item[MODE]
({\tt INTEGER}) Type of boundary condition (see description above).
Must contain the value 0 or 1 on entry. Unchanged on return.
\item[A,B,C,D] (type according to {\tt t}) Two-dimensional arrays of
dimension {\tt(NDIM,d)}, where $\mathtt{d}\ge m$.\\
On return from {\tt RCSPLN}, {\tt A(i,j)}, {\tt B(i,j)}, {\tt C(i,j)}
and {\tt D(i,j)} will contain
the four coefficients $a_{ij}, b_{ij}, c_{ij},$ and $d_{ij}$ of the
polynomial
$$p_{ij} = a_{ij} + b_{ij} (x - x_{i-1}) + c_{ij}(x - x_{i-1})^{2}
+ d_{ij}(x - x_{i-1})^{3}$$
that determines the $j$th component $f_{j}(x)$ of the spline in the $i$th
subinterval $[x_{i-1}, x_{i}]$, $i=l,\ldots,n$, $j=1,\ldots,m$.\\
On return from {\tt RCSPNT}, \\ [3mm]
{\tt A(i,j) = } $\displaystyle
\int^{x_i}_a f_{j} (t)\, dt$ \quad and \quad
{\tt B(i,j) = }$\displaystyle
\int^{x_i}_a\!\int^{x}_a f_{j} (t)\,dt\,dx$, \\[3mm]
with $i=1,\dots,n;$ $j=1,\ldots,m$.\\
Arrays {\tt C} and {\tt D} have been used as working space.
\end{DLtt}
\Restrict
$\mathtt{N \ge 2}$, $\mathtt{M \ge 1}$, $\mathtt{NDIM \ge N}$,
$\mathtt{MODE = 0}$ or {\tt 1}.
\Errorh
Error {\tt E211.1}: $\mathtt{N<2}$. \\
Error {\tt E211.2}: $\mathtt{M<1}$. \\
Error {\tt E211.3}: $\mathtt{NDIM<N}$. \\
Error {\tt E211.4}: $\mathtt{MODE \ne 0}$ and $\mathtt{MODE \ne 1}$. \\
A message is written on {\tt Unit 6}, unless subroutine {\tt MTLSET}
(N002) has been called.
\\ $\bullet$
@


1.2
log
@latest by Siegfried
@
text
@d1 1
a1 1
% 20 may 1992  mg
d45 2
a46 1
{\bf Single precision versions:} \\[3mm]
d48 2
a49 2
Spline:&{\tt CALL RCSPLN(N,X,M,Y,NDIM,MODE,A,B,C,D)}\\
Integrals:&{\tt CALL RCSPNT(N,X,M,Y,NDIM,MODE,A,B,C,D)}
d54 2
a55 3
\item[X]({\tt REAL})
One-dimensional array of dimension {\tt (0:d)} of at least $n + 1$
elements.
d58 1
a58 2
\item[M]
({\tt INTEGER}) Number $m$ of components of the vector-valued
d61 2
a62 3
\item[Y]
({\tt REAL}) Two-dimensional array of dimension {\tt (0:NDIM,d)} where
{\tt d} is a value not less than $m$.
d66 1
a66 2
\item[NDIM]
({\tt INTEGER}) Upper bound of the first dimension of arrays
d72 2
a73 3
\item[A,B,C,D]
({\tt REAL}) Two-dimensional arrays of dimension {\tt(NDIM,d)},
where $\mathtt{d}\ge m$.\\
a89 7
{\bf Double precision versions:} \\[3mm]
\begin{tabular}{l@@{\qquad}l}
Spline:&{\tt CALL DCSPLN(N,X,M,Y,NDIM,MODE,A,B,C,D)}\\
Integrals:&{\tt CALL DCSPNT(N,X,M,Y,NDIM,MODE,A,B,C,D)}
\end{tabular} \\[3mm]
where {\tt X}, {\tt Y}, {\tt A}, {\tt B}, {\tt C} and {\tt D} are of
type {\tt DOUBLE PRECISION}.
d91 1
a91 1
$\mathtt{N \geq 2}$, $\mathtt{M \geq 1}$, $\mathtt{NDIM \geq N}$,
@


1.1
log
@Initial revision
@
text
@d105 6
a110 2
If any of the above conditions is not satisfied, an error message is
printed and control is returned to the calling program.
@

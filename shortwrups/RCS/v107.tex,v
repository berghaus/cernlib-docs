head	1.4;
access;
symbols;
locks;


1.4
date	96.05.14.08.07.29;	author goossens;	state Exp;
branches;
next	1.3;

1.3
date	95.02.28.08.33.05;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.04.05.12.37.25;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.04.02.16.47.12;	author goossens;	state Exp;
branches;
next	;


desc
@Initial entry
@


1.4
log
@Optimized version (KSK)
@
text
@%   20 feb 1995    ksk
\Version {RNDM2}                       \Routid{V107}
\Keywords{DISTRIBUTION GENERATOR IBM RANDOM NUMBER UNIFORM}
\Author{McGill University}         \Library{MATHLIB}
\Submitter{T. Lindel\"of}             \Submitted{15.09.1978}
\Language{CDC: Fortran, IBM: Assembler}  %\Revised{}
\Cernhead {IBM Uniform Random Number Generator}
\begin{center}
\fbox{\parbox{120mm}{\OBSOLETE
Please note that this routine has been obsoleted in CNL 215. Users are
advised not to use it any longer and to replace it in older programs.
No maintenance for it will take place and it will eventually disappear.
\\[3mm]
Suggested replacement: \\
{\tt RANMAR} (V113) or {\tt RANECU} (V114) or {\tt RANLUX} (V115) }}
\end{center}
{\tt RNDM2} is a combined multiplicative congruential generator and
a shift register generator with nearly optimal lattice structure in
2, 3, 4 and 5 dimensions, with a period of about $5 \times 10^{18}$
numbers, designed especially for the IBM where the 32-bit word length
makes the usual generators ({\tt RNDM}, {\tt RN32}) not good enough for
some calculations.
A Fortran version of {\tt RNDM2} exists on CDC for compatibility
reasons, but the CDC version is not recommended for production
use. It only functions as an interface to {\tt RNDM} (V104).
\Structure
{\tt FUNCTION} subprogram \\
User Entry Names: \Rdef{RNDM2}, \Rdef{IRNDM2}, \Rdef{RD2IN},
\Rdef{RD2OUT}
\Usage
\begin{verbatim}
    U = RNDM2(DUMMY)
\end{verbatim}
assigns to {\tt U} a random normalized floating point value in the
interval (0,1), with uniform distribution.
\begin{verbatim}
    K = IRNDM2(DUMMY)
\end{verbatim}
assigns to {\tt K} a random integer value in the interval $(0,2^{31})$,
with uniform distribution.
\begin{verbatim}
    CALL RD2OUT(IS,JS)
\end{verbatim}
sets {\tt IS} and {\tt JS} to the current values of two internal
registers used in the congruential generator and the shift register
generator respectively.
\begin{verbatim}
    CALL RD2IN(IS,JS)
\end{verbatim}
resets the two above-mentioned registers to {\tt IS} and {\tt JS}
respectively. The entire future sequence of generated numbers is a
function of {\tt IS} and {\tt JS}.
\par
In order to avoid loss of randomness it is advisable to use for
{\tt IS} and {\tt JS} only values obtained through an earlier call to
{\tt RD2OUT}. Either parameter may be set to zero in order to reduce the
generator to a pure shift register generator ($\mathtt{IS=0}$) or to a
pure congruential generator ($\mathtt{JS=0}$).
$\mathtt{IS=JS=0}$ produces a sequence of only zeros.
\Refer
\begin{enumerate}
\item G. Marsaglia, K. Ananthanarayanan and N. Paul,
Comm. ACM {\bf l5} (1972) 873.
\end{enumerate}
$\bullet$
@


1.3
log
@ Version of Feb. 28th
@
text
@d9 1
a9 4
\fbox{\parbox{120mm}{
\begin{center}
{\bf OBSOLETE}
\end{center}
@


1.2
log
@latest by Siegfried
@
text
@d1 1
d4 1
a4 1
\Author{McGill University}             \Library{MATHLIB, IBM and VAX only}
@


1.1
log
@Initial revision
@
text
@d7 12
@

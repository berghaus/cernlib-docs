(part.1) <An Introduction to the ZEBRA system>
(chapter.1) <ZEBRA - An overview>
(section.1.1) <Why ZEBRA?>
(section.1.2) <Logical Data Structures>
(subsection.1.2.1) <The bank>
(subsection.1.2.2) <The linear structure>
(subsection.1.2.3) <The general data structure>
(subsection.1.2.4) <Reverse links>
(subsection.1.2.5) <Reference links>
(section.1.3) <Physical Storage>
(subsection.1.3.1) <Divisions>
(subsection.1.3.2) <Link areas>
(subsection.1.3.3) <Working space>
(section.1.4) <Dropping banks and garbage collection>
(section.1.5) <Wiping divisions>
(section.1.6) <Input/Output>
(section.1.7) <Debugging problems>
(subsection.1.7.1) <The debugging and documentation package>
(subsection.1.7.2) <The user communication array {\tt  IQUEST}>
(section.1.8) <Some conventions>
(section.1.9) <Summary>
(part.2) <MZ -- Memory Management>
(chapter.2) <Memory management>
(section.2.1) <ZEBRA bank format>
(section.2.2) <MZEBRA - initialize the ZEBRA system>
(section.2.3) <MZLOGL - change the MZ logging level>
(section.2.4) <MZSTOR - initialize a dynamic store>
(section.2.5) <MZDIV - create a new division>
(section.2.6) <MZLINK / MZLINT - initialize a link area>
(section.2.7) <MZWORK - allocate working space>
(section.2.8) <MZLIFT / MZBOOK - bank creation>
(section.2.9) <MZPUSH - alter the size of a bank>
(section.2.10) <MZREPL - connect replacement banks>
(section.2.11) <MZDROP - drop a bank and its dependents>
(section.2.12) <MZWIPE - reset complete divisions to empty>
(section.2.13) <MZGARB - garbage collection requested by the user>
(section.2.14) <MZXREF - set cross-reference between divisions>
(section.2.15) <MZIXCO - create compound division index>
(section.2.16) <MZFORM {\it  et al.} - handle the I/O characteristic>
(chapter.3) <Data structure utilities>
(section.3.1) <MZFLAG {\it  et al.} - logical walk through a data-structure>
(section.3.2) <LZHEAD - find the first bank of a linear structure>
(section.3.3) <ZSHUNT - change structural relation>
(section.3.4) <ZSORT - utility to sort the banks of a linear structure>
(section.3.5) <ZTOPSY {\it  et al.} - utilities to operate on linear structures>
(section.3.6) <LZFIND {\it  et al.} - utilities to interrogate linear structures>
(section.3.7) <LZFID {\it  et al.} - utilities to find a bank by sequential scan>
(chapter.4) <Global operational aids>
(section.4.1) <ZPHASE - set program phase>
(section.4.2) <ZEND - normal program end>
(section.4.3) <ZABEND - abnormal program end through ZFATAL>
(section.4.4) <ZTELL - recover trouble through ZTELL-ZTELUS>
(section.4.5) <ZVERIF - check logical integrity of Zebra stores>
(section.4.6) <ZVAUTO - running with automatic verification>
(chapter.5) <MZ routines for special applications>
(section.5.1) <MZCOPY - copy a data-structure>
(section.5.2) <MZNEED - calculate free space in division>
(section.5.3) <MZINQS - inquiry to get the parameters of a store>
(section.5.4) <MZINQD - inquiry to get the parameters of a division>
(section.5.5) <MZDRED - reduce the space reserved to a division>
(chapter.6) <Internal technical details for ZEBRA MZ>
(section.6.1) <Master Tables>
(section.6.2) <Relocation Tables>
(section.6.3) <MZFORM data structure>
(part.3) <FZ -- Sequential Input/Output>
(chapter.7) <Principles>
(chapter.8) <User specifications for the FZ package>
(section.8.1) <Representation of a data-structure>
(section.8.2) <Events, Runs, and Files>
(section.8.3) <Outline of usage for medium Disk or Tape>
(section.8.4) <FZFILE - initialize a ZEBRA file>
(section.8.5) <FZLOGL - change the logging level of a file>
(section.8.6) <FZMEMO - connect user memory area for medium Memory>
(section.8.7) <FZHOOK - connect user routine for medium Channel>
(section.8.8) <FZLIMI - limit the size of an output file>
(section.8.9) <FZODAT - storing and recovering the direct access table>
(section.8.10) <FZRUN - write a RUN record>
(section.8.11) <FZOUT - write one data-structure>
(section.8.12) <FZIN - read one data-structure>
(section.8.13) <FZIN - read one data-structure by segments>
(section.8.14) <FZINXT - reset the read point on a direct access file>
(section.8.15) <FZCOPY - copy one data-structure from input to output>
(section.8.16) <FZENDO - output file termination>
(section.8.17) <FZENDI - input file termination>
(section.8.18) <Usage for random access>
(section.8.19) <Usage for medium Memory>
(section.8.20) <Usage for medium Channel>
(section.8.21) <User marking of data-structures for \Rind {FZOUT}>
(section.8.22) <Suppress loading of unused parts of FZ>
(section.8.23) <FZ installation options>
(chapter.9) <Usage of FZ files in exchange mode>
(section.9.1) <Exchange file format representation>
(section.9.2) <Tape file, Fortran>
(subsubsection.9.2.0.1) <CONVEX>
(section.9.3) <Tape file, C Library>
(section.9.4) <Disk file, Fortran sequential>
(section.9.5) <Disk file, Fortran direct-access>
(section.9.6) <Disk file, C Library>
(subsection.9.6.1) <Output>
(chapter.10) <Format specifications>
(section.10.1) <Native mode>
(subsection.10.1.1) <Native mode, logical records: start-of-run and end-of-run>
(subsection.10.1.2) <Native mode, logical records: the pilot continuation records>
(section.10.2) <Exchange mode>
(section.10.3) <Exchange Data format>
(section.10.4) <Exchange File Format>
(section.10.5) <Example for coding dedicated on-line output>
(chapter.11) <Technical details>
(section.11.1) <FZINFO - obtain status information>
(section.11.2) <FZ control bank description>
(section.11.3) <ALFA exchange format>
(section.11.4) <Coding Zebra user I/O>
(section.11.5) <Byte inversion on the VAX>
(part.4) <RZ -- Randon-Access Input/Output>
(chapter.12) <Direct access input-output>
(section.12.1) <Main goals>
(subsection.12.1.1) <General>
(subsection.12.1.2) <Pathnames>
(subsection.12.1.3) <Keys and Cycles>
(section.12.2) <Practical examples of usage of the RZ package>
(subsection.12.2.1) <HBOOK>
(subsection.12.2.2) <CMZ>
(subsection.12.2.3) <FATMEN>
(chapter.13) <Description of user callable RZ routines>
(section.13.1) <Open a direct access file>
(section.13.2) <Create a new RZ file>
(section.13.3) <Access an existing RZ file>
(section.13.4) <Set the logging level>
(section.13.5) <Close a direct access file>
(section.13.6) <Save modified directories>
(section.13.7) <Operations on RZ directories>
(subsection.13.7.1) <Define the naming directory>
(subsection.13.7.2) <Define the current working directory>
(subsection.13.7.3) <Creation of a directory>
(subsection.13.7.4) <Get the key definitions for the current working directory>
(subsection.13.7.5) <Lock and unlock a directory>
(subsection.13.7.6) <Set the space quota for the current working directory>
(subsection.13.7.7) <Scan RZ directory structure>
(subsection.13.7.8) <List the contents of a directory>
(subsection.13.7.9) <Retrieve the contents of a directory>
(subsection.13.7.10) <Set the password of the current working directory>
(section.13.8) <Write a bank or data structure>
(section.13.9) <Output an array>
(section.13.10) <Read a bank or data structure>
(section.13.11) <Input an array from an RZ file>
(section.13.12) <Operations on keys and cycles>
(subsection.13.12.1) <Purge old cycles>
(subsection.13.12.2) <Delete a subtree from the current working directory>
(subsection.13.12.3) <Delete a key from the current working directory>
(subsection.13.12.4) <Rename a key in the current working directory>
(subsection.13.12.5) <Retrieve the keys associated to the current working directory>
(section.13.13) <Copy a data structure from one directory to the \texttt  {CWD}>
(section.13.14) <Copy information from a directory from/to a sequential file>
(section.13.15) <Retrieve statistics about a given RZ directory>
(section.13.16) <Overview of RZ calling Sequences>
(part.5) <DZ -- Debugging Tools>
(chapter.14) <DZ: The debug and dump package>
(section.14.1) <Display routines>
(subsection.14.1.1) <Display of a bank or a data structure>
(subsection.14.1.2) <Print the format of a bank>
(subsection.14.1.3) <Display of a ZEBRA store>
(subsection.14.1.4) <Display of a link area>
(subsection.14.1.5) <Survey of a ZEBRA data structure>
(section.14.2) <Map and checks on the division level>
(subsection.14.2.1) <Snap of one or more divisions>
(subsubsection.14.2.1.1) <Store information>
(subsubsection.14.2.1.2) <Bank information>
(subsection.14.2.2) <Verify one or more ZEBRA divisions>
(section.14.3) <Monitor changes inside a ZEBRA store or bank.>
(subsection.14.3.1) <Calculate the checksum of a vector in a ZEBRA store>
(subsection.14.3.2) <Monitor changes in a ZEBRA bank>
(chapter.15) <Example of using ZEBRA and the debug routines>
(part.6) <DZDOC -- Bank Documentation Tools>
(chapter.16) <DZDOC -- Bank Documentation and Display>
(section.16.1) <Format of the bank descriptor cards>
(subsection.16.1.1) <General information about the bank>
(subsection.16.1.2) <Link part of the bank>
(subsection.16.1.3) <Status word of bank>
(subsection.16.1.4) <Data words of the bank>
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  A choice with wildcard characters}}\mathsurround \z@ $\relax >
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  An integer choice value}}\mathsurround \z@ $\relax >
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  A bit mask}}\mathsurround \z@ $\relax >
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  Description of any bit portion}}\mathsurround \z@ $\relax >
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  ZEBRA exchange formatted Holleriths, dates, binaries}}\mathsurround \z@ $\relax >
(paragraph.16.1.4.0.0) <\relax $\@@underline {\hbox {\bf  Pointers, labels and repetition counts}}\mathsurround \z@ $\relax >
(subsection.16.1.5) <Repetitions>
(subsection.16.1.6) <Banks with identical descriptions>
(subsection.16.1.7) <Terminating the bank description>
(subsection.16.1.8) <An example of a bank description>
(section.16.2) <Generation a template for the bank descriptor file>
(section.16.3) <{\tt  DZEDIT}, a program to maintain documentation>
(subsection.16.3.1) <{\tt  DZEDIT} command overview>
(subsection.16.3.2) <Preparing Fortran code>
(section.16.4) <The interactive bank display tool>
(subsection.16.4.1) <{\tt  DZDISP} -- Display bank trees in an interactive session>
(subsection.16.4.2) <{\tt  DZDDWD} -- display contents of data words with documentation>
(subsection.16.4.3) <Examples of {\tt  DZDISP} output>
(subsection.16.4.4) <{\tt  DZDDIV} -- Display the layout of stores and divisions>
(subsection.16.4.5) <{\tt  DZDIRZ} display RZ directory trees in an interactive session>
(section.16.5) <DZDOC with the Motif interface of KUIP>
(subsection.16.5.1) <The Zebra-Browser>
(subsection.16.5.2) <Embedded DZDOC>
(subsection.16.5.3) <Interactive Ntuple filling>
(section.16.6) <Examples>
(subsection.16.6.1) <Example session with {\tt  DZEDIT}>
(subsection.16.6.2) <Example of code calling {\tt  DZDDIV}>
(subsection.16.6.3) <Description of the banks used in previous examples>
(subsection.16.6.4) <Example using pointers, repetition counts etc.>
(subsection.16.6.5) <Example where titles are contained in the bank itself>
(part.7) <TZ -- Title Handling>
(chapter.17) <The Title Package---Principles>
(section.17.1) <General information>
(chapter.18) <Using the TZ package>
(section.18.1) <TZFIND - access to title banks>
(section.18.2) <TZINIT - creating title banks from a text file>
(section.18.3) <TZUSER - editing title banks during input>
(section.18.4) <TZSHUN - insert banks into a title structure>
(section.18.5) <TZINQ - inquire about the title d/s>
(chapter.19) <Formats for the text input to TZINIT>
(section.19.1) <Out-line>
(section.19.2) <Control-lines>
(section.19.3) <Title header lines>
(section.19.4) <Free-field input>
(subsubsection.19.4.0.1) <Other control items>
(section.19.5) <Fortran formatted input>
(part.8) <JZ91 -- Processor support>
(chapter.20) <The JZ91 Package---Principles>
(section.20.1) <Purpose>
(section.20.2) <JZ91 Services>
(chapter.21) <Basic calling sequences>
(section.21.1) <JZIN/JZOUT - simplest use>
(section.21.2) <JZIN - processor entry, general use>
(section.21.3) <JZINIT - initialize the JZ91 package>
(section.21.4) <JZTELL - count processor conditions>
(section.21.5) <JZZERO - zero the down call bank>
(section.21.6) <JZROOT - reset processor level to root>
(section.21.7) <JZEND - print processor usage statistics>
(section.21.8) <Titles JZAN - processor constants>
(section.21.9) <Titles JZFL - processor flags>
(chapter.22) <Extra features>
(section.22.1) <JZIN - extra features>
(section.22.2) <JZINIT - extra features>
(section.22.3) <JZSETF - set processor flag by program>
(section.22.4) <JZLOG - processor logging>
(section.22.5) <JZWIND - unwind the processor stack>
(section.22.6) <JZTRAC - print processor trace-back>
(section.22.7) <Receiving the working space>
(section.22.8) <Note on processor timing>
(section.22.9) <Off-line initialization of a processor>
(chapter.23) <Technical information>
(section.23.1) <JZ91 - header bank>
(section.23.2) <JZSV - bank of support variables>
(part.9) <Error Diagnostics>
(chapter.24) <Error Diagnostics>
(section.24.1) <General information>
(section.24.2) <Diagnostics for FZFILE>
(section.24.3) <Diagnostics for FZDIA: FZIN - FZCOPY>
(section.24.4) <Diagnostics for FZITRX + FZOTRX>
(section.24.5) <Diagnostics for FZLOC>
(section.24.6) <Diagnostics for FZOUT>
(section.24.7) <Diagnostics for LZFID - LZSCAN>
(section.24.8) <Diagnostics for MZCHNB>
(section.24.9) <Diagnostics for MZCOPY>
(section.24.10) <Diagnostics for MZDIV>
(section.24.11) <Diagnostics for MZDROP>
(section.24.12) <Diagnostics for MZFLAG - MZMARK - MZVOLM>
(section.24.13) <Diagnostics for MZGARB - MZGAR1>
(section.24.14) <Diagnostics for MZIOCH - MZFORM>
(section.24.15) <Diagnostics for MZIXCO>
(section.24.16) <Diagnostics for MZLIFT - MZBOOK>
(section.24.17) <Diagnostics for MZLINK - MZLINT>
(section.24.18) <Diagnostics for MZPUSH>
(section.24.19) <Diagnostics for MZRELB - MZRELL>
(section.24.20) <Diagnostics for MZREPL>
(section.24.21) <Diagnostics for MZSDIV>
(section.24.22) <Diagnostics for MZSTOR>
(section.24.23) <Diagnostics for MZTABC>
(section.24.24) <Diagnostics for MZWORK>
(section.24.25) <Diagnostics for MZXREF>
(section.24.26) <Diagnostics for ZSHUNT>
(section.24.27) <Diagnostics for ZTELL>
(section.24.28) <Diagnostics for ZVERIF>
(chapter.1) <System specific details>
(section.1.1) <VM/CMS systems>
(section.1.2) <VAX/VMS systems>
(subsection.1.2.1) <NFS access>
(section.1.3) <MVS systems>
(section.1.4) <Automatic record length determination>
(chapter.2) <Technical details of the ZEBRA RZ system>
(section.2.1) <RZ I/O>
(section.2.2) <RZ link area>
(section.2.3) <Structure of the RZ control bank>
(chapter.3) <Summary of KERNLIB routines>

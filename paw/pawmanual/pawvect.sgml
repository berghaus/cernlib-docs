<?.*****************************************************************>
<?.* PAW   User's Guide - Chapter Vectors                          *>
<?.*  Last Mod.    9 Nov 1989  19.05   mg                          *>
<?.*****************************************************************>
<H1 ID=H1PVECT>Vectors
<I1>vector
<I1>SIGMA
<I1>COMIS
<P>
Vectors are named arrays of numerical data, memory resident,
which can be created during a session,
loaded from HBOOK objects, typed in by hand, read from disk
files,
operated upon using the full functionality of SIGMA or COMIS.
Vectors can be used to
produce graphics output, and, if necessary, stored away
on disk files for further usage.
Vectors provide a very convenient mechanism to transport
numerical information between different PAW objects, and
to manipulate mathematically their content.
At the end of an interactive session, they are
lost, unless previously saved onto disk files.
<P>
Vectors can have up to 3 dimensions (in fact they are 'arrays',
called 'vectors' for historical reasons).
They can be handled in PAW either interactively,
by using <XPH>VECTOR/... </XPH> commands,
or by means of KUIP routines which return the addresses of a
given vector.
<P>
Simple arithmetic operations can be applied to vectors.
In addition, as SIGMA<BIBREF REFID=SIGMA> is part of PAW,
powerful array manipulation operations are available,
through the <XPH>SIGMA</XPH>,
<XPH>$SIGMA</XPH>
and <XPH>APPLication SIGMA</XPH> commands (see <HDREF REFID=H2SIGMA>).
<P>
An 'invisible' vector named '<XPH>?</XPH>', mono-dimensional and
of length 100,
is always present. It is used for communication between arrays in
the user code (for instance in a COMIS<BIBREF REFID=COMIS> routine)
and KUIP vectors, being equivalenced with the real array VECTOR(100)
in the labelled common block <XPH>/KCWORK/</XPH>.
<H2 SUBJECT='Vector creation and filling'>Vector creation and filling
<P>
<I1 CIX1='fill vector'>vector fill
<I1 CIX1='create vector'>vector create
A vector is <HP2>created</HP2> either by the <HP2>PAW command</HP2>
<XPH>VECTOR/CREATE</XPH>,
by the <HP2>SIGMA function</HP2> <XPH>ARRAY</XPH>.
or by the <HP2>COMIS statement</HP2> <XPH>VECTOR</XPH>.
<H3>Examples:
<XMP>
<HP2>VECTOR/CREATE  X(100)</HP2>      will create a 100-components vector, values = 0.
<HP2>SIGMA X=ARRAY(100,1#100)</HP2>   will create a 100-components vector and assign
                           to each element the values 1,2,...100
<HP2>VECTOR X(100)</HP2>              in a COMIS routine creates a 100-components vector
                           and initialises each element to zero
</XMP>
<P>Once the vector is created, it can be manipulated
using the following PAW commands:
<DL TSIZE=24>
<DT>VECTOR/INPUT vlist
<DD>Input from the terminal values into the vector elements specified by the list vlist.
<DT>VECTOR/READ vlist
<DD>Values can be <XPH>read in</XPH> from a file
into the vector elements specified by the list vlist.
<DT>VECTOR/COPY v1 v2
<DD>Values in v1 are copied into v2.
<DT>VECTOR/WRITE vlist
<DD>Values in the vector elements specified by the
list vlist can be <XPH>saved</XPH> on a file.
<DT>VECTOR/PRINT vlist
<DD>Values of the vector elements specified in vlist will be
<XPH>printed</XPH> on the terminal.
<DT>VECTOR/LIST
<DD>A <HP2>list</HP2> of existing vectors and their
<HP2>characteristics</HP2> is printed on the terminal.
<DT>VECTOR/DELETE
<DD>Allows global or selective deletion of vectors.
</DL>
<?.CC 20>
<H2 SUBJECT='Vector addressing'>Vector addressing
<I1>addressing of vectors
Indexing of vectors is possible
<FN CALLOUT='*'>Note that the indexing permitted in PAW
can be considered as a superset
of that permitted by FORTRAN.
This feature cannot be used from within SIGMA.</FN>.
Examples are:
<XMP>
<HP2>Vec</HP2>            for all elements
<HP2>Vec(13)</HP2>        for element 13
<HP2>Vec(12:)</HP2>       for elements 12 up to the last
<HP2>Vec(:10)</HP2>       for elements 1 to 10
<HP2>Vec(5:8)</HP2>       for elements 5 to 8
</XMP>
Sub-elements of the two-dimensional vector <HP2>Vec(3,100)</HP2>
(3 columns by 100 rows) may be addressed by:
<XMP>
<HP2>Vec(2,5:8)</HP2>     for elements 5 to 8 in column 2
<HP2>Vec(2:3,5:8)</HP2>   for elements 5 to 8 columns 2 to 3
<HP2>Vec(2,5)</HP2>       for element 5 in column 2
<HP2>Vec(:,3)</HP2>       for all elements in row 3
<HP2>Vec(2)</HP2>         for all elements in the 2-nd column (SPECIAL CASE)
</XMP>
<H2 SUBJECT='Vector arithmetic operations'>Vector arithmetic operations
<I1>operation on vectors
<P>A number of basic vector arithmetic operations is available:
<DL TSIZE=28>
<DT>VBIAS v1 bias v2
<DD><XPH>v2(I) = bias + v1(I)</XPH>
<DT>VSCALE v1 scale v2
<DD><XPH>v2(I) = scale * v1(I)</XPH>
<DT>VADD v1 v2 v3
<DD><XPH>v3(I) = v1(I) + v2(I)</XPH>
<DT>VMULTIPLY v1 v2 v3
<DD><XPH>v3(I) = v1(I) * v2(I)</XPH>
<DT>VSUBTRACT v1 v2 v3
<DD><XPH>v3(I) = v1(I) - v2(I)</XPH>
<DT>VDIVIDE v1 v2 v3
<DD><XPH>v3(I) = v1(I) / v2(I), if v2(I)&lt;&gt;0</XPH>
</DL>
<P>In all operations only the minimum vector length is considered,
i.e. an operation between a vector A of dimension 10 and a vector B
of dimension 5 will involve the first 5 elements for both vectors.
If the destination vector does not exist,
it is created with the same length as specified in the source vector.
<?.CC 10>
<H2 SUBJECT='Vector arithmetic operations using SIGMA'>Vector arithmetic operations using SIGMA.
<I1>SIGMA
A more complete and convenient mechanism for the mathematical
manipulation of entire vectors is provided by SIGMA.
SIGMA-generated arrays are stored as
PAW vectors and therefore are accessible
to PAW commands, and PAW vectors are accessible to SIGMA.
The facilities available via SIGMA are described in the next chapter.
<?.CC 10>
<H2 SUBJECT='Using KUIP vectors in a COMIS routine'>Using KUIP vectors in a COMIS routine
<I1>COMIS
<I1>KUIP
<P>
The declaration <XPH><HP2>VECTOR vector_name</HP2></XPH>
may be used inside a COMIS routine to address a KUIP vector.
If the vector does not exist, it is created with the specifications
provided by the declared dimension.
<?.CC 10>
<H2 SUBJECT='Usage of vectors with other PAW objects'>Usage of vectors with other PAW objects
<P>
Vectors can be used to transport
numerical information between different PAW objects, and
to manipulate mathematically their content.
<DL TSIZE=28>
<DT>VECTOR/HFILL VNAME ID
<DD>Each vector element of VNAME is used to fill the existing histogram ID.
<DT>GET_VECTOR/CONTENT
<DD>Provides an interface between vectors and histograms.
<DT>PUT_VECTOR/CONTENT
<DD>Provides an interface between histograms and vectors.
</DL>
<?.CC 25>
<H2 SUBJECT='Graphical output of vectors'>Graphical output of vectors
<DL TSIZE=28>
<DT>VECTOR/DRAW VNAME
<DD>Interprets the content of the vector VNAME as a histogram contents and
draw a <XPH>graph</XPH>.
<DT>VECTOR/PLOT VNAME
<DD>Vector elements are considered as individual values
to be entered into a histogram and a graph is produced.
If <XPH>VNAME</XPH> is the name of a vector, then each vector element of
<XPH>VNAME</XPH> is
used to fill a histogram which is automatically booked with 100 channels
and plotted.
If <XPH>VNAME</XPH> has the form <XPH>VNAME1%VNAME2</XPH>
then a scatter-plot of vector <XPH>VNAME1</XPH>
versus <XPH>VNAME2</XPH> is plotted.
</DL>
<P>See <FIGREF REFID=TUTEX4> in the tutorial section for an
explanation of the difference between <XPH>vector/draw</XPH>
and <XPH>vector/plot</XPH>.
<P>A number of HIGZ<BIBREF REFID=HIGZ> macroprimitives are available
in PAW.
Those directly related to
the graphical output of vectors are:
<DL TSIZE=28>
<I1>GRAPH
<DT>GRAPH  N X Y
<DD>Draw a curve through a set of points defined by arrays X and Y.
<I1>HIST
<DT>HIST  N X Y
<DD>Draw an histogram defined by arrays X and Y.
<I1>PIE
<DT>PIE X0 Y0 RAD N VAL
<DD>Draw a pie chart, of N slices, with size of slices given in VAL,
of a radius RAD, centered at X0, Y0.
</DL>
<H2 SUBJECT='Fitting the contents of a vector'>Fitting the contents of a vector
<I1>fit
<P>
A user defined (and parameter dependent) function
can be fitted to the points defined by the two vectors <XPH><HP2>X</HP2></XPH>
and <XPH><HP2>Y</HP2></XPH> and the vector of associated errors <XPH><HP2>EY</HP2></XPH>.
The general syntax of the command to fit vectors is:
<?.SK>
<HP2>VECTOR/FIT  x y ey func &lsqb; chopt np par step pmin pmax errpar &rsqb;</hp2>
For more information the reader is referred to the reference part of
the present manual.

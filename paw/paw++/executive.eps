%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0.0 0.0 548.00 520
%%Creator:
%%Title:
%%EndComments
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                    Date: 02.02.93 *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a Lempel-Ziv Welch (LZW) encoded color image.     *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/string_table 7000 array def
%***********************************************************************
/NewCode                 % Read next code from file                    *
%***********************************************************************
{
  { currentfile read pop
    dup dup 42 ge exch 123 lt and {exit} {pop} ifelse
  } loop
  42 sub 81 mul
  currentfile read pop 42 sub add
  /new_code exch def
} bind def
%***********************************************************************
/DecodeCode              % Decode color packet for new_code            *
%***********************************************************************
{
  NewCode
  new_code number_colors eq {
    /table_size number_colors 1 add def
    NewCode
  }{
    /K new_code table_size lt { new_code } { old_code } ifelse def
    /K_character string_table K get 0 cnt getinterval def
    new_string 0 string_table old_code get putinterval
    new_string L cnt sub K_character putinterval
    string_table table_size new_string L string copy put
    /table_size table_size 1 add def
  } ifelse
  /old_code new_code def
  string_table new_code get
  dup length cnt add /L exch def
  /new_string L string def
} bind def
%***********************************************************************
/DisplayImage            % Display a LZW-encoded color image           *
%***********************************************************************
{
  /buffer 72 string def
  gsave
  currentfile buffer readline pop
  token { /degrees exch def pop } { } ifelse
  degrees rotate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y translate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y scale
  currentfile buffer readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile buffer readline pop
  token { /number_colors exch def pop } { } ifelse
  /table_size number_colors def
  systemdict /colorimage known {
    0 1 table_size 1 sub {
      string_table exch
      currentfile 3 string readhexstring pop put
    } for
    /cnt 3 def
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodeCode } false 3 colorimage
  }{
    /color 3 string def
    /byte  1 string def
    0 1 table_size 1 sub {
      string_table exch
      byte 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put
      byte 1 string copy put
    } for
    /cnt 1 def
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodeCode } image
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
0.00
0.0 50.0 
548.00 419.06
629 481
256
000000 ffffff 00ffff 9f0028 870022 d18598 460012 ffffff 53559e 474887
b0b1d3 28294c ffffff e1e3bc bfc1a0 f2f3e3 7e7f69 000000 f0b550 cc9a44
f8dfb2 7f602a ffffff 645fa2 55518a b8b5d4 312e50 ffffff b53560 9a2d51
dda2b6 57192e ffffff 7f7f9b 6c6c84 c5c5d2 3f3f4e ffffff 700070 5f005f
ba85ba 320032 ffffff e1e3bc afafaf 7d7d7d 4b4b4b 969696 646464 c8c8c8
e1e1e1 323232 ff00ff ffff00 ff0000 0000ff 00ff00 71725e cccccc 999999
7f7f7f f9f9f9 f3f3f3 ededed e7e7e7 dbdbdb d4d4d4 cecece c2c2c2 bcbcbc
b6b6b6 b0b0b0 aaaaaa a4a4a4 9e9e9e 989898 929292 8c8c8c 868686 808080
797979 737373 6d6d6d 676767 616161 5b5b5b 555555 4f4f4f 494949 434343
3d3d3d 373737 313131 2b2b2b 242424 1e1e1e 181818 121212 0c0c0c 060606
0000cc 0013cc 0027cc 003acc 004ecc 0061cc 0075cc 0088cc 009bcc 00afcc
00c2cc 00ccc2 00ccaf 00cc9b 00cc88 00cc75 00cc61 00cc4e 00cc3a 00cc27
00cc13 00cc00 13cc00 27cc00 3acc00 4ecc00 61cc00 75cc00 88cc00 9bcc00
afcc00 c2cc00 ccc200 ccaf00 cc9b00 cc8800 cc7500 cc6100 cc4e00 cc3a00
cc2700 cc1300 d9dcc7 f0af3a bc2458 7875b8 00004d 6666ff 9999ff cd950c
cd1076 4f94cd 008b00 2290ff 258dff 298aff 2c86ff 3083ff 3380ff 367cff
3a79ff 3d75ff 4172ff 446fff 476bff 4b68ff 4e64ff 5261ff 555eff 585aff
5c57ff 5f53ff 6350ff 664dff 6949ff 6d46ff 7042ff 743fff 773cff 7a38ff
7e35ff 8131ff 852eff 882bff 8b27ff 8f24ff 9220ff 961dff 991aff 9c16ff
a013ff a30fff a70cff aa09ff ad05ff b102ff b4fdff b8faff bbf7ff bef3ff
c2f0ff c5ecff c9e9ff cce6ff a6d9a6 f2f2f2 cccc00 cccc99 ffcccc fafafa
f5f5f5 f0f0f0 ebebeb e5e5e5 e0e0e0 d6d6d6 d1d1d1 c7c7c7 bdbdbd b8b8b8
b2b2b2 adadad a8a8a8 a3a3a3 949494 8f8f8f 8a8a8a 757575 707070 6b6b6b
666666 5c5c5c 575757 525252 4d4d4d 474747 424242 383838 333333 2e2e2e
292929 1f1f1f 1a1a1a 141414 0f0f0f 0a0a0a 050505 0000cc 0010cc 0021cc
0031cc 0041cc 0052cc 0062cc 0072cc 0083cc
-7*/-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y
-M*0-Z-]-^-_-`-a-b-c-d-e-f-g-h-V-\-[-8*--n-o-p-q-r*--\-s-v-w-x-y-z.*.+.,
.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?-o-u.2*0-k.3.B.@.H.I.J.K.L.M.N.O.P
.Q.R.S.N.G.0.D-m-t.D.[.\.].^*/.^.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t
.u.v.w.x.y.z/*.z.`.m-n.X*///-i/3/4/5/6/7/8/9/:/;/<-P//.E-t/1...V.T/E/F/G
/H/I/J/K/L/M.9/D.*/P-z.B/0/2.//R/N/Y/Z/[/\/]/^/_/N/X-x/b-w/T/@/d-v/h/`/k
/l/m/n/o/p/]/j-r/s-q/f.Y/u-p/y/q0+.=*10.0/*1.P000/.K0..206-n080901*-0:.*
0>0,0A/I0*/V-n-B.A/B/U/A/W/B0B0N.I0>0@.J0R.>0:0T.+0V0<0;0[.,0W0O0_.M0D0K
0F/c0H/?/x0M.,0b0`0l0?0Z0=0o050q.?0^..0Y-o0u-x0y0m1+.<0b.G0i/t0f.Z0h0L1,
16.30@08000\1:0o0T0^0R0w0p0Q040\0p1C061I1>0<1;-r1=0Z1=0[1E0;010Y1Q1G1X17
1Z/Q101\-o1]/z120J1/-A121[1g-z1D1<1U1L1m-p1?0s0x0s1W1t1n1Y1W1G1j1x1r1T1F
1O1k2,1X1J2/1h24/t1`-:-s1/0e0E1c0M1`.A1f252B1r03-s22211K2F1q1T1M1l2-2N1R
2I1w2P1y1P1s1L0=2O2Z1z2V2H1F2C24/R0I292>2;0c2=1_2f0k2`0B1@2M1l2P031O1M1o
2K1S2r2_2Z2S232x1N2N2T1x301v2U1C1Y2l1h2b//2d2i/e1b/g2>.e2A361g0W1u2Y2T35
2+-v3D2*2y2z1B1Q1*1I093*3*2\3I3R3G3B1Z2b.[3:0d3<2<3>153Z1h1p3I341S3M3H2u
2J2Y3k0w3O2R3F320z2.3W2]3V2O2p3d372?/c2e3`2g3b/C4-4+0_3K2_3L3k4:4:3P1v3E
343T202^3J2V2]3T3v2*49451+1.4//i3=14434K172n3/3t072x3q1D4[4G3r2L3u3g4C2S
4V194W4S0m4M3;4O3a4Q.-2k4g4p4q4r4p4i0F3@4l0I44/i4z4s5,5-5.3Z4u4n0I42525/
5657582C510j530h.m/-/+5A5B5C5D5E5F5G5H5I5J5K5L5B5@.j5O.i5=5M5T5U5V5W5X5Y
5Z5[5\5]5W5O-;*0*>5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z6*6+6,
6-6.6/6061625w5a/x5b6368696:6;6<6=6>6?6@6A6B6C6D62*?66665c*<6K6L6M6N6O6P
6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6[*?6G5=536J6l6s6t
6u6v6w6x6y6z7*7+7,7-7.6h6n6H6q*>7/75767778797:7;7<7=7>6\716p/?6r7?7E7F7G
7H7I7J7K7L6l7A0g737M7R7S7T7U7V7W7X6j7O137Q7Y7^7_7`7a7b7c777[1c677d7i7j7k
7l7m7n6M7f/g7h7o7t7u7v7w7x767q6I747y8-8.8/80816X8*7]82868788897j847C8,6S
**8@8A**6K8@8D8C6c8B8A6P8E*<8L6]8N6L8E8P6t8I6[8S8:8X8Y7H8P8W6N8]6W8<.Z7D
6R8]8L8_6\8g8Q8G8N8G6Y8W8R8m8T8m8i8Q8j8Z8w8x7?8\8q8K9+6Y8a.D8c6Q8t8t8n9-
6O8o966U9*6z8S93998y9@9A7.9;8?9?6U9/7s9E9,8F8j8J8V998J8f8C8U956M9R9M9W9L
9Z6X9=8k9S9R9Q8s8B8v9N8F949B9h9i8^8q8l9c9Z8p9F6L9H919,9T9Y9m9O9v9^9^9[6Z
9Y8M:+9L9x:,6V9]9f9o9b9[9`:7:39j:=:>9f9z8v:/:6:C6T9s8>8d969w:8:-:J:L:.:M
:9:0:E9p9_9O9k:R:Y:E:T:O9g:?:_8x9D:2:.94:G9::N:79T9U97:]:<9\8D9V:*9n:U:[
9\9+:d:S:x:Z:/:^:`;-88:b8I:0:26S:f6T8e;29q:g9K:;:u:M;09u:r:W:q:Z:c:m:39e
;.;I8w;?:l;*6R;59J;M:\:B:k:X;+;<8O:w:y:L:n:4;\9N:z:[;a:P;J;e89;L;S;W;=6P
;P:I;;9m;H:v:j9a:R;992;Z9X9l;z6^:j:C;H;t:@;_9b;,;f<47u9D;+;E;j:F6o7P8=<5
8H;v<?<B<C:v6Z;m<D;B<H<J<K6W<3*<<G<L;^<Q<S<T;C9.<<7\<><U<[<\<]6c<P9k;1<N
;r<b6j<b9n6u<g<h<^<l8X<j<c8`<X7g9t<m<u<v<m<`<w<z=*<L<y=+=.=/;f=-=0=3=4:=
=2=5=8=98Z=7=:===>80:G6n=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y
=Z=[=\=]=^=_=`=a=T727C=b=f=g=h=i=j=k=l=m=n=o=p=q=r=b=d.Z*:=w=x=y=z>*>+>,
>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>9*9=u.D*:*9>M>N>O>P
>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>^>L>J*0>L*7>t
>u>v>w>x>y>z?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?3>p7B=v
*9?D?J?K?L?M?N?O?P?Q?R?S?T?U?V?A?F<=?H?W?\?]?^?_?`?a?b?c?d?e?4?Y<Y?[?f?k
?l?m?n?o?p?q?r?J?h7g>s?s?x?y?z@*@+@,@-?X>I?G>K?I@.@4@5@6@7@8@9>x>`?:?u7r
?w@:@A@B@C@D@E?T>_*:@=@0?Z@2@F@N@O@P@Q@R?->M?2=w@J>q@@@S@[@\@]@^@+@U?1@W
?9@>66@Z@_@h@i@j@k?V@a?0@c?8@e53@g<g?U8@?5;1?1@w@lA+A,A-??@n*7A*>tA2>t@p
?7@r/?@g>uA4?TA<>y**A?A@A3AB?.A>A.AGAHAI?*A0A4A<A6?6A8?j>xAF?bAFA2ATAAAJ
AZA[A[ALADA1A_*7AO?5AQ@MAYA;A@A*8BAhA`A_AkAh8AAl@wAjAiAtAq>vAWADAoACAuA\
B-B.A+A^AxAaAc?g@K?iAfASAnAyACB+B<A`B>B;AmAlBBB?BE>wBAAtB@AXB/BLBM@EA^@y
>vB4?EB6?v@3B9B2>zBIBJAaAVB:B>BEB^B*BYBFBKBNBgBh@5B1BC>uBS@VBU@?BWBGB_B2
AwBAAmAzAaB`BaByC*BlBsBvC,BiC2C3BjBrAMB3@I@dBp@fBrBdC*B[BwB=BFC>C+BCB^Ag
B[CCC4CKCL?qBkC-Bn@bC;@sC=C.C7BJCFABCICIC+CZC^AgBsCXBDCMCdCe?fCOCJCQ@oCS
A9CUC?B]AoBwBc8ICVC_AwCBC.BuAyB,CfD,D-?^ChANC9@qClAR?kBfD.D8D9@*A0?.Cj?/
Ae>rCn?cD7D:DEDF?mD<?-D>D=D4B8D6BzDGDQDRCgDB?*DKDJDMDADSD[D\BNDI?,DWD`DY
A:D]DeDfA,>M>7@X@1DZDgDnDo@j*9>8Dk@LDmDpDwDxD9D@DdDyE,E-BiE*DUE.E2E3@[>3
BmDcE1E4E:E;@C>2BWE0>w>GEBECEDEEEFEGEHEIEJEKELEMEN=x>x=w*8ESES*9ETEUE?E8
EAEOE\E]E^E_E`EaEbEcEdEMCUERETDiEW@nE@BRD2E<EpEq?xDIEhEX*:EkEY@YC=DaErF,
F-?WEtEwEXAbF1*8ElEZEnF.F9F:?aF0Ei?IEuF6EzE[F;FDFE@GEgF1ElFIEyDl@gF+FFFP
FQ?6F=F5E?FKE7FBF8FRF[F\?<F=D<ERFAFMF*EoF]FfFg?0F_FdFUFXFcFCFhFpFqAKFHDi
>,FbDuFNFeFrG*FpF0Dr>-FwB7DvA5Fz?-DPG+G7@6G6@-FTEWG=G0BVFoAEA3GCG8GE@-CZ
GDC5EQF4G=F>FmFxFd@zA1GSGFGU@+AiGT@6G<GMF2A5F7BmG4?+CwGVGd?xGcGJE[G\ExGO
G1FyGRGXGeGq?pGXG:D;FHGjGNG^FYG`?0GHGYGrH/?dH-Gu?yG[G\G?BqGAH,H0H;?mH3Gv
GKGxG]AbG_G3H<HFE2H5GMH7C<H9HGHNDoHIG>FLGPHMHOHVD]HQGkGzFnFZHWH^D\HYGyHC
H*HEH_HfDRHaHBEmH+HgHmDEHiFlH[HTH]HnHuD,HpHKCTHUHv?*H>I+B0GwHAHyCmI*I.AS
I5A\HxHSGmGQBLCwGg?;I-?6BcGbATG:CpBzIC?3IICaCD?9DDA?B9A<III?G*I9GlG@Ht?/
IA@FB]?AI[IJAxG5A;C/I,IaGIH.I_BGIfI,C1?=IiCcIgAzIkGYIo@RIu?oIVHrI;I4IPGT
Iw@7I]?oAn?,J0IsIsJ4J2@xJ5BXC-?:IwJ4ItJ:Ig@lH2@7IyHcH\HlIZGSJ.@8IrCzBYGc
CtCxJOB<ITJ3JWJ:G6J8IcJ,?4J[BZJKH.IpAsC7I>IpIbJ6J\JBJkJCJaJEI0GxI2D5F3?2
JV@SJNIqBdJxJbIHIkAWGRJXH-JAJ0K1JA@zJvIcGtK-JzJjItK*JXJjK.C-K7@iKC?zJFHk
HeJJGp@_K*J_DPGuK,K@K5J]GbGDKQIjIfK4JlK/K[J\KZK<KOJ`K<K?ApIhAsKbA-K9JoH@
I1I:IXJIJhK_@[KKB+JQBZI?KWJ@KcIeGBJYI6KXKcJLJyKUJ-CzJ_L*L2L,KhL/L;JmL4GZ
JpGjJrDNJtJuJmJ?L<KTJbIhK`L9JhL*KyJBL6J9L7J5KMK2L:I[KPL:KS@jL1?kKGHDLDBg
KyLRLKL-KRLTJiIMK>LQKhKNIBL\K+K@LeJ[LeL[K5LoGEL`HdLbBNKOJQGgJRKuIGByC^H3
BQCyJgL0IlM3IOKwBfI>D*C]IHM@M5JJIdMGJTLzL@H6KnH8IYI7L^I7@\M*JHKIMRLJMWAJ
MTHsKpMYM^I8MKHJMMHLMOM_MfAGM[J*MeMgMl@lMiKoMVMmMr@kMoMNM]MsMx@^MuMdMwMy
N-@RG->WIWMvMqLMN.M_MQ?eN0>S>LMcHzMkJ,KrN6HuJDL?GKD_=wLBG2M,IbKtNBI5KjNE
E[NGN<N2N+N4J3M=NNH^KEH4FtCnNHN=I3N?IPNMNZHvNPGhEnNSNIGnMFNANfH_NDNiG`Nk
NaJsFOMXNpNg@:N0>yN`NUN>N,NzO2G;N^O-NTIzMpNKO3O;@`O5NFNvLCNxO<OC?cO,O?O/
NbO1ODOKDHO>NRO@NJOBOLOS@mONNjOPNmOTOZL_OVNtOXI<O[OaOEO]G3NlO`ObOhD/OdF3
OfJ+OiOo?POFOOOHNwGaOpOw?MOrOWOtOAOvL+L.P/LHK[JZLwP2P4NyP3LILTP8P0LxP6P;
P1P7P>PBP9P5PDPAPFP?P=PHPCP<P:PLP@PINsOeN_O7JGM\NWKbNDPZKVP\L>P[P^P]P_Pb
PaPdP`PfPcPgPePhPkPjPmPiPoPlPpPnPqPtPsPvPrPxPuPyPwPzPqPROlPTOmNcI6KtNhQ5
JnGCQ4Q7JaJ2Q9Q=LKQ>Q<Q?QBQAQDIaQ@QFQCQHQEK8QIQLQKQ8QMQPQOQ;QJQUQNQVQRQX
QTQWQ\QYQ]Q[Q^QaQ`QcQ6QGQ_QeNyO=OGQkPVMjOJM>IQQqMHKeQsJSQvM9KxA>QyMCR+Qr
BuR-QtR.QuQxQzR4R,R2R*R/QwR8R7R5R9R3R6R1RAR0RCR:R=R<R@RDR?R>@.OzO^P+OQP-
Q3QQQdQ:QhQSRVQZRXQgRUR\QfQbRZR_R]RSR`RTR^ReRcRbRWRiRYRkR[RfRdRpRmRaRoRr
Q.O.QlKHO:L+Q,Q+S,Q*S.S+S/S-S0S3S2S5S1S7S4S8S6S9S<S;S>PoRvPUP*O8N3RzKdPJ
PMPESIPGSKPQSJPPPOSHSPPKSTSMSQPNSUSSSVSYSRS]SXS[S`SZSbNQSCOsSDNVSFOxSj?D
RMPSROOYSkSq?JSmQ/SoOgSrSx?@StRwQmO9ORSyT/?,T*PURyT.T0T6@;OkT+T4RQT7T=@T
T9T3LaT5T>T7T2Q1QoB.N8TDDFTFO_OnTITKE<TMSvTOR0N\I`?DIiM<KaRBLqH,M?AvM2C/
AvIK?lNYSxTSSgO0PXLITJP@I@M=K7T\GIIGJ=H:M:L;K4L1N8J>TQT8QlSeT;TwLi?fTZP.
LjLOTvMFLmLUL8LSINU>U->tTiT,SEF+K>CsAuB:MDAAB;TWK]P6MXL6LPIDJeKEURToU3Tc
M5R;JUTdIRM/NeTQUCU1U2LyB@LLLgTtLlU6N5L7K3JkIAUWIZM1U;UlL3U=K:CFLWK^M8Ub
T@TGTlJ]UfUQUwUhLfUmSGUnKXK_UqU<U:LrLqLYUvP0SNJ8LvTDUcTBT<IjT[LxKxVCV5LN
V>V9L<USLXUXTyVTApUkUTLGVZLvM.CqT^T6VHM+FONMIFVQLJLuVbUOPDTsTxVlUrLMLGJ7
VlVPVPVDKTTnOaVdMUSiUvV2VwLdVwV4V,VjSUVoV4V]U6V]VkUYV6KzK=SHLVWAUA>uW,PW
W.P4UHU_U`WLM4QwWJPQW8T]W>VZL5M6TaBxM3V^D7UtQvAqTdULTcR.TgSqWGQnV0AIW*WE
D:WgT-VJA.WkWlD8WnUEWpWsTEV.TNQ2WxT>WuShTCX,OwX.TkWIX1WyU/RNTjOIWiX6VcWz
TTX+G5IoW^?aUNDOMQWrX=OyX?X:OuI@K\W??7TJXIV8?@XHXJ?sX3X;X5T_VRVvXUU@?MXT
X_XX@4XZXNUsXDQiK2XDM/BDM7NXUUDDJRC0M4U^W[JKD+X^ICM0U_M9Xe?\XgP,??I-AVLn
K;WUW1U2W@Y;LtKYP]N5W=JcJ;XkY/?RY1RPT_XjI_IRVQSNW;VWSRV[V3V+L>Y@UyW6VXYE
OjX8SnXMY2TpJ^VMKvPFVVX_Y+LQM0ULBvY?ViYAUSVFYZ?QYGSpXRLpVSUxY8UxU,YTVzVn
YlSGKNY5YYYqF/XLUDX/WwIlLEV5JxAMY6KdW:YeCyUfWCNrYmYWP9YpZ3?NYsSw?LXmWLMB
WbAEWMW]ISM<R9CqB,UVWKZWTbCBXFZJ?AZLTUM-?sZ@ZaOcY\SuY^YHCLUaH=YPZhY[SfZt
UdCKWe?`XjZrZiZtU0VI[*SyZcXA[/O[[1TH[3W+Z5Zv[7Ox[5X<XBK6ZzC`XRZxDC[DZqJ^
WY?KZ`UP?z[F@:XcY0[9[.U9V>YKU??P[PVmX^?<ZIXV[T@5[YI^XO[LQj[,X9Z6X4X0W5VO
Y:XaZN[J?e[]Y3A,[a[^[_@F[=X\M2Z1K0JPJeYDWVW\ZSXuCxXtW^VaJdXPKuQuY,Y.Y:UJ
UU\-VAWcT]\<TWUt\7D+ZZR@JdUJK+TeArWNQtZ[XuU\B?\T\.\AR2N9[RVeZ8[[\CBlK1Xs
V=VsZ;U7LjZEZ/YWYcC>J.YAY<Y7YVLhYBIL\/\oPzTt\aUj\gKw\s\pZ?WB\qQiMC\s[KYF
\\W-Da<bYdY>\hVbVrVi\fWJ]<NoP<YnPM[rZAP?]HVY]4]GT^]JS-P/VE]+YM]A[ZVh]/Yd
W2\yOMZjT:[SJ=V<Z,XQZA[ZMIZ.YgIQYkYUZF]MLH]K[l\:\1Yy\dW@Yo]OYeQ-WZUhURN\
\wK8Zo\`P2CsUP][Y;DT]^TA\][c[U^+]>]uXPNoY=L.]D]LIq\+W3\>Z>];UlZ0WS[]]PS.
V6]SLiH>^.Q8^0]eVx^4]q\=[+Se[-^:?8Tg^VImW9[GXQYL]V^S^D]uYRYXYh^<L8W0VR\o
]NW>^dPwWDLf^e^OZG^S]Y]\^zSLW<ZG?n[y[jJuBQ\3BBXsZT^UZVUZZXC0\VZUWM_@Z^Xo
CWXi\?Xx]r\2\@L5V^\R_DXx\8Ct\LKe_W_HXz[A_RXvV:_NRH_;U[ZR_G_:^*?l_6\^@^[u
[v]t@AZgGV_pZs^_[g[:Wq\/H1^g@B_rGF`+[Q^8V/[z_k_l?B_\@P`5_q\O?`_i[;Sk`;QP
`<Ob`>]f`@O3`B`DOi`F`3`GHu`F`K[8`/X*Kp`J`NHg`M`TOT`I`WOS`V`ZOK`Y`]OD`\``
O<`_`cO;`b`fO2`e`iNzN0G/`Q[>`lN6G->.`0A6`S`rH;N*[iD2^X`yMsa*X[_7a.I7a0Xh
a3`jMaHRX@[6a7Mxa5Y_a=NpN:>Ua;`qaAMlaC>P]_^aaGNZFjGi`v_jaMMWaOEnHq[ha1aR
aSa4I0FJHj]`a[N.FTa^aW_vaaa>Jp@UF@`p`1agMRG<ajF4aQanabL@G.HZaXOu>nb*b+b,
b-b.b/b0b1b2b3b4b5b6avEuaeTBb7b<b=b>b?b@bAbBbCbDb6KlETGLb:M+atO3N`>VaEbL
bM>YbPbQOpRybUOobWbXOhbZb[OaHkEebabbbcbdbebfbgbh>9A7G_bibmbnbobpbqbrbs>3
E9DbH*b9HRFUbEc+c,c-c.c/c0c1bDFUJqbv?+b`bIEXDrc*c2c=c>c?c@cAcBc1Ew>OMLbk
bxbI>OFac6b^GEcLcFaxB5cIF>@acLcNHFcW*7cQaWcSJHcPBrcZcXH0cbc[>Nc]BTcI>NH@
D_ccGVceG3SBcic_Ew=yaVcmcnGFce=ychBocTEScvF3d,cyGUcZd+HBc^M\by>*d2d3cOcE
G.bycxDLd.G=d+FubtdHdIdJdKdLdM=xF5dOMbcHctGxFadNdWdXdYdZd[ELdPc5dSd9N<cC
dcdddedfdgdhb3d`QndbdidndodpdqdrdoUB>Tc7Lad=Mm>TP-b]dyM_F0dwbKe-Mfe/DVE8
d\e7e8e9e:e;EJF0>/E8dseAeBeCeDeEbDO?N;dxe2e.FHe0W-eKeLGKeNWHePM^dG=zeSWh
eUeV>-eYO9e[Nze,e`MJ>^DteZecGV@Hefe_ehGFdBO6ekSEem`6]3?Q[NF^cMa<DXe1esI\
eu[X`xU.@baZEAdxewYIXFf6f,CJCEYCC]CDIT[If<_GWZM=D0C8eqShf;[W\uTqf0cNR4J<
CCWaB`IKfSfBCrIwfFZdf*eOf9IMfTLYfNb[fPfQ_IB*K.fdBxCYKBC_?4fZ[2bwf]CvUMfX
_g\a_^_XfbbXfiCGfkC\f;ftCbAX[DfoezfqeTWYg8fmfB\mfmC@f^ehfifJff\ICp\u_Cg1
IFXpT1C6]:fpe^erC[g:gQfeYJgRfzbQgAg,gHCJY-g-g=gI?5g4aFgOfIgSBegVgTM>gff:
[Hf=gBBtBIg]flU]Cb[B?1gbame5bKgfBHC1gZJzghglgmgFgoh/\0CufL_Bg\g:?2gx[jbW
h+g>Z_M.CHg_gWangAgTMEgggrg+h9gg[kgKf?fGC:h*h0_YB=MAf__e\8h1_8gnfDXvCA\<
J<\XXrWWI[h=f3BReJ[?h]?nhHXbhFf1@ohjbTZShnhof.?Og??=eoeRhTeOhwhxF-i-f[g6
egi2Fgi4gNgzi0i8F]eWE6i/eTi>i?DsiBi7iDM^ebiII7iKiLcd>2hviOcY>1ale<iWiXiY
iZiZbGEUa:ZlFyi[ibicidieboavc;HbafiSG+G[Ejija`ilG7apF?ariVhuirF9itd1a_aL
iyima]FVj,]8ixj.F,acj1bJj3J1`9j5AZaUG`j9WHa2?Nhrj=O4clFkasGsjFBh`nFviw]j
i+NX\_jLA]Ft`ujP^\YaZ-]@jUM`i]cGi`ZM]dZ:SMM6j^BMaI>SbPB4^,WO\tSKUOjEjhEs
N^eIjYZ2]vKY_9gJ^TjtB/`\[AWCS_];jsk.CN]7jBG4gIJfKgS^fQXdk6@_k0]I\VSc]fk5
kA_5k8eZjmLn_.IJ]bkIMZkKWo]jWbKA[akHkRO\`Pjlj4[Xk[kSk]jbi5?^kZka?d`h_ykh
MhkTWvj;]5kl[xknZ7krFDkjkvE;kxkyE4l*l+HHkta+l.F.l-l2E,l4l5Dxl7l8Dpl:l;Dn
l=l>Dfl@lAHXl0aYlDkzlFa6lHl/kcaya@lLE.lClQDQlSlTTLlJlPlWl9lYZml[DylVl_Wt
l]Ytlbl?ldjclfDelaljCflllmCdlolpCLlrlsC4lulvC2lxlyjMlhkem+lnm-i;m/lqm1g5
m3Cem*m7k/m5gcm:ltm<gym>lwm@jCmBj_[fY]lOl^mFWmmDk_mLmG_tmIikmPm0lNmTmUm4
mWiqmYmVmHZkmJlem]mZm_aKj:mcD-m9mhDhmNmkHwmmmnm8mpmqCMmjmt@imvmwkBmsmzC3
myn,MSn+n/m,m[j-n2Bgn.n6@Qn8n9@On;n<ksn4mgn?jin1nCB-n>nF@BnHnIO+nEnLkbme
^9nBnOjVnAk9nTnGnNnXA.nKn[XfnZn^I/nVkLmOna@Cn]nf[emRm`mXnimxn`nn@hnhnqju
nckUntmlnvkonxnbnQjJo+Mtnpo/@Snso2kJnzkuo5noo7l1o9nro1o=@No4o@\[o;lGoC@]
oBoG?boIoJ`:o?oM@AoLoP?]oRoSZ4oElKoVn@o-jxoZo[nkmfnWo^oAoOocn_oXlZofoQoe
oj@,oUom?OooopXKohmKos@8orowSsolozXYp+p,k7oumbp/onp.p3o6o\k^p6Sd[g^`nSp:
p4p1lip?nup8kdm2pCoDpEmapBpHp0pJnmpMIxp5pQoKpSpToNpAm.pWF<N^`op9p[pDNjjX
p_p`?ra?ovpep7OWbOpFm6pi_sO^>RoandpopNcwjIo]pu_hGwF`d?pdpzq*Klado.q/k\Gi
aeFWpmm=q4FGbGaqipn5q;^^j@F2akq.qAqBG3Ekb9aQeFqMqNqOqPqQdvq6EUqKiVqRqXqY
qZq[dfj`cJalqG?xbNaDq9qaqbbSqeqf@BiNqj@4qlqm@-qoqp@+@e.]@@ifqxqyqzr*E_dS
.\5aqwr+r1r2r3r4>>eyO-@0-9MvbyExc<q\r?r@rArB>ec4LAr7EQblc9c*d?rCrMrNrOrP
Ejc\cRcsdaHRFud<qsA7rLcgrTd-dTc:@3cprZ@dq-cf>MHbd8dlr\pwrd?=cecFi:>zc8ck
aPrGrnc7rfEncrr_rVd0qIrrrxD`rzF3rcCRdDd0s5s1?Erfd6rYdCr`bH=zs>s:D?d?s=d7
rUrkG\dFd@r5sNsOsPd\dPr<sCi6KosTd/cEsQs[s\s]dHd^rFdksWdmrQsesfsgshs0rHbx
sismsnsor?sbersDqthlst?yqrsw?mE*s^t,t-t.sODYspt2t3t4si>q/=t8t9t:t;t<t=t>
t?-c@Lt@tCtDtEtFtGtHtI-`?Z.14o59tOtPtQ0NtN0JtM5+tRtXtYtZ/otT-k.q5Q5^tatb
tctdtetftgth5R.rt`titmtntotptqtrts5^
%%Trailer

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

/originalCTM matrix currentmatrix def

3 1 0 [] 0 SetB
%I cfg Black
 0 0 0 SetCFg
%I cbg White
 1 1 1 SetCBg
 none SetP %I p n

% Arrows above bitmap, left to right, 1 to 5

/YY 490 def

 25 440  25 YY Line

 65 440  65 YY Line

105 440 105 YY Line

160 440 160 YY Line

515 440 515 YY Line

% Arrows below bitmap, left to right, 1 to 4

/YY 30 def

 77 180  77  YY Line

220 260 220  YY Line

447 204 340  YY Line

500 204 460  YY Line
500 387 460  YY Line

/centershow {dup stringwidth pop -2 div 0 rmoveto show} def

/ZapfDingbats findfont 18 scalefont setfont

% Text above bitmap

/YY 495 def

 25 YY moveto (\300) centershow % Text circled 1, white background
 65 YY moveto (\301) centershow % Text circled 2, white background
105 YY moveto (\302) centershow % Text circled 3, white background
160 YY moveto (\303) centershow % Text circled 4, white background
515 YY moveto (\304) centershow % Text circled 5, white background

% Text below bitmap

/YY 13 def

 77 YY moveto (\312) centershow % Text circled 1, black background
220 YY moveto (\313) centershow % Text circled 2, black background
340 YY moveto (\314) centershow % Text circled 3, black background
460 YY moveto (\315) centershow % Text circled 4, black background

showpage
%%Trailer


%!PS-Adobe-2.0 EPSF-2.0
%%Title: histo.eps
%%Creator: xpick Version 1.00  Rev: 22/03/93 - and O.Couet
%%BoundingBox: 0 12 548 439
%%EndComments
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                                   *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a Lempel-Ziv Welch (LZW) encoded color image.     *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/CriticalSize 7000 def
systemdict /colorimage known { /incr 3 def } { /incr 1 def } ifelse
/Length 81 81 mul def
/Table Length array def
/Prefix Length array def
/Length Length incr mul def
/String Length string def
%***********************************************************************
/ReadCode                % Read next code from file                    *
%***********************************************************************
{
  { currentfile read pop
    dup dup 42 ge exch 123 lt and { exit } { pop } ifelse
  } loop
  42 sub 81 mul
  currentfile read pop 42 sub add
  /CurCode exch def
} bind def
%***********************************************************************
/DecodeCodeA             % Decode CurCode (fast, but memory demanding) *
%***********************************************************************
{
  ReadCode
  CurCode Ncol eq {
    ReadCode
    /FreeCode Ncol 1 add def
  }{
    //Table FreeCode L incr add string
    dup 0 Table OldCode get putinterval
    dup L Table CurCode FreeCode lt { CurCode } { OldCode } ifelse get
    0 incr getinterval putinterval put
    /FreeCode FreeCode 1 add def
  } ifelse
  /OldCode CurCode def
  Table CurCode get dup length /L exch def
} bind def
%***********************************************************************
/DecodeCodeB         % Decode CurCode (not memory demanding, but slow) *
%***********************************************************************
{
  /iout //Length //incr sub def
  ReadCode
  CurCode Ncol eq {
    /FreeCode Ncol 1 add def
    ReadCode
    /OldCode CurCode def
    /FinChar CurCode def
    String iout Table CurCode get putinterval
  }{
    /InCode CurCode def
    CurCode FreeCode eq {
      /CurCode OldCode def
      String iout Table FinChar get putinterval
      /iout iout //incr sub def
    } if
    iout //incr neg 0 {
      CurCode Ncol lt { exit } if
      String exch Table CurCode get putinterval
      /CurCode Prefix CurCode get def
    } for
    /iout exch def
    /FinChar CurCode def
    String iout Table FinChar get putinterval
    Prefix FreeCode OldCode put
    Table FreeCode Table FinChar get put
    /FreeCode FreeCode 1 add def
    /OldCode InCode def
  } ifelse
  String iout //Length iout sub getinterval
}bind def
%***********************************************************************
/DisplayImage            % Display a LZW-encoded color image           *
%***********************************************************************
{
  gsave
  /buffer 72 string def
  currentfile buffer readline pop
  token { /degrees exch def pop } { } ifelse
  degrees rotate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y translate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y scale
  currentfile buffer readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile buffer readline pop
  token { /Ncol exch def pop } { } ifelse
  systemdict /colorimage known {
    0 1 Ncol 1 sub {
      Table exch
      currentfile 3 string readhexstring pop put
    } for
    columns rows mul CriticalSize lt {
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeA } false 3 colorimage
    }{
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeB } false 3 colorimage
    } ifelse
  }{
    /color 3 string def
    0 1 Ncol 1 sub {
      Table exch
      1 string dup 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put put
    } for
    columns rows mul CriticalSize lt {
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeA } image
    }{
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeB } image
    } ifelse
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
0.00
0.0 50.0
548.00 350.68
611 391
256
000000 ffffff 00ffff 9f0028 870022 d18598 460012 ffffff 53559e 474887
b0b1d3 28294c ffffff e1e3bc bfc1a0 f2f3e3 7e7f69 000000 f0b550 cc9a44
f8dfb2 7f602a ffffff 645fa2 55518a b8b5d4 312e50 ffffff b53560 9a2d51
dda2b6 57192e ffffff 7f7f9b 6c6c84 c5c5d2 3f3f4e ffffff 700070 5f005f
ba85ba 320032 ffffff e1e3bc afafaf 7d7d7d 4b4b4b 969696 646464 c8c8c8
e1e1e1 323232 ff00ff ffff00 ff0000 0000ff 00ff00 71725e 232375 7f7f7f
f9f9f9 f3f3f3 ededed e7e7e7 dbdbdb d4d4d4 cecece c2c2c2 bcbcbc b6b6b6
b0b0b0 aaaaaa a4a4a4 9e9e9e 989898 929292 8c8c8c 868686 808080 797979
737373 6d6d6d 676767 616161 5b5b5b 555555 4f4f4f 494949 434343 3d3d3d
373737 313131 2b2b2b 242424 1e1e1e 181818 121212 0c0c0c 060606 0000cc
0013cc 0027cc 003acc 004ecc 0061cc 0075cc 0088cc 009bcc 00afcc 00c2cc
00ccc2 00ccaf 00cc9b 00cc88 00cc75 00cc61 00cc4e 00cc3a 00cc27 00cc13
00cc00 13cc00 27cc00 3acc00 4ecc00 61cc00 75cc00 88cc00 9bcc00 afcc00
c2cc00 ccc200 ccaf00 cc9b00 cc8800 cc7500 cc6100 cc4e00 cc3a00 cc2700
cc1300 d9dcc7 f0af3a bc2458 7875b8 00004d 6666ff 9999ff cd950c cd1076
4f94cd 711635 9e1e4a d73069 befe3f befe7f befebe befefe fe0000 fe003f
fe007f fe00be fe00fe fe3f00 fe3f3f fe3f7f fe3fbe fe3ffe fe7f00 fe7f3f
fe7f7f fe7fbe fe7ffe febe00 febe3f febe7f febebe febefe fefe00 fefe3f
fefe7f fefebe d08497 2e2069 460012 b82069 9e0028 f7deb1 7f602a efb450
7e7f69 f1f2e2 e0e2bb 07b1f7 d08497 2eefb4 460012 b8efb4 9e0028 7e7f69
f1f2e2 e0e2bb 076040 806040 dfe1ba 1f602a f0f1e1 00fd00 b8602a cf8396
460013 b80000 f6dcb0 080000 eeb150 7e7f69 f0f1e1 0e0000 806294 460012
f1f2e2 0d0500 0d32e0 d08497 2e32e0 80f1e1 bec09f f6dcb0 080400 800400
eeb150 7e7f69 f0f1e1 0e0400 072a7f 802a7f 460012 f1f2e2 0defb4 0dbbe0
d08497 2ebbe0 8000e0 bec09f b8bbe0 9e0028 d8dbc6 d63069 bb2458 711635
8050ef 0750ef 2e0060 b80060 076040 806040
-7*/-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y
-;*0-Z-]-^-_-`-a-b-c-d-e-f-g-h-D-\-M-k*--n-o-p-q-r*--\-s-v-w-x-y-z.*.+.,
.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.0-u.2*0-m.B*/.?.G.H.I.J.K.L.M.N.O.P
.Q.R.K.A.1.C-8-n.C.Z.[.\.]-\.^.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t
.u.v.w.x.y.l*/.l.Y.D-k-i/0/1/2/3/4/5/6/7/8/9-</-.X-t.F...U.S/B/C/D/E/F/G
/H/I/J.E.//A.+.A.W/?/N.*/S/K/V/W/X/Y/Z/[/\/C/U-y/_-x/P/./?.-/a/]/h/i/j/k
/l/m/H/g-v/p-s/c/=/r-r/v/n/y.L*1*1-p0+-n0./[0+00.+03-y0207.905/z0;.T/e.,
.U-B-o/t/R0>/O0E0<0H0*0,-o000:-q0N.P030R0K-v0P-s050V.00Y0I0\.7/x-p0@/b0B
/R/d/M0G0]0h.<0X0T060l.Q0k0L0n0-0r-w0p.60[0i0y0f1*-n0g0B0c/<0D1+0z13.70v
0S0M08*-190/0.181:0K1;1=0,020W0N071D1<1?0q0P0:180S1?0l1A0t141T/T1-/b/e1W
-t1/-t0e1,-A1\1U1b./161@1f1I1h1>1P1<1D1j1m1B1E1M1g1I1n0r1e1i1u1x1c2*-z/U
-:/s1Y0b.Y0d/u20-w*01a2+290u1G1y0O1s1J1w1E1z1J0U2A1p2D2H1K1;0s1h2@0T2G2:
2Q28-o/R2/2T21/>10222W262S2R2Q2A1l0q2c1t2O2?1l2=0x1H1O2N2h1F1S1P1j2D2<2M
2_2:2-.Y2V1,2X0C2[1,.c2^2v2+2a2d2r2P2s1Q1s2=-x351C1g2j1S3:362d31292-.Z2z
*-1Z273-/Q3-/f1Z3D141w1O2l2m342f3W2C3C2e2L1>3?2B3Z3B2u3Q1b0_1a3J1\3M2Y/@
3P3d0i2F393X372b2I2i2g2u2r3t3:3[2L3s2C3y3n1U3f3N3h3L1^3O402*2a2K17383=3c
1o4-1L2K3u3r2q3`1q3V2H1R481c423k3I3+23113l4L4U.30x.I4X4V4[.44N0@3/452412
4\4d2>4+.O4Z4e4j0?3m/w4m-q3,4O4l4k4t2q2p.K4i4u4z3H4s4T1]24.k/+.z52535455
565758595:5;5<5=505?.j235>5C5D5E5F5G5H5I5J5K5L.y51/Q-9*0*>5S5T5U5V5W5X5Y
5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5U-[/u5R5t5y5z6*6+6,
6-6.6/60616263645a*?5w5w5S*<6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P
6Q6R6S6T6U6V6W6X6Y6Z6[*?674R/-6:6[6b6c6d6e6f6g6h6i6j6k6l6m6n6T6]680d6a6o
6u6v6w6x6y6z7*7+7,7-6C6q6_1]6t7.7475767778797:7;6R702Z72*>7<7B7C7D7E7F7G
7H6P7>5.6s7A7I7O7P7Q7R7S7T6h7K3j.C737U7[7\7]7^7_7P7W/.5x7`7e7f7g7h7i6m7b
697N7j7o7p7q7r7s6A7l7M7t7x7y7z8*7R7v6`7n6B**8182*<8184**6S82876H858+8=8>
8?7g8-7@6E8<6<858E6O8<8H6@8:868@8O8P8Q7O8B7Y8/6A8K8F8M6N8H8X8Y8R8_8`8a7:
8T7d6D8K8G8:896K8\87898i8j8J838N8E8j8b8v8w8x6Q8d7Z8L8n8s8m8o6J8l8N938t9/
6;8h968t8y9;9<9=7u6^7?8U8D8Z9.868u8;8Z8h97909K94969.8]9>9R9S8`9*8V9,6>9J
9Q6F928q9M9M9^9^9K9[9T9e9f7y9V9C9Y999L6I9b9o8M9J9E8s8^9g9v9w7x9i8f9D9r9G
918r9F8l9O8u9p9d9x:6:77\9z7*:5:8:=:>8>::6z:<:?:D:E7q:A6y:C:F:K:L7_:H:M:P
:Q:L:O9k8n9D6P:V:-:R:[:\7S:T:]:`:a9>:_:b:e:f9U9@7L8.:g:l:m8_:d:n:q:r7p:p
:s:v:w7^:u:x;*;+8S:i7X5x6];1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G
;H;I;J;K;L;M;N;O;P;16r6`;Q;U;V;W;X;Y;Z;[;\;];^;_;`;a;?;S1]*:;f;g;h;i;j;k
;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z<*<+<,<-<.</<0<1<2<3<4<5;g*9;d.C*:*9<<<=<>
<?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\*9<;<9*0<;*7
<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z=*=+=,=-=.=/=0=1=2<_71<:
*9=2=8=9=:=;=<===>=?=@=A=B=C=D=,=49A<a=7=E=K=L=M=N=O=P=Q=R=S=T<l=G:j;e=J
=U=[=\=]=^=_=`=a=b=*=W;/<b=c=h=i=j=k=l=m=n<w=e7c=g=o=t=u=v=w=x=y===q5w=s
=z>.>/>0>1>2=v>+0d>->3>8>9>:>;><=?>5/->7>=>B>C>D>E>F<f>?=Y>G>K>L>M>N=w>I
=6>O>S>T>U>V=Q>Q=I>W>[>\>]=E81<f>`=2>b<v>d<m>f>H<8=5>Z>^>m>n>o=/>h>h=.>s
<q>u<k>w>Y>A>p?+?,?-<j>r**<c?0<d>`82?4?1*7?6<e>d89?7>w?9?8?@>s>b>y>j=H?*
?.?I?J>o?3?@>a?A?5?<?1?=?;?8?D?S?V?A?U?7?2?Z?N?]<h>z=Z<h?T=?8n<p??<g?g<l
?i?O?K?o>\?M?M?N?T?5?_?\?_?Q?`?j?P?Y?n@*>i<`?H?y?^>t@+?x?9>x@4?/@-@;>v?P
?p@@>M?s@C?X@8?w>f>u?z?w?[@6?B?R?a?F=X>R?d?Z?m<w?C@U@/@T?h@,@=@\@Z@A@a>B
@D@.?t@E@O@7?>@3@[?O@E@G@:?b<i@I@-?v?v@N?`?W?:@j?>@JA,?:@d@wA0?u@t?X@z@b
A6>9A/@7A,@o@LA*?W@lA>@<@K<d@qA@@L?Q?Y@<AH@k@T@h@kA-AC@OA?AC@f@xABA7AX>2
?sAQ@]@y@]@`@zAS@e?B?xAN<eAE@M@.@J@o?=AS?iA.@Y@FAHA5A=AsAb?gA?AbAYB*>.A[
?0A4AlA:@U@HAWB1B2@/>uAhAcAPAN?rB4@F@*B3Ay@:@eAkAeA3AV@`B+BJ=uB-?kBN@,A_
@K:V?]??A^BVBI<cB9AjA3@nA<AUALAuB4ARBGAGAJBfBH?6AzBKBk=mA[>qBC<s@VAcAg@Q
=f?c@+B3B_BRApB7B.BAB1BTBb?eA0AlBBB0BlC7=jBn>tBpBqC<BsBt@1Bw=cBrC8CECF=k
BZ=bCDCGCLCM=^CI=aCKCNCSCT=OCPCUCXCY?KCWCZC]C^>mC\C_CbCc>O?b<6CgChCiCjCk
ClCmCnCoCpCqCrCs;sBu=r<]CxCyCzD*D+D,D-D.D/D0D1D2D3<ICaCdD7D8>BD6D9D<D=>0
D;D>DADB=oD@DCDFDG=aDEDHDKDL=RDJDMDPDQ=CDODRDUDV=9DTDWDZD[=dCv>,CBD\DaDb
=FD^>6D`DcDhDi<sDYDjDmDjDlDnDqDaDpDrDuDVDt@>C+@>@9>L?k<nCRDvDQDx@_Bz?dAi
E6>EB<E+E0DmE2<oC5@r@4BUC>>:@HBX@iE;DcE=E.BdA2A5?zA^C0>CENAmELAtEHDUEJ>g
A2AL@XAdAnB>A8AaA_EOE`EWDMCa;n<r?3E_@6ElB`<nCt*:<kEiEZAW?VAVC2>HEqF*F+F,
F-F.;j>XDe>@DgBY<CEj?^APATF9En<oD4F4*7<;<B?/Be?UE?<lF>FHFIFJFKFL<AF1CAEs
F?E3?\F<FTBgEo=[@2F@FRAiBjBcEFEf>oFZ=BEhF\EKB[C.FVB@BPECCVF?FcAMFiB^EyFa
?,Fp=@FeAYFZFw<uE/Fu>pG+=>FyAXG*Ff<tG-G.FbG5G1F2>J<jG0FvFoG:F7G8G3GB=<G2
A7G4GDD>G?GGG<@S<iGMG/GAGKD=GR=:GHA6GJGUD9GWDXGO>lGQGFGSFQG\G]GcGXG`G[GI
GTGfD7G^=8GY@bGkGnCbGp=3GjGmGlGeGuCcGw=1Gr@aGtH,C]H.=0H0@AH2H3CYH5=/H7@@
H9*7FMHB<HFGHCHF<G>FH<=.H>?pH@HGHO<?Er<kHPHTHQHIGhG_FPG>FRHH>WHNHX>L;fHE
?oHb>EHJ=-HL<c<FHR>VH_?.He<j<<HdHl>CHgDdHZGbHcGQHtFEG7F`C?=PHn?-Hp<iHrC[
I+>=Hv=+HiHAF4I3C/?2>gEG>aIBI0Gz<eI5FvI7<fIH?II>I8H`GxHx@PHz?aIJEEATI/AF
=\I1IIITIMIJ>;I9D]IR<gFcILEzE@B2ApBWEP@N@n?eFtG;H+IKIP>GINItHsHWFO>kH@IG
I=I`C3@sC,@GJ2FFFmH/IF<dIgIpEAJ6E>J=EmJ?HhJ/HjBwIq=-J1G,B]>>JC>8Ib<zI;Ig
AgJLDzC0ABAsBaA\I-DdIsJ-FDF:JAB?E7JaJcFjE.HKJLILBjC;IZJcBCBE>xJgIzIEId>i
I^Ih?jJ^E\BQE[BHBxJ`J[H[<hIHByJZA=@mB6IDK5@^=FJh=ZBy=1@XK>I.IXJb<yIwIaIu
H6GyJ\K1J.A@AwFW?tBFJe@vB_JjHhJ8JD@iAvB5FlJUJxB?AxET@8K[AOEMK]<oKFJ9K=Jn
C+?RAyEQF:I@K^KaKcA4ElBOKnJ=Ki>9JNKEKJK0HSKMFqIjK^BT@3C.ImA1KPKIKKKY@ZF;
BgFUKRL>BPK,L?KR?<KhK<IDBB@gB\J@B[KZLDKUIoJVBdJdI*JrFnJtBtHE;o>[I\K3FWBS
E]@MAfB<LTJzA+JW<pL*I<BFAvLhLcIjJoKOJXLELhC4LkLILY=NJP;pL_KXLnLCLiA\Jb:Y
EvK*LqKP@sCDLmK2B6B=M4FkC*BSC*C/E?LuK-M*HfKHH=L.HyGEL<M1MBM3MGB>K>KAF_AU
JTKoLw@/M=?cMYB;LVFFMEMeA<C5M[@tKSABLm>3L,<xI;?JI\KpInK\A+FEK5Kn@jBcEbC6
J;En>dM_K6KgE_AzKtLQA*E^A]J;N-EbN/?AMm>2Mo=pMNISMPL/IxG6K.=yN1I6M+=MMqIM
M0JQJ>IvLJNMMKJ*?GM0H?NRGhK4>PNVMrJLMnMLHKNDIeNeHmN]HoNaI_NN=LNPHoNkI2Nm
NlNo=KNqI2NsI]L0IyNXJsJ+N[HMO*?+NLNbNw=ENyG@MQ<<F/O=M.L0O>OAO?>DNB<vO9O4
NROBOJ;iFGOKONOLO.LZO0MQN\OTH:CSOE<uOGGdNGOWH;NiHwOSO]GsO1O^CLOY<tO[G9OV
OfCGOhDkNgJuNFMOOmCUOo<rJP<FM/OlOuC8Ow<qOy<DNcO7F5P,OvO`I:OqL\O,LXK-JoL+
OeP5BlP.LlP9ADH\L1BsLHP?P+PABKPCKhPEP4P;IUJlK8>.J,PMPBP7IcObOtI4PHK9KdJF
DDP@PYB+POEpPQF[JvJRL2LxJ3NKN]HUHOHEPsPv<RPuFJNEORNZP+NSBYIVF8LUN_=]H_Pw
HBK<Q6Q9<KQ8FIIJPh<mOyG>Q0LPI,=zMsG/NuOgQIDSQ>P[JOPjIfP`EGAwMkKBI[O3QHPl
OnQKFdQMNY@RGaQ*P_QBIZMzL9MS=iQGFbQ\CEO5NxQ^O/Q,Oc<gO<EtNjO;QN>:QnCMR*=D
IwQ?=VQPH\OC>UQj>nR,Q[QZQ]QbNOR1FzQXQkR9QmQlFxQpQ+Q`PXHdR?B:JJFSC=RNDXRC
>cEVHfNa:YJKR;NpR=OsRXMRE@?[G7JZG-Q3EpRQ=0KVJG=bR7KC=3REM,RZH*QsR]R^Rk=9
PcRsGqReJkPV<zRcRWPSK9=;R.QyMpRoGZRJQDImKwLMLjK_N:S;L8RvMJHqS2K:K6MwLSSF
KtPoNpQIBAMcN=KzRmR<L[PFR>QxEZMBMUBhEdA`BfS:MZMcMpRyJG@:SYBiS[B`DzS,I:Nu
N,@fS^AkJ6S1Q_BvPLNQSVEuN:E[MbM]J^SeKvLz=pSb=,EPLrT+LpJ2?4KrM,SlK7MbETCR
SrQqRGPeSvRqQ.SEK,I,SzEUTISfM]P>C3OZT1=+LaLPS9F]LsI0NmM@MdSFQ@SQRYSSPRRp
P^KjNTQUQhT*MfSGMhMjT5ECRj=8MaM9SXM:Q1LBSjLlRUJ<TNTmSG?wT@RFStRqOUTEG5MW
ESJ4S]KAU-N6N.LbToTRT2U=SHU>L7TvMSTxSAQcJUS8U9UCQhU/RnTaPkR[NhKL=QQ3UH=V
U@=vUYJOU[RlR\O8S4OdSw=KRgSWRtJqS.EaDNU_H/T_NxUcH1S6=AS@?lRSU`Uk>8U]U^RA
RDUaR-UrH8Ut>]TpP-UnH6UpUbURR/PKU4NvUzR8V@R:UUTAU1TdQtOzH^V3>\V5C7VMG1V9
V0V;PGP1P*V>NtV-VNV7H=VQDSV1J]P<N2S^@;BQ=jH_OOOJL]VhVk<*VjF+V/V^VSRAIwEk
C>SmCHOIVlO>OMVzW,;vW+F,VpFdV_TeVaS/KBK+VxSuPfUTT`P]W1TFVtTvL8@xFkSYMtV0
W:W;S5SsCwQ-QRUKS_M2LtB/TMUg>*TCWJWKVEWMU2W4PTE7EdC2?DL6LFMDWHW]WYSUW[D_
WNQdW`VcFhTsKeFnWIWiU3U0W\VGNHW_PISoK7N9TnWsFXJ7WuWvRIWLWlWhRrPmWoWdBDIl
UDU>S0WXX5O2X7DfWNL^VJX4XDTDWxX8WzIGR3>TRHXLV2XFF3XKOkX9XUXEWkXGX[XMW1X\
X6X^XXX`NrQxQ:FLPyXjXm<DXlFHXbFxW3XdWzXnFJQ<XwXz<=XyF>V]W2VrW<P:X*O4V[H1
Y5JBXr>>XtC[VKL_Y7H?Y?SkY9G;Y0TcR\TFV4YAO-SBT:YCWWYEWZXvSCMnYJNWYLNOY.=A
OjR6Y=H^YUO6VBYZYYXsYPUdVWO+YWOXY_SaYNGNYeUsUeJIUh@9UxR^V+UIUVK?EC@VE-RO
I[QKWfRPYmXBYoXVYgYrUwZ8QVJeYbVY<xZ+VvVeK_T8Z:SKQZRaOFYcY:Z4WwYGIPUvYsLW
RwQLZ=>eYuRMBpU:=_R7I-JZUPSRW>VDYFZaV`G,T9TrK@TGQgSgMuV\ZTZeK`S=TPL5QEMu
SIB]KxNJYlV@K@EUZVWnOrXNX_XPX]YRZUU8THJ<LAS[WUEeKEYkThWrJdK+N5SyTk@?VPZF
U<WT[<T^Z2GiZKKj<EVV[4Z7FrT/BxJ_[;X1V+VO[TL3ExC<SfW8MgTKZOZm[*UFLFTQ[MHY
Z`[/P_VUXJZ6DyE-VwWbR_[hS:WFUjYiUAWf[uEN[wE6TrSh[-[f\+QSTKUiEsZIYD[mY2UJ
X+TIP3USY3E*LGU,MXWr[:[dL:Ox[>U6AON7X0MF[dTgU]Z[[xM3\YJw[nZ_Qr[2L=\@LBFC
D?Y]AFSpLT[+KgZuX-Ks\LP/\NM?ZqFt[tESLDL?IkXA\*\?S/[B\v\nQ/[kGqY;W@QCF`Yw
IEYq>/[[[>C9ZyK;ZnS0\;YO\=STYaWALoAIWC=nR5BL[KT0]?=zWVGG];[jZc\]TBWmW5I?
\b]QRi\e=k[eOi]SCQ\4]@]OZ1]UW=\^W?WOFsW8Z0=m]K>^[\PN]bDk]AYn]CTb]*\[JXF<
]6Ub]8R@YaV6]fRx]0IQ]y\C^*X;S7TuZDZZ]^XS]u^1\6R-]wZ3^8QQ[.\AS;Zs]`^?^0R6
^B^Q^4Uy\\]i]WX9Qu;m[RZMW-F.Vn^^^a^[O@W0]hUq[OHjXR>SHN^b^eHq^m^p;kW/Vo^f
V:^HYSIvXCXcNzXWG=\_Y<XY_*Y\_,GP^6V4^z_1O\[0Xf_.Mr_7_8_2Xe_-_5VL_>_?]r^x
OiY;_=_0_F^\]VVF_C_N^V_M_K_A_4^u[3_Q_T>NV<H[^h_/Xg_[_G_3Qa_XXu_Z_b>K_]Gb
___U_<_i_c_V_e_SZL_f_pC`_HOp_mXa_v_w_6_dXT_n_h`-Hu_yOx_J`+_t`3_q_:_B`,`8
\>`:XZ`<_W`9_g`>`AXS`5P/`7Xh_a`H_\`JPD`*`M_o`OCe`QPP`S_+`N`V_j`XPi`ZO:`\
`]\BY/^wWj`U`d`^`/Fo^qOK`m`n`q`r`sON`_Q@PjY*HUL0`ya+a,a-`z_r_k`ja2L-URa3
a6=TEYa7a:^G]ja;a>DNPja?aBVq^8aCaFZJaEaGaJ[NaIaKaNKIa5aOaRKWaQaSaVa4aMaW
aZ_IaUa[a^`RaY>.a.ac<K<vadD1GVaA>1agal[p<tamD-P2CXa9=jYHD<N@^:QYawaj>0av
G]arYyV?Gga]ab`vGsb/VHY`b2aa=zb-D8axb0VXb*b3b<b5Y6afbE>4b7OXb+>/b=GobJZd
bAb:a=>;bNCdb?b8NnbBaMBONICR^.bVBoKbTORKI8bPW^ZU^.^.V,b[bT@lbdT9Jy@rS*<z
baRzFjZ?W6=aHD\a<qbvLeJ?JAbkJDVIIebgOgb+T\]+X.KD=1c.UAYvZ*c;=h<GI`bX\DGC
btcI=BcD]YbWc8[,]Hc;PbKbZjN3C>c>TSWB\hFlcBJ0Kf=KYHKFcFbQZ-TG@uc_KpUL\9<n
cacEc6OncOKm\nTT\3KeVcRLbYUuZv[EM2FD[zcK`mcM<pcXW7B/T7SpM4TM<xcmd1GvcO?n
LAME^-\IKvc-bEVuSnd9ZYT4U-=Cd;c,d2ZNKld9C,T>EccTQ3dNc5aiaUdGX2ctLu[z[ed3
S+cZE4EoBnd.=AdY^+<rdcd_JJAfMwTidXd0dOd=d\deX2MTLU[Z?SZ;ay=<dGdscBT-^>c=
<^XIdZ<udce*MfM\WQdLbG^j]/bm^XZ9]GMxZiZ,dISi]HKBe;Z>deS?WbZx^L^Nc=;qd<cl
KHeSdS^MSOWEF9<we7e8dlcNbCRf]==*eO=lc2>*coekHIcoCFatZ7dMbH=C]\=`ccbhYhb>
bLRR=EepCC]dezeoew=tf*c7eg=xf1R+f5b9f-f:=wf<QJbGf?Gof.bDDLf8X:azbSeE>=fC
VAaof6DDerQmfH=yfQesf>bZfN_P><^Z`tfbeBF=ecfcCld[b;fYfgflQv<sfffmCifibna_
fu`6fAfvfyF[fxfzfuetg,aNg.g/aJg1g2aFg4g5aBg7g8a>g:g;a:g=g>a6g@gAa2gCgD`d
gFgG`VgIgJ`HgLgM`:gOgP`-gRgS_pgUgV_bgXgY_Tg[g\_Fg^g__8gagb_*gdgeX\ggghXL
gjgkX5gmgnWigpgqWJgsgtPfgvgwPMgygzP5h+h,Ouh.h/Ofh1h2OWh4h5H3h7h8Guh:h;Gf
h=h>GUh@hAGDhChDG.hFhGFaCffqhMhNhOhPhQO>GyaphUhVhWhXhYHChIhJEWh\h]E;h_h`
DvhbhcDrhehfDnhhhiDofXhl_MhkhoEIhnhrgchthugfhwhxgihzi*glajhZ<=>]i0fZB+i3
F\D;i3fV>9i9DAi<R0aQi4FYi:>8iA=UfKCLiEa8Nci8fTS->[iI=SiGCGiPUm`wi@iM[G>\
iT>XiCC8i[TYiVaIi_CVi]>2icYMD>igYXiaftcd>1iRi;iXeni=ir]RilfOe/PWieakiu]e
iij,GXiKi/YSb]^Ei2P7]oihD=i4N;ZEi?ibj3LVE5]giOj7ZAG6\5D<fZd@VCFQiWTqjAIY
Y8iZjEcJE:jRj:P[ctQoiwf_b@BoLwBW^U>WfC@hUBcieV[Lj.bwBeKyT]]>j>imf+C;crQh
jb>Vjdj4d7jK[=itjkQULHey\Mj\Wy^DScd?].\zjwjT[_LzMD\Vj*BkfQJ1LLc\eidvC@j?
jOk6juUoj6k5THQELdjWjIjY\q\3bpbljMkHf/\0dzk8>Ujxk.\UkEkFCbjJL@\GSJ=dj1jN
k[eGN8V8kMc?e`T]e\kRD9j;SmjfZrkjk2XOk4>/ipiDj/jCkSQzkkkZJMk?bMl2^5jjL+l6
jq\`YTkql8k,l>l,.\Fpijj=jDl5lElDj>.[-[lIl;jvk_lTkLl=lOkY5Ql-iyQFl9b4lMlY
lBjpixj^iol`fIlFlcNAl?lfVHhRlifYfphNitlql,[1^olwiZlqlrAYltlulej]i-gWi,m3
Wvhqm6EXm5m9gum;m<gxm>m?h*mAmBh-mDmEh0mGmHh3mJmKh6mMmNh9mPmQh<Gjm,mWmXmY
mZm[;pG`i6m_m`mambmc<B<`/:mgmhmimjmkmlmmmn-O9Amomrmsmtmumvmwmx-L7?.V4o5*
n-n.n//i4N0`.Dn+n0n6n7n8/]n20B-k.o5O5Mn@nAnBnCnDnEnFnFn?/*nGnKnLnMnNnOnP
nQ5I
%%Trailer
%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

/originalCTM matrix currentmatrix def

3 1 0 [] 0 SetB
%I cfg Black
 0 0 0 SetCFg
%I cbg White
 1 1 1 SetCBg
 none SetP %I p n


% Arrows above bitmap, left to right, 1 to 3

/YY 420 def

 28 377  28 YY Line
 80 377 128 YY Line
 80 340 228 YY Line
490 340 490 YY Line

% Arrows below bitmap, left to right, 1 to 6

/YY 30 def

 60  64  60 YY Line
130 172 130 YY Line
190 136 190 YY Line
250  64 250 YY Line
340 136 340 YY Line
420 172 420 YY Line
490  64 490 YY Line

/centershow {dup stringwidth pop -2 div 0 rmoveto show} def

/ZapfDingbats findfont 18 scalefont setfont

% Text above bitmap

/YY 425 def

 28 YY moveto (\300) centershow % Text circled 1, white background
133 YY moveto (\301) centershow % Text circled 2, white background
235 YY moveto (\302) centershow % Text circled 3, white background
490 YY moveto (\303) centershow % Text circled 4, white background

% Text below bitmap

/YY 13 def

 60 YY moveto (\312) centershow % Text circled 1, black background
130 YY moveto (\313) centershow % Text circled 2, black background
190 YY moveto (\314) centershow % Text circled 3, black background
250 YY moveto (\315) centershow % Text circled 4, black background
340 YY moveto (\316) centershow % Text circled 5, black background
420 YY moveto (\317) centershow % Text circled 6, black background
490 YY moveto (\320) centershow % Text circled 7, black background

showpage
%%Trailer

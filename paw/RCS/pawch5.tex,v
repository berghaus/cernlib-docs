head	1.4;
access;
symbols;
locks
	goossens:1.4; strict;


1.4
date	96.01.23.13.45.05;	author goossens;	state Exp;
branches;
next	1.3;

1.3
date	95.02.13.12.23.07;	author goossens;	state Exp;
branches;
next	1.2;

1.2
date	94.06.10.11.16.14;	author goossens;	state Exp;
branches;
next	1.1;

1.1
date	94.01.17.12.47.22;	author goossens;	state Exp;
branches;
next	;


desc
@Initial installment
@


1.4
log
@New version from OC
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                 %
%   PAW   - Reference Manual -- LaTeX Source                      %
%                                                                 %
%   Chapter 5: Vectors                                            %
%                                                                 %
%   EPS file      : cernlogo.eps                                  %
%                                                                 %
%   Editor: Michel Goossens / CN-AS                               %
%   Last Mod.: 13 July 1992 17:30 mg                              %
%                                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\chapter{Vectors}
\label{sec:H1PVECT}
\index{vector}
\index{array}
\index{SIGMA}
\index{COMIS}
 
Vectors are named arrays of numerical data, memory resident,
which can be created during a session,
loaded from HBOOK objects, typed in by hand, read from disk
files, operated upon using the full functionality of SIGMA or COMIS.
Vectors can be used to
produce graphics output, and, if necessary, stored away
on disk files for further usage.
Vectors provide a very convenient mechanism to transport
numerical information between different PAW objects, and
to manipulate mathematically their content.
At the end of an interactive session, they are
lost, unless previously saved onto disk files.
 
Vectors can have up to 3 dimensions (in fact they are ``arrays'',
called ``vectors'' for historical reasons).
They can be handled in PAW either interactively,
by using \PAWcind{VECTOR}\Lit{/... } commands,
or by means of KUIP routines which return the addresses of a
given vector.
 
Simple arithmetic operations can be applied to vectors.
In addition, as SIGMA is part of PAW,
powerful array manipulation operations are available,
through the SIGMA, \Lit{$SIGMA}
and \Cind{APPLICATION} \Lit{SIGMA} commands 
(see section \ref{sec:H2SIGMA} on page~\pageref{sec:H2SIGMA}).
 
An ``invisible'' vector named \Lit{?}, mono-dimensional and
of length 100,
is always present. It is used for communication between arrays in
the user code (for instance in a COMIS\cite{bib-COMIS} routine)
and KUIP vectors, being equivalenced with the real array 
\Lit{VECTOR(100)} in the labelled common block \Lit{/KCWORK/}.

\section{Vector creation and filling}
\index{create!vector}
\index{vector!create}
\index{fill!vector}
\index{vector!fill}

A vector is {\bf created} either by the {\bf PAW command}
\Lit{VECTOR/CREATE}, by the {\bf SIGMA function} \PAWcind{ARRAY}.
or by the {\bf COMIS statement} \PAWcind{VECTOR}.

\begin{XMPt}{Example of vector creation}
\Ucom{VECTOR/CREATE  X(100)}      will create a 100-components vector, values = 0.
\Ucom{SIGMA X=ARRAY(100,1#100)}   will create a 100-components vector and assign
                            to each element the values 1,2,...100
\Ucom{ VECTOR X(100)}             in a COMIS routine creates a 100-components vector
                           and initialises each element to zero
\end{XMPt}
 
Once the vector is created, it can be manipulated
using the following PAW commands:

\begin{DLtt}{12345678901234567890}
\item[\Lit{VECTOR/INPUT} vlist]
       Input from the terminal values into the vector 
       elements specified by the list \Lit{vlist}.
\item[\Lit{VECTOR/READ} vlist]
       Values can be {\bf read in} from a file
       into the vector elements specified by the list vlist.
\item[\Lit{VECTOR/COPY} v1 v2]
       Values in \Lit{v1} are copied into \Lit{v2}.
\item[\Lit{VECTOR/WRITE} vlist]
       Values in the vector elements specified by the
       list vlist can be {\bf saved} on a file.
\item[\Lit{VECTOR/PRINT} vlist]
       Values of the vector elements specified in \Lit{vlist} will be
       {\bf printed} on the terminal.
\item[\Lit{VECTOR/LIST}]
       A {\bf list} of existing vectors and their
       {\bf characteristics} is printed on the terminal.
\item[\Lit{VECTOR/DELETE}]
       Allows global or selective deletion of vectors.
\end{DLtt}

\newpage 

\section{Vector addressing}
\index{vector!address}
\index{addressing of vectors}

Indexing of vectors is possible\footnote{Note that the 
indexing permitted in PAW can be considered as a superset
of that permitted by FORTRAN.
This feature cannot be used from within SIGMA.}.

\begin{XMPt}{Example of vector indices}
{\bf Vec}            for all elements
{\bf Vec(13)}        for element 13
{\bf Vec(12:)}       for elements 12 up to the last
{\bf Vec(:10)}       for elements 1 to 10
{\bf Vec(5:8)}       for elements 5 to 8
\end{XMPt}

Sub-elements of the two-dimensional vector \Lit{Vec(3,100)}
(3 columns by 100 rows) may be addressed by:

\begin{XMPt}{Using two-dimensional vectors}
{\bf Vec(2,5:8)}     for elements 5 to 8 in column 2
{\bf Vec(2:3,5:8)}   for elements 5 to 8 columns 2 to 3
{\bf Vec(2,5)}       for element 5 in column 2
{\bf Vec(:,3)}       for all elements in row 3
{\bf Vec(2)}         for all elements in the 2-nd column (SPECIAL CASE)
\end{XMPt}

\section{Vector arithmetic operations}
\index{vector!arithmetic}
\index{operation on vectors}
 
A number of basic vector arithmetic operations is available:

\begin{DLtt}{1234567890123456789012}
\item[VBIAS     v1 bias v2]   \Lit{v2(I) = bias + v1(I)}
\item[VSCALE    v1 scale v2]  \Lit{v2(I) = scale * v1(I)}
\item[VADD      v1 v2 v3]     \Lit{v3(I) = v1(I) + v2(I)}
\item[VMULTI    v1 v2 v3]     \Lit{v3(I) = v1(I) * v2(I)}
\item[VSUBTR    v1 v2 v3]     \Lit{v3(I) = v1(I) - v2(I)}
\item[VDIVID    v1 v2 v3]     \Lit{v3(I) = v1(I) / v2(I), if v2(I)<>0}
\end{DLtt}
 
In all operations only the minimum vector length is considered,
i.e. an operation between a vector \Lit{A} of dimension 10 and a vector 
\Lit{B} of dimension 5 will involve the first 5 elements for both vectors.
If the destination vector does not exist,
it is created with the same length as specified in the source vector.

\section{Vector arithmetic operations using SIGMA}
\index{SIGMA}

A more complete and convenient mechanism for the mathematical
manipulation of entire vectors is provided by SIGMA.
SIGMA-generated arrays are stored as
PAW vectors and therefore are accessible
to PAW commands, and PAW vectors are accessible to SIGMA.
The facilities available via SIGMA are described in the next chapter.

\newpage

\section{Using KUIP vectors in a COMIS routine}
\index{COMIS}
\index{KUIP!vector}
 
The declaration \Ucom{VECTOR vector\_name}
may be used inside a COMIS routine to address a KUIP vector.
If the vector does not exist, it is created with the specifications
provided by the declared dimension.

\section{Usage of vectors with other PAW objects}
 
Vectors can be used to transport
numerical information between different PAW objects, and
to manipulate mathematically their content.

\begin{DLtt}{1234567890123456789012345678901}
\item[\Lit{VECTOR/HFILL} VNAME ID]
     Each vector element of \Lit{VNAME} 
     is used to fill the existing \mbox{histogram \Lit{ID}.}
\item[\Lit{HISTOGRAM/GET_VECTOR/CONTEN}]
     Provides an interface between vectors and histograms.
\item[\Lit{HISTOGRAM/PUT_VECTOR/CONTEN}]
     Provides an interface between histograms and vectors.
\end{DLtt}

\section{Graphical output of vectors}
\index{graphical!output}

\begin{DLtt}{123456789012345678901234}
\item[\Lit{VECTOR/DRAW} VNAME]
     Interprets the content of the vector \Lit{VNAME}
     as a histogram contents and draw a {\bf graph}.
\item[\Lit{VECTOR/PLOT} VNAME]
     Vector elements are considered as individual values
     to be entered into a histogram and a graph is produced.
     If \Lit{VNAME} is the name of a vector, then each vector element of
     \Lit{VNAME} is used to fill a histogram which is 
     automatically booked with 100 channels and plotted.
     If \Lit{VNAME} has the form \Lit{VNAME1%VNAME2}
     then a scatter-plot of vector \Lit{VNAME1}
     versus \Lit{VNAME2} is plotted.
\end{DLtt}
 
See section~\ref{sec:vectordrawplot}
in the tutorial section for an
explanation of the difference between \Lit{VECTOR/DRAW}
and \Lit{VECTOR/PLOT}.
 
A number of HIGZ~\cite{bib-HIGZ} macro-primitives are available
in PAW.
Those directly related to the graphical output of vectors are:

\begin{DLtt}{123456789012345678901234}
\index{GRAPH}
\item[GRAPH N X Y]
     Draw a curve through a set of points defined by arrays 
     \Lit{X} and \Lit{Y}.
\index{HIST}
\item[HIST  N X Y]
     Draw an histogram defined by arrays \Lit{X} and \Lit{Y}.
\index{PIE}
\item[PIE   X0 Y0 RAD N VAL]
     Draw a pie chart, of \Lit{N} slices, 
     with size of slices given in \Lit{VAL},
     of a radius \Lit{RAD}, centered at \Lit{X0}, \Lit{Y0}.
\end{DLtt}

\section{Fitting the contents of a vector}
\index{fit!vector}
 
A user defined (and parameter dependent) function
can be fitted to the points defined by the two vectors \Lit{X}
and \Lit{Y} and the vector of associated errors \Lit{EY}.
The general syntax of the command to fit vectors is:

\Lit{VECTOR/FIT} \Lit{x y ey func [ chopt np par step pmin pmax errpar ]}

For more information the reader is referred to the reference part of
the present manual.

@


1.3
log
@Version Feb. 13th 1995 (MG)
@
text
@d98 1
a98 1
\finalnewpage 
d159 1
a159 1
\finalnewpage
d178 2
a179 3
     Each vector element of vector \Lit{VNAME} 
     is used to fill an existing histogram 
     with identifier \Lit{ID}.
@


1.2
log
@small mod
@
text
@d98 1
a98 1
\newpage 
d159 1
a159 1
\newpage
d178 3
a180 2
     Each vector element of \Lit{VNAME} 
     is used to fill the existing \mbox{histogram \Lit{ID}.}
@


1.1
log
@Initial revision
@
text
@d45 1
a45 1
and \RCMD{KSAPPLIC} \Lit{SIGMA} commands 
d62 1
a62 1
\Lit{VECTOR/\RCMD{V0CREATE}}, by the {\bf SIGMA function} \PAWcind{ARRAY}.
d77 1
a77 1
\item[\Lit{VECTOR/\RCMD{V0INPUT}} vlist]
d80 1
a80 1
\item[\Lit{VECTOR/\RCMD{V0READ}} vlist]
d83 1
a83 1
\item[\Lit{VECTOR/\RCMD{V0COPY}} v1 v2]
d85 1
a85 1
\item[\Lit{VECTOR/\RCMD{V0WRITE}} vlist]
d88 1
a88 1
\item[\Lit{VECTOR/\RCMD{V0PRINT}} vlist]
d91 1
a91 1
\item[\Lit{VECTOR/\RCMD{V0LIST}}]
d94 1
a94 1
\item[\Lit{VECTOR/\RCMD{V0DELETE}}]
d135 6
a140 6
\item[\RCMD{VOVBIAS}     v1 bias v2]   \Lit{v2(I) = bias + v1(I)}
\item[\RCMD{VOVSCALE}    v1 scale v2]  \Lit{v2(I) = scale * v1(I)}
\item[\RCMD{VOVADD}      v1 v2 v3]     \Lit{v3(I) = v1(I) + v2(I)}
\item[\RCMD{VOVMULTI}    v1 v2 v3]     \Lit{v3(I) = v1(I) * v2(I)}
\item[\RCMD{VOVSUBTR}    v1 v2 v3]     \Lit{v3(I) = v1(I) - v2(I)}
\item[\RCMD{VOVDIVID}    v1 v2 v3]     \Lit{v3(I) = v1(I) / v2(I), if v2(I)<>0}
d177 1
a177 1
\item[\Lit{VECTOR/\RCMD{V0HFILL}} VNAME ID]
d180 1
a180 1
\item[\Lit{HISTOGRAM/GET_VECTOR/\RCMD{HGCONTEN}}]
d182 1
a182 1
\item[\Lit{HISTOGRAM/PUT_VECTOR/\RCMD{HPCONTEN}}]
d190 1
a190 1
\item[\Lit{VECTOR/\RCMD{V0DRAW}} VNAME]
d193 1
a193 1
\item[\Lit{VECTOR/\RCMD{V0PLOT}} VNAME]
d204 4
a207 3
See figure \ref{fig:TUTEX4} in the tutorial section for an
explanation of the difference between \Lit{VECTOR/\RCMD{V0DRAW}}
and \Lit{VECTOR/\RCMD{V0PLOT}}.
d215 1
a215 1
\item[\RCMD{GPGRAPH} N X Y]
d219 1
a219 1
\item[\RCMD{GPHIST}  N X Y]
d222 1
a222 1
\item[\RCMD{GPPIE}   X0 Y0 RAD N VAL]
d236 1
a236 1
\Lit{VECTOR/\RCMD{V0FIT}} \Lit{x y ey func [ chopt np par step pmin pmax errpar ]}
@

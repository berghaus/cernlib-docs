head     1.1;
branch   ;
access   ;
symbols  ;
locks    goossens:1.1; strict;
comment  @@;


1.1
date     94.06.09.09.59.15;  author goossens;  state Exp;
branches ;
next     ;


desc
@initial entry
@



1.1
log
@Initial revision
@
text
@% (C) Copyright Frank Mittelbach 1992,1993.
% All rights reserved.
%
%
% This style defines an extended definition of \newcommand and its
% relatives allowing one optional argument.
%
% Intended for inclusion in LaTeX2+
%
% \newcommand
%      {<cmd>}
%      [<num mandatory (+ optional if any) args>]
%      [<default for optional arg>]
%      {<code>}
 
 
% this makes the following definitions in latex.tex obsolete
%
% \newcommand           redefined
% \renewcommand         redefined
% \renewenvironment     redefined
%
%
%
% \@@newenv              redefined
% \@@renewenv            removed
% \@@argdef              redefined
% \@@reargdef            redefined
 
 
 
\def\renewcommand#1{%
  \@@ifundefined{\expandafter\@@gobble\string#1}%
     {\@@latexerr{\string#1\space undefined}\@@ehc
     }{}%
  \let#1\relax
  \newcommand#1%
}
 
\def\newenvironment#1{%
  \@@ifnextchar [{\@@newenv{#1}}{\@@newenv{#1}[0]}}
 
\def\renewenvironment#1{%
  \@@ifundefined{#1}%
     {\@@latexerr{Environment #1\space undefined}\@@ehc
     }{}%
  \expandafter\let\csname#1\endcsname\relax
  \newenvironment{#1}%
}
 
\def\@@newenv#1[#2]{%
  \@@ifnextchar [{\@@xoptenvargdef#1[#2]}%
                {\@@envargdef#1[#2]}%
}
 
\long\def\@@envargdef#1[#2]#3#4{\expandafter\newcommand
     \csname #1\endcsname[#2]{#3}\long
     \expandafter\def\csname end#1\endcsname{#4}}
 
\long\def\@@xoptenvargdef#1[#2][#3]{%
  \@@envargdef#1[{#2][#3}]%
}
 
\def\newcommand#1{%
  \@@ifnextchar [{\@@newcommand#1}{\@@newcommand#1[0]}}
 
 
\def\@@newcommand#1[#2]{%
  \@@ifnextchar [{\@@xoptargdef#1[#2]}%
                {\@@argdef#1[#2]}%
}
\long\def\@@argdef#1[#2]#3{%
   \@@ifdefinable #1{\@@reargdef#1\@@ne{#2}{#3}}}
 
 
 
\long\def\@@xoptargdef#1[#2][#3]#4{%
  \@@ifdefinable#1{%
%    \end{macrocode}
%    Define the actual command to be
%\begin{verbatim}
%  \def\foo{\@@ifnextchar[%
%             \\foo
%             \\foo[default]}
%\end{verbatim}
%    where |\\foo| is a csname generated from applying |\csname| and
%    |\string| to |\foo|, ie the actual name contains a backslash and
%    therefore can't clash easily with exisiting command names.
%    ``Default'' is the contents of the second optional argument of
%    |\(re)newcommand|.
%    \begin{macrocode}
     \expandafter\def\expandafter#1\expandafter{%
          \expandafter
          \@@ifnextchar
          \expandafter
             [%
          \csname\string#1\expandafter\endcsname
          \expandafter
          {\csname\string#1\endcsname[#3]}}%
%    \end{macrocode}
%    Now we define the internal macro (ie |\\foo| which is supposed to
%    pick up all arguments (optional and mandatory).
%    \begin{macrocode}
       \expandafter\@@reargdef
          \csname\string#1\endcsname
           \tw@@
           {#2}%
           {#4}%
   }%
}
 
 
% Absolutely untypable control sequence \@@?@@?  substituted for \@@tempb in
% definition of \@@reargdef because it (and therefore \newcommand and
% \renewcommand) leaves the control sequence dangerously \let to #.
% (Change made 23 November 87.)
%
\catcode`\!=11\relax
\long\def\@@reargdef#1#2#3{%
  \@@tempcnta#3\relax
  \advance \@@tempcnta \@@ne
  \let#1\relax
  \let\@@!@@!\relax
  \edef\@@tempa{\long\def#1%
     \ifx#2\tw@@ [\@@!@@!1]\fi}%
  \@@tempcntb #2%
  \@@whilenum\@@tempcntb <\@@tempcnta
     \do{%
         \edef\@@tempa{\@@tempa\@@!@@!\the\@@tempcntb}%
         \advance\@@tempcntb \@@ne}%
  \let\@@!@@!##%
  \@@tempa
}
\catcode`\?=12\relax
 
 
 
\endinput
 
\documentstyle[optarg]{article}
 
\newcommand{\bas}[1][3]{\linebreak[#1]}
\renewcommand{\bar}[1][*]{\item[#1]}
 
\renewenvironment{itemize}[1][3cm]
  {\begin{list}{}{\leftmargin=#1}}
  {\end{list}}
\newenvironment{mytab}[2][t]{%
  \begin{tabular}[#1]{#2}}
  {\end{tabular}}
\begin{document}
\begin{itemize}
\bar
{ blub
\tracingall
blu
\bas
bum
}%
 bum
\item
basssssss
\end{itemize}
 
\begin{mytab}{ll}
  ab & ddd \\
  ffoo
\end{mytab}
some more text
\begin{mytab}[b]{ll}
  ab & ddd \\
  ffoo
\end{mytab}
 
\end{document}
Date: Wed, 09 Jun 1993 21:01:44 +0200
From: Frank Mittelbach <MITTELBACH@@mzdmza.zdv.uni-mainz.de>
Subject: optarg.sty
To: GOOSSENS@@cernvm.cern.ch
 
% (C) Copyright Frank Mittelbach 1992,1993.
% All rights reserved.
%
%
% This style defines an extended definition of \newcommand and its
% relatives allowing one optional argument.
%
% Intended for inclusion in LaTeX2+
%
% \newcommand
%      {<cmd>}
%      [<num mandatory (+ optional if any) args>]
%      [<default for optional arg>]
%      {<code>}
 
 
% this makes the following definitions in latex.tex obsolete
%
% \newcommand           redefined
% \renewcommand         redefined
% \renewenvironment     redefined
%
%
%
% \@@newenv              redefined
% \@@renewenv            removed
% \@@argdef              redefined
% \@@reargdef            redefined
 
 
 
\def\renewcommand#1{%
  \@@ifundefined{\expandafter\@@gobble\string#1}%
     {\@@latexerr{\string#1\space undefined}\@@ehc
     }{}%
  \let#1\relax
  \newcommand#1%
}
 
\def\newenvironment#1{%
  \@@ifnextchar [{\@@newenv{#1}}{\@@newenv{#1}[0]}}
 
\def\renewenvironment#1{%
  \@@ifundefined{#1}%
     {\@@latexerr{Environment #1\space undefined}\@@ehc
     }{}%
  \expandafter\let\csname#1\endcsname\relax
  \newenvironment{#1}%
}
 
\def\@@newenv#1[#2]{%
  \@@ifnextchar [{\@@xoptenvargdef#1[#2]}%
                {\@@envargdef#1[#2]}%
}
 
\long\def\@@envargdef#1[#2]#3#4{\expandafter\newcommand
     \csname #1\endcsname[#2]{#3}\long
     \expandafter\def\csname end#1\endcsname{#4}}
 
\long\def\@@xoptenvargdef#1[#2][#3]{%
  \@@envargdef#1[{#2][#3}]%
}
 
\def\newcommand#1{%
  \@@ifnextchar [{\@@newcommand#1}{\@@newcommand#1[0]}}
 
 
\def\@@newcommand#1[#2]{%
  \@@ifnextchar [{\@@xoptargdef#1[#2]}%
                {\@@argdef#1[#2]}%
}
\long\def\@@argdef#1[#2]#3{%
   \@@ifdefinable #1{\@@reargdef#1\@@ne{#2}{#3}}}
 
 
 
\long\def\@@xoptargdef#1[#2][#3]#4{%
  \@@ifdefinable#1{%
%    \end{macrocode}
%    Define the actual command to be
%\begin{verbatim}
%  \def\foo{\@@ifnextchar[%
%             \\foo
%             \\foo[default]}
%\end{verbatim}
%    where |\\foo| is a csname generated from applying |\csname| and
%    |\string| to |\foo|, ie the actual name contains a backslash and
%    therefore can't clash easily with exisiting command names.
%    ``Default'' is the contents of the second optional argument of
%    |\(re)newcommand|.
%    \begin{macrocode}
     \expandafter\def\expandafter#1\expandafter{%
          \expandafter
          \@@ifnextchar
          \expandafter
             [%
          \csname\string#1\expandafter\endcsname
          \expandafter
          {\csname\string#1\endcsname[#3]}}%
%    \end{macrocode}
%    Now we define the internal macro (ie |\\foo| which is supposed to
%    pick up all arguments (optional and mandatory).
%    \begin{macrocode}
       \expandafter\@@reargdef
          \csname\string#1\endcsname
           \tw@@
           {#2}%
           {#4}%
   }%
}
 
 
% Absolutely untypable control sequence \@@?@@?  substituted for \@@tempb in
% definition of \@@reargdef because it (and therefore \newcommand and
% \renewcommand) leaves the control sequence dangerously \let to #.
% (Change made 23 November 87.)
%
\catcode`\?=11\relax
\long\def\@@reargdef#1#2#3{%
  \@@tempcnta#3\relax
  \advance \@@tempcnta \@@ne
  \let#1\relax
  \let\@@?@@?\relax
  \edef\@@tempa{\long\def#1%
     \ifx#2\tw@@ [\@@?@@?1]\fi}%
  \@@tempcntb #2%
  \@@whilenum\@@tempcntb <\@@tempcnta
     \do{%
         \edef\@@tempa{\@@tempa\@@?@@?\the\@@tempcntb}%
         \advance\@@tempcntb \@@ne}%
  \let\@@?@@?##%
  \@@tempa
}
\catcode`\?=12\relax
 
 
 
\endinput
 
\documentstyle[optarg]{article}
 
\newcommand{\bas}[1][3]{\linebreak[#1]}
\renewcommand{\bar}[1][*]{\item[#1]}
 
\renewenvironment{itemize}[1][3cm]
  {\begin{list}{}{\leftmargin=#1}}
  {\end{list}}
\newenvironment{mytab}[2][t]{%
  \begin{tabular}[#1]{#2}}
  {\end{tabular}}
\begin{document}
\begin{itemize}
\bar
{ blub
\tracingall
blu
\bas
bum
}%
 bum
\item
basssssss
\end{itemize}
 
\begin{mytab}{ll}
  ab & ddd \\
  ffoo
\end{mytab}
some more text
\begin{mytab}[b]{ll}
  ab & ddd \\
  ffoo
\end{mytab}
 
\end{document}
@

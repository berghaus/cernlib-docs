%!PS-Adobe-2.0 EPSF-2.0
%%Title: generalattributes.eps
%%Creator: xpick Version 1.00  Rev: 22/03/93 - by Evgeni Chernyaev
%%BoundingBox: 0 12 548 299
%%EndComments
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                                   *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a Lempel-Ziv Welch (LZW) encoded color image.     *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/CriticalSize 300000 def
systemdict /colorimage known { /incr 3 def } { /incr 1 def } ifelse
/Length 81 81 mul def
/Table Length array def
/Prefix Length array def
/Length Length incr mul def
/String Length string def
%***********************************************************************
/ReadCode                % Read next code from file                    *
%***********************************************************************
{
  { currentfile read pop
    dup dup 42 ge exch 123 lt and { exit } { pop } ifelse
  } loop
  42 sub 81 mul
  currentfile read pop 42 sub add
  /CurCode exch def
} bind def
%***********************************************************************
/DecodeCodeA             % Decode CurCode (fast, but memory demanding) *
%***********************************************************************
{
  ReadCode
  CurCode Ncol eq {
    ReadCode
    /FreeCode Ncol 1 add def
  }{
    //Table FreeCode L incr add string
    dup 0 Table OldCode get putinterval
    dup L Table CurCode FreeCode lt { CurCode } { OldCode } ifelse get
    0 incr getinterval putinterval put
    /FreeCode FreeCode 1 add def
  } ifelse
  /OldCode CurCode def
  Table CurCode get dup length /L exch def
} bind def
%***********************************************************************
/DecodeCodeB         % Decode CurCode (not memory demanding, but slow) *
%***********************************************************************
{
  /iout //Length //incr sub def
  ReadCode
  CurCode Ncol eq {
    /FreeCode Ncol 1 add def
    ReadCode
    /OldCode CurCode def
    /FinChar CurCode def
    String iout Table CurCode get putinterval
  }{
    /InCode CurCode def
    CurCode FreeCode eq {
      /CurCode OldCode def
      String iout Table FinChar get putinterval
      /iout iout //incr sub def
    } if
    iout //incr neg 0 {
      CurCode Ncol lt { exit } if
      String exch Table CurCode get putinterval
      /CurCode Prefix CurCode get def
    } for
    /iout exch def
    /FinChar CurCode def
    String iout Table FinChar get putinterval
    Prefix FreeCode OldCode put
    Table FreeCode Table FinChar get put
    /FreeCode FreeCode 1 add def
    /OldCode InCode def
  } ifelse
  String iout //Length iout sub getinterval
}bind def
%***********************************************************************
/DisplayImage            % Display a LZW-encoded color image           *
%***********************************************************************
{
  gsave
  /buffer 72 string def
  currentfile buffer readline pop
  token { /degrees exch def pop } { } ifelse
  degrees rotate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y translate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def pop } { } ifelse
  x y scale
  currentfile buffer readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile buffer readline pop
  token { /Ncol exch def pop } { } ifelse
  systemdict /colorimage known {
    0 1 Ncol 1 sub {
      Table exch
      currentfile 3 string readhexstring pop put
    } for
    columns rows mul CriticalSize lt {
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeA } false 3 colorimage
    }{
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeB } false 3 colorimage
    } ifelse
  }{
    /color 3 string def
    0 1 Ncol 1 sub {
      Table exch
      1 string dup 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put put
    } for
    columns rows mul CriticalSize lt {
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeA } image
    }{
      columns rows 8
      [ columns 0 0 rows neg 0 rows ]
      { DecodeCodeB } image
    } ifelse
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
0.00
0 50
548.00 211.37
560 216
256
000000 ffffff 00ffff 9f0028 870022 d18598 460012 ffffff 53559e 474887
b0b1d3 28294c ffffff e1e3bc bfc1a0 f2f3e3 7e7f69 000000 f0b550 cc9a44
f8dfb2 7f602a ffffff 645fa2 55518a b8b5d4 312e50 ffffff b53560 9a2d51
dda2b6 57192e ffffff 7f7f9b 6c6c84 c5c5d2 3f3f4e ffffff 700070 5f005f
ba85ba 320032 ffffff e1e3bc f5f5dc afafaf 7d7d7d 4b4b4b 969696 646464
c8c8c8 e1e1e1 323232 ff00ff ff0000 0000ff 00ff00 71725e 7f7f7f ffff00
f9f9f9 f3f3f3 ededed e7e7e7 dbdbdb d4d4d4 cecece c2c2c2 bcbcbc b6b6b6
b0b0b0 aaaaaa a4a4a4 9e9e9e 989898 929292 8c8c8c 868686 808080 797979
737373 6d6d6d 676767 616161 5b5b5b 555555 4f4f4f 494949 434343 3d3d3d
373737 313131 2b2b2b 242424 1e1e1e 181818 121212 0c0c0c 060606 0000cc
0013cc 0027cc 003acc 004ecc 0061cc 0075cc 0088cc 009bcc 00afcc 00c2cc
00ccc2 00ccaf 00cc9b 00cc88 00cc75 00cc61 00cc4e 00cc3a 00cc27 00cc13
00cc00 13cc00 27cc00 3acc00 4ecc00 61cc00 75cc00 88cc00 9bcc00 afcc00
c2cc00 ccc200 ccaf00 cc9b00 cc8800 cc7500 cc6100 cc4e00 cc3a00 cc2700
cc1300 d9dcc7 f0af3a bc2458 7875b8 6666ff 9999ff 9e9e50 9e99bd bf4040
e0a3a3 602020 afaf30 dddda8 60601a 30bf30 a0e2a0 196319 30afaf a2dbdb
195d5d 3030bf 9393de 17175a af30af d99cd9 581858 4d4d4d efefef bfbfbf
838383 fe0000 fe7d7d 770000 d80000 00fe00 8cff8c 008700 00d800 0000fe
7070fe 000070 0000d8 1010ef 98fbcd 0d6263 8ffecb c7c7c7 00fbcd fffbcd
9800cd 98ffcd 98fb00 98fbff aaaf83 000086 98fbcd 666666 808300 80f1f2
008a00 4f93cc cc940c cc1076 807f69 2efefd b8fefd 9e0028 d8dbc6 cb4e00
7875b7 00cb4e efae3a 0000cb 00d8d8 0013cb 0027cb 00e4e4 003acb 004ecb
0061cb 00f1f1 0075cb 0087cb 009acb 00aecb 0dfefe 00c1cb 00cbc1 00cbae
00cb9a 1afefe 00cb87 00cb61 00cb75 00cb3a 00cb27 00cb13 00cb00 26fefe
13cb00 3acb00 27cb00 4ecb00 33fefe 61cb00 75cb00 87cb00 9acb00 aecb00
c1cb00 cbc100 cbae00 cb9a00 cb8700 4dfefe
-7*/-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y
-Z-[-\-]-^-_-`-a-b-c-d-\*0-8*--i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z.*.+.,
.-.../.0.1.2.3.4.5.6.2*0-g*/.7.<.=.>.?.@.A.B.C.D.E.F.G.H-j.9-h*-.9.N.O.P
.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.d-i.K.;.M-e.r.s.t
.u.v.w.x.y.z-Z.n.:.n.p-w-g.I/2/3/4/5/6/7/8/9/:-t/1.M/-.q-y/=/;/C/D/E/F/G
/H/I.D/=.o/./A///J/Q/R/S/T/U/V/3/L/?/B-v/[/W/^/D*1/a*1.E/a-o/e.*/g/g/_/k
/l-n/Y.L/]/</P/m/t.I/b-i/j.A/y-j/w-k/j0*0-/c*-0/-q03/u06/4/o.p/q-s0;070>
.=/y05.703/e0A01020G-p0B/f0I0?0N.G09/N-x0=0O0U./0K/b0G0E0F0./c/i0,0H-n0[
/x0Y0e0a0c0g0]0+0^0Y0d0\0M0V0q.+0Q/@-i-B.J/s0r0z/h0p0k0d0n1.0a110f0_1000
150j0n0h0,1410181<0K1*1A/n0:/Z//0y-k*00x1B1K-w0o11120Z0l1-1O-l0h1U01181O
0F0H1Q1T1?1]1T1L1b-p0t/B1G.J1J1c1j0b0M0_0m1Z1X0f1a1r0/1>1`1^1q161v0k1o1/
1k2.0R/M0u*-*/.V1i2/2.0*1V161.0D0I1_1W0e1y172>2B1P1S1<0J1,271A1e1g-q0T2K
1*1[1a2C2T1p2G1m2D2W1S2<2Z2*152\1@2Q0U2M/O2c1k1n1=2E2?1x2j1W2o1Y2S1;2B2s
2X2n2g1L2e0S2N2x0r0m1Q2q3/1w1/2:1s2k2E2F0`1\2[1\2D2b3,0?2z/03+3?3D3E3F/l
3A/\3C3G3L3M3N/D3I-u2P3O3T3U3V.F2M.^24.l3\3]3^3_3`3a3b3c3d3e3f3g.`1D/p3h
3l3m3n3o3p3q3r3s3t3g3j1D*>3y3z4*4+4,4-4.4/404142434445464748494:4;4<4=4>
4?4@4A4B4C4D4E4F4:3k3k*>*<4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b
4c4d4e4f4g4h4i4j4\*?4I3x4k4p4q4r4s4t4u4v4w4x4y4z5*4u4m3w/,4K5+5152535455
565758594v5-/,4J5:5?5@5A5B5C5D5E5F4P5</>5>5G5L5M5N5O5P5Q5O5I21.9505R5X5Y
5Z5[5\5]4]5T/Z*05W5^5d5e5f5g5h585`5K5i5m5n5o5p5q5_4n5/5r5v5w5x5y5e5k4o5z
6-6.6/60596+5u61656667684h63/>5c696>6?6@6A4L6;5V6B6F6G6H5z6D5b6I6M6N5\**
**4O6Q6F6K6=6O6X6Y5E6T4N6\6A6V6Z6a6b5A6^6M6`6c6h6i536e*<6T6n6R4L6Q6l5x6g
6j6v6w4u6l6o6R6o6q6p6J5t6<6x72734S*?7677784W6z7+6p7*6r4V787A7B7C7D7E*?5+
6u747J73*?4/7:7.7-6m7=7<4Z4G4-7H706E7K7[6x7M4_7;7R7Q6\6s4z7^5*7I4k6s7d4P
7k7\7n5?7f4]6r7?7,7a7R7m4x7q4y7h4j7?4M8-4U7x7o82557z5q854w8+4i8/7w7O838>
7p6W5o875;7Y6L4r7s7-7c8-6n7v8J8J6m8?8Q4s8C5n8T4t894h8L8P7`8K7T8M7<7P8R8b
6:8A8U8e8W8E8g4R7F4T7>8_7t7.8H8I8p4U7F8v8w8x8y8z9*9+9,9-9.9/909192937C4f
8V5i974r8X757N4S8O7a8O6^8r7v8.8a4P7V9H9I9J9K9L9M4B968j5h994q9;8k9Q4Q9?7u
7u9@7S7b9F8c8?9S4Z9b6*9W4p9U4Q9d6]9]8o9[9Y8]9`9`9j4W9s5]9u4g9h5H9f9q:+88
:*4X9w5[:04e9y4O:2:,:78d9P6t:.4i:44N:6:8:A4c:@9z:;7X5.719c:<:B:L4d:D:5:.
9N4@7@:K9x8i4[:O:M:Z:/:U4T9j:R4>7G8u:]:3:W:J:[:h9g:d9V4Y3y5E76:T:G5=6,4Y
:Y:i:w:P::4X:n5D:p:c:r5J:t:\:x;3:N:k9i:Q;688:b:^;94a:>4M:v;4:w;A*<:_;=5,
;;9<;/5U8F:u;G;B;C;O6C;8:o;I:l7g:f;N;P;[4l;R;E;T;,;V;7;K5a:K;D;\:L;D;F4w
448k;b:E;X:H7Z;Z;h;u;.:3;`4u43;o;E<+:?;^4l;Y;2738;9E81;v;>;^;k4v;+;n<=;w
7e<19t</669C9E7Q<7:=<9;y7w7S8N<M<O6q9G8j;-5H<-;@<C9c<A:q728^9k<G<H9x<J:m
<X4T<<9i<+<T;J;q:s64;t<39F9?<`:z;5<c;l<S<h<V;S;d5l<2<o7l9l<r;x<s4V<f4s3y
8w<>;<=*;1<B7J7j=/=0:C<b;*<d4S*>8x=8<j<@;r;M=,<\<p=?=@<8=24U=45@<i;W=J<l
:I<n4[:`435@9o<_=Q=R=1=C;U<[=Y;0<m=M7U=^40<y51<q<E=c4`;j<K5A=W;c<k=j=[=l
<u84=p=t9R=B4W=U7p=p;g:X<Z<?=]=D5_>0>15f=v>.5C=y;p=i;L;f:d>57g>?>@5d>B=C
94>R=7>;7y>:=94]>K7e>M>N9v>3=3>S>a7E=h8*>W=I><56>E>]98>_86>=7@>f=X>h4V9_
:=>\:^>b>y>z?*?+?,?-95>U=d5v>8<Y=K>I4^>Z6]8W>w75?.?=?>???@?A9W>P?2>o8u>q
=z4\?88I8S?;;n*=?P?Q?R?S?T4D?T?W?X?Y?Z?[?\?]?^?_?`?a?b?c?Y?K;_=S5p?3:u?H
>F>s8m<6:C?N<g?d*=447M<*?t?y?z@*@+@,@-?`?f?D5r?j:/?l:y>Y9Q=s4j>j4l*??t@0
?C@=@.@B@C@D@E@F@??h8B?F:^@5<.?7@8@94R;m<g:N@A?c@H8u@V@F@[@\@]@^?U?C>m?i
@K75@M<W@O6S7s@j@k>u<*=H=u@Z?a@X>x@_@u@v@w@,@s=A:F>*>H:X>J6W@lA1=E<w@o4_
76@>@a7@@q@xA<A=A>?S@z4b@3>D@d8k@f<z@74RA1<4<R>xA54^A7?dAA?sA?AUAV@xAS=u
AE62A[5HAG?gAIAJA2=TA4@T?qA8>d?OAWAkAl@GA9=e?E=:=k=<Aa9XAc<eAe<U@UAh?0<U
AmB.B/@+AYA6A]57AC>p?5A.@hAb@l=3=F8vAO>>A88xB>8wB0BFBG@/Ao<t5wB6?GB8:gAu
@iAw=E=GAfABA;?_BD94BHB\B]?WB2APB4>iBb;@A_:2>K9C@Q@U@U=nBmBnBoBpB`5_Bd54
BM@LBO=\=mB;BR4k@;A.BqC/C0C14EAi?1@2Bt;EBfA/Av9_ALBk>k>n96?ACB8vC7;?AH?J
8A>u8.@:?rC?5P;DC2=^Ar>,AtCH>iCMCN5NBv7KCFA`CV>/CY@J;vC]BgC7AzCa5mC[7JCd
C:C`Ch>lCcC9B:BuCXCo:oCf6hClCs53C-4[=>8=4^@j=bChCj74Cz@7CC8l4d8;C==.D08q
<]CoD47LCr>YD8D94cD;?p?pAv?9Cv@N;uD6618rDS9p8^<N7bC+<FD1<L>@DB72DQ608ZD@
9\9]=aC=DT<^<q=QD^7]DDDR8`DV8H9B8/@k9DC;9D<NDK;[Dl6wD`6/DfDeD?Ds@i7lDi=/
DzDPCx6cE-6.E/9^DZ9l9[<FE>6eDj=@E+6vE;6-=a<L<]9oEE8sE08]E7;PEG6jEIDN:7:Y
CQE[9=:CDnEX:BEZE\Ec3zCu:?E_E`:8Eb6fEfBeBx>-Ei:+Ek6ID,?4=Z;sEpEq9r;G?f67
Eu?kEoCUEz:,Es6HF.@4F0C4F28cF46GF69tEhF:F;F+E95MF>B7Ew=LF1FAFB4cF,9kD<E5
D>7xESBW:eF8B,FK9aFCD-=PE3Dv4YEOEB;HFVFH?6FYF*FM:KE2Ab4`ED>uFT;>Em6CF@Fg
8>F<D/9m8s9\Dx<47kDhD\9@9xFrC8FW>XFu8RFw>tD?8_<G7*G*Dv7d9ADq8<G1Fd>+ExFJ
G683G880G:DuG;GA<EG@E0GOCJ@pGEA-BPGIFZFiF\E?D=G>EA<^G^G*GA>vGW;eB9GZG[4b
FNEBEKGeG`8aGo7TGpG;F_9tG2EWGjC\F[4ZD[FzG<GBG/BR7PG.G.GvFTFFBNFeGiH*82GK
6@H9BwH;GYH=7nH?6?HA@eG4>gHE7[HG6>HIAFHK>rHMH+G\EtGyBfDFH[H\H]H^H_H`BU4a
Gm61HQ9iA_EdHiHjHkHlC0HWF5HYHSHU<HHd60HfA^HrHs;v=6HaI,DGABA_Hz;4BZI-I479
:NI0I1I9@2I8I:I=CiI<I>IA6*I@IBIE:1IDIFII5QC]IJIM5RILINIQFEIHIRIU=VITIVIY
B58iI5I]I^I_I`IaIbIcIb8iHmIgIhIiIjIkIlIm4,IPIZIq5jIXIrIu>GGhIvIy5FIpIzJ,
88ItJ-J0:=J/J1J4I7HyJ5J88SJ3J9J<>9J7J=J@96J;JAJDHRHCJEJHJ2J?JIJLF/JGJMJP
=uJCJQJAJ+JTJQJV@RIg:+Ih6xJ]J:JK<cHlG26bIgJd65Jf8hJa=f>DJg6ZHu>LJ^FDA:Jj
JO4dJp>[J\Js@YJr;aJuGFFIHo=xJn6YJx8*K36/K57yK7HxJvK1=VK;6NK9;:K,JmK.GX4f
KB5;K@6MKIFc6wKM?:KFIxKHK*AN9qKP?MKD5BHwEvK/<CJpGU9>FqJz4XGNKJKZKeDtKa?q
KR=+Jw:]Kk9XGVKW:*FkFm9cKK5yHdEK9gKyFsJk>4:U7+D-KcKtKiFbD>KxKhGLFQ9TL-G3
K=GlFjKr8q8[CKLD:uL>6FFNFkBiKjDy:/LI5rGmGRH/H2BjB@6:JCL*CK<QL]8P<QLGL_Gx
Kd7OH5EMH7Kq;@LQ5qLSC<GB9BGvLcJ`L@HcLBL^LDLaGrL9L5Fx7>8nEPF]KV6vLmDLGPE1
FPCg9:LZ:<L2M<L\LbL2L`:XLk6@LKGMLnGaGwM16jM3G^=r8t@<Km=;K>8m6SM>M@M?M>LH
LdG9Gc8ZGqD2K+KOM;E@LoM]Li<,MQAsMSMT?9M=MAL^MpLr9`MEGnLNM6FOLPL:G9LLMv<5
MgMhLsK^4hKPLzMlM*MsKU?<Mz5:K\JNN14gKMC<KbMPM+K[MC5oKX9:L>JY4QN3MUN5MZND
K2N:62NJM:K-NQK?NS5jNUL/B=NWN7N_MKN8LX:VN]AdNa8bNHL=NZB5N\Lt4`NjL,M[NRMb
NhC,M:IcJzNyMbO*M9Nf<eIdJ\O0KOO2O-NoJWO7JFN>O8O;H:O:O<O?K<O>O@OCL?OBODO?
NKOGJ8OIOJJ4OLOMJ0OOOPJ,OROSIyOUOVIuOXOYIqO[O\IYO^O_IUOaObIQOdOeIMOgOhII
6VIdOnOoOpOqOrOsOs8E/*OwOxOyOzP*P+P,P-;rP.P0P1P2P3P4P5P1=Z3WP9P:P;/I21P<
P?P@PA/2.o3uPEPFPGPHPIPJPKPL.]3[PMPPPQPRPSPTPUPV.T

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/annot { %                    p.j 25-07-93
%  this procedure requires 5 arguments
% 1. the number to be printed (between 1 and 10)
% 2. a flag 1= black numbers with serif on white background
%           2= black numbers without serif on white background
%           3= white numbers with serif on black background
%           4= white numbers without serif on black background
% 1. the size of the ZapfDingbats font
% 4. x1  
% 5  y1
% 6. x2
% 7. y2
% there are 2 additionnal quantities that I compute as a
% function of the font size, namely
%    - the linewidth =font size / 5.  ( to be tuned at your taste) 
%    - the head of the arrow is an equilateral triangle,
%       size of triangle = 0.75 * font size  ( to be tuned at your taste)
/y2 exch def /x2 exch def /y1 exch def /x1 exch def
/fs exch def /flag exch def /num exch def
%
%
% define the white border arrowd the arrow
/border 1 def 
%
% define for the arrow itself, a line width depending on the font size
/arr_width fs 5 div def
% 
% define the head size
/head 0.75 fs mul def 
% auxiliary procedure to draw a triangle
/tri {% pile x1,Y1 ,x2 y2 x3 y3
1 setlinewidth newpath moveto lineto lineto closepath fill } def
 
%   fetch in the ZapfDingbats font which character to be printed 
%          according to the flag value
 flag 1 eq { num 171 add } if   flag 2 eq { num 191 add } if 
 flag 3 eq { num 181 add } if   flag 4 eq { num 201 add } if 
 /num exch def
 
 
%  print the number by centering it at x1,y1
/ZapfDingbats findfont fs scalefont setfont
/car 1 string def num car 0 3 -1 roll put 
 x1 car stringwidth pop 2 div sub y1 fs 3 div sub moveto 
car show
 
gsave
 
% compute arrow angle and length from x2,y2 to middle of character box
/r { x2 x1 sub dup mul y2 y1 sub dup mul add sqrt } def 
/ang { y2 y1 sub x2 x1 sub atan } def
% translate refr. frame 
gsave
 x2 y2 translate ang 180 add rotate
 
% draw the border of the arrow, then arrow
newpath arr_width border 2 mul add setlinewidth 
 1 setgray 0.5 head mul  0 moveto r fs 0.5 mul sub border add 0 lineto
  stroke 
% newpath arr_width setlinewidth   0 setgray 0.5 head 
% mul  0 moveto r fs 0.5 mul sub 0 lineto stroke
 
% draw the triangles
/x+  border 2 mul def /p border 1.73 div def /g border 0.87 div def  
newpath 1 setgray
 0 x+ sub 0  
 0.87 head mul  border add 0.5  head mul p add g add 
 0.87 head mul  border add 0.5  head mul p add g add neg tri
newpath 0 setgray 0 0  
 0.87 head mul  0.5 head mul
 0.87 head mul 0.5 head mul neg tri
% re-draw the arrow
newpath arr_width setlinewidth    0 setgray 0.5 head mul  
                 0 moveto r fs 0.5 mul sub 0 lineto stroke
grestore } def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
 
%num     flag     size     x1     y1     x2     y2
/y1 19 def
/y2 77 def
   1        4       19     67     y1     67     y2  annot
   2        4       19    280     y1    280     y2  annot
   3        4       19    472     y1    472     y2  annot
/y1 290 def
   1        2       19     88     y1     88    188  annot
   2        2       19    212     y1    212    180  annot
   3        2       19    461     y1    461    203  annot
   4        2       19    505     y1    505    150  annot

%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 86 141 571 641
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.787647 0 0 0.787647 0 0 ] concat
/originalCTM matrix currentmatrix def

%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                    Date: 02.02.93 *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a Lempel-Ziv Welch (LZW) encoded color image.     *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/string_table 8192 array def
%***********************************************************************
/NewCode                 % Read next code from file                    *
%***********************************************************************
{
  { currentfile read pop
    dup dup 42 ge exch 123 lt and {exit} {pop} ifelse
  } loop
  42 sub 81 mul
  currentfile read pop 42 sub add
  /new_code exch def
} bind def
%***********************************************************************
/DecodeCode              % Decode color packet for new_code            *
%***********************************************************************
{
  NewCode
  new_code number_colors eq {
    /table_size number_colors 1 add def
    NewCode
  }{
    /K new_code table_size lt { new_code } { old_code } ifelse def
    /K_character string_table K get 0 cnt getinterval def
    new_string 0 string_table old_code get putinterval
    new_string L cnt sub K_character putinterval
    string_table table_size new_string L string copy put
    /table_size table_size 1 add def
  } ifelse
  /old_code new_code def
  string_table new_code get
  dup length cnt add /L exch def
  /new_string L string def
} bind def
%***********************************************************************
/DisplayImage            % Display a LZW-encoded color image           *
%***********************************************************************
{
  /buffer 72 string def
  gsave
  currentfile buffer readline pop
  token { /degrees exch def } { } ifelse
  degrees rotate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def } { } ifelse
  x y translate
  currentfile buffer readline pop
  token { /x exch def } { } ifelse
  token { /y exch def } { } ifelse
  x y scale
  currentfile buffer readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def } { } ifelse
  currentfile buffer readline pop
  token { /number_colors exch def } { } ifelse
  /table_size number_colors def
  systemdict /colorimage known {
    0 1 table_size 1 sub {
      string_table exch
      currentfile 3 string readhexstring pop put
    } for
    /cnt 3 def
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodeCode } false 3 colorimage
  }{
    /color 3 string def
    /byte  1 string def
    0 1 table_size 1 sub {
      string_table exch
      byte 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put
      byte 1 string copy put
    } for
    /cnt 1 def
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodeCode } image
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
0.00
52.50 155.50
507.00 481.00
507 481
256
000000
ffffff
00ffff
9f0028
870022
d18598
460012
ffffff
53559e
474887
b0b1d3
28294c
ffffff
e1e3bc
bfc1a0
f2f3e3
7e7f69
000000
f0b550
cc9a44
f8dfb2
7f602a
ffffff
645fa2
55518a
b8b5d4
312e50
ffffff
b53560
9a2d51
dda2b6
57192e
ffffff
7f7f9b
6c6c84
c5c5d2
3f3f4e
ffffff
700070
5f005f
ba85ba
320032
ffffff
e1e3bc
afafaf
7d7d7d
4b4b4b
969696
646464
c8c8c8
e1e1e1
323232
ff00ff
ffff00
ff0000
0000ff
00ff00
71725e
7f7f7f
f9f9f9
f3f3f3
ededed
e7e7e7
dbdbdb
d4d4d4
cecece
c2c2c2
bcbcbc
b6b6b6
b0b0b0
aaaaaa
a4a4a4
9e9e9e
989898
929292
8c8c8c
868686
808080
797979
737373
6d6d6d
676767
616161
5b5b5b
555555
4f4f4f
494949
434343
3d3d3d
373737
313131
2b2b2b
242424
1e1e1e
181818
121212
0c0c0c
060606
0000cc
0013cc
0027cc
003acc
004ecc
0061cc
0075cc
0088cc
009bcc
00afcc
00c2cc
00ccc2
00ccaf
00cc9b
00cc88
00cc75
00cc61
00cc4e
00cc3a
00cc27
00cc13
00cc00
13cc00
27cc00
3acc00
4ecc00
61cc00
75cc00
88cc00
9bcc00
afcc00
c2cc00
ccc200
ccaf00
cc9b00
cc8800
cc7500
cc6100
cc4e00
cc3a00
cc2700
cc1300
d9dcc7
f0af3a
bc2458
7875b8
00004d
6666ff
9999ff
cd950c
cd1076
4f94cd
98cb65
65cb65
32fe98
00fe98
32cb98
00cb98
32fe65
00fe65
32cb65
00cb65
989898
659898
986598
656598
989865
659865
986565
656565
329898
009898
326598
006598
329865
009865
326565
006565
983298
653298
980098
650098
983265
653265
980065
650065
323298
003298
320098
000098
323265
003265
320065
000065
fe9832
cb9832
fe6532
cb6532
fe9800
cb9800
fe6500
cb6500
fe3232
cb3232
fe0032
cb0032
fe3200
cb3200
fe0000
cb0000
98fe32
65fe32
98cb32
65cb32
98fe00
65fe00
98cb00
65cb00
32fe32
00fe32
32cb32
00cb32
32fe00
00fe00
32cb00
00cb00
989832
659832
986532
656532
989800
659800
986500
656500
329832
009832
326532
006532
329800
009800
326500
006500
983232
653232
980032
650032
983200
653200
980000
650000
323232
003232
320032
000032
323200
003200
320000
000000
-7*4-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-9*5-W
-Z-[-\-]-^-_-`-a-b-c-^-Y-M-f*2-i-j-k-l-m*2-Y-n-q-r-s-t-u-v-w-x-y-z.*.+.,
.-.../.0.1.2.3.4.5.6-t-p.-*5-h.:*4.7.?.@.A.B.C.D.E.F.G.H.I-z.9.,.;-8-i.;
.Q.R.S.T-Y.U.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.[*4.c.P.<-f-d
.u.v.w.x.y.z/*/+/,-A.r.O-o.>.K/2.J/5/6/7/8/9/:/;/<-s.L-x/?-w.9.N/2/A-v/F
/=/I/J/K/L/M/N/5/H.8/4/@/E.s/S/B/W/O/Z/[/\/]/^/[/Q/>/Y-u/C/V.*/a/_/i.@*6
*6-l/l.1/o-u/q-j/q/s/j/w/\/h-q.L-B-j/e/0/z-n00/x03../v*2/u/m.,06-q060804
0?/M02-l0+/>0-/U0//c/R0@0K.2/l09-i0>.+0;0<0O070U0L0X/;0B-k0D-r*50F///E0I
/b0Y0e-z0N0O/o0h/m/s0>0N/t0i0o-m/v0Q0V0Q0u0h0p0V0f1+0*0c0^/41.0_.P0G0b-j
0,131,19-r0j0z1*0P0q1?090w1B0W1>1F1C1>1H1I0y1:1:/H-:01100E18-o/f-i110`1M
1Z1?1K1\1F1*0r1`1D1=-k0m1@1f1]1b1=0S1[0Y1O.P1Q161S/10a1T*21X1v1m1,0n1c1^
1i1\081L/n2,1K1L0j261A0r1l1z0L1o-o1q1W1s0.151W.Z1Y2;1+2+2-1h1G1c2:1k1g1E
1`071j0s2Q2G0K1O.Q2?1w2A141y/X2W2H0q272J1@1^2d-t0l0U2h222j231e2V2a040[2F
1x1t1U0H/g1.2r/j0=2320281i0u2U2k2,0t3.352q3+/x2t1v2v2B2_/G3*3:/^3-1d0o2+
2f0v393E302p2-3J1d3C0@3<2w2\0^1Y/D3@/d3B3R1[2N3]3`.73T0+2E1T3Y3U/T3a3+3_
3j3m.13c3\0C2^3h2`3n2G3l3v3y2z4*/31u/1.b.p.n4142434445464748494:4840.`4=
._0G4;4B4C4D4E4F4G4H4I4J454?-;*5*94P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b
4c4d4e4f4g4h4i4j4k4l4l4N0/4O*74r4s4t4u4v4w4x4y4z5*5+5,5-5.5/505152535455
565758595:5;5<5=5;*:4p4p*95>5D5E5F5G5H5I5J5K5L5M5N5O5+5@3s.;5C5P5V5W5X5Y
5Z5[5\5]5^4w5R4-5T5_5d5e5f5g5h5i5j5E5a2x/U5U5k5q5r5s5t5u5v5H5m3g5c5w6+6,
6-6.6/5q5y.s4q6065666768695:625B6:6>6?6@6A676<5o6B6F6G6H6I5^6D.r5p4x****
4u6P5G6S5N6U6J6X6Y6Z526L1U6N4w6W4r6a5>6c5J6e6[6h6i6i6]6*6O6Q4t6U6c6W6S6P
6o*76q6r6v6u6x7*6p6v6w7*6Q707.6s746g6`6u4s727/7,7;79737<54764v7B6j7E7C78
6b7H7:7>6R704y7H7=7G766l646n7M7I7W7X7P6t7P7X7/7L7^7-7b7c7G7I6x7a7O6o7g7d
7\6z7?7h517D7n7F7t4z7g7w7.7>7y74777+7y7_8/4u7T6_7Y7`6y7L7<6t807^6a7s7-8+
7d7Y717j8C5*8<8B847m8D858.5/7B7D7u8P8/7\7Z8.7@7a6g8G6w8:8:6e827i8H8*7s89
808F8>7e6p6b7`8j8@8R8D768X8a87717h7k888v8T7f8C788-8x8Q6i867N8i867p8@924z
8^7V7l8q8x8S8t8a8e8K8y8I8?9@7_8o8L7:7K8S8F7J8n9M9,9D9E9M8Y9-6X7]9L9;9>7]
8g7p8O*797778`9a6q8d7o7R8k8u9:848;8J8_9[8W8Y9S8[7x9,9<908+9s8[9T6I957Z9\
8=9`8k9y4v9_9j8\9i9u7[:.8Z8j757N:+939h8E7o95:79?9@9x9J8J9w9N:19z6?:G8q7K
9o9m:-8l9^5A6E:/9g9>7=75:;9e9d:Z9r8U:c9k:L8m:T9O9V9::79Q8G:@9t9p8L:M6>:O
:g:09C9n6e7k81:W6M98:Z8v9W7f:^7M:j:a:>9y:<938>7n7,:J7z:U;0;>8-;<8m:o:s6F
7@;I9Z:C:r:58,:r:3:w;M599]6d;S5v;U;G;Z6:;Q:h5E;Y5<;`5q;b;[;e6/;];f5e;d;i
;l5u;h;m;p;q;r5Q;,6^;s;w;x;y4s;o;z<,<-9z<+<.<1<26k;u6m<3<7<86Z<0<9<<<=6C
<54O*:<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<]<@4m<b
<c<d<e<f<g<h<i<j<k<l<m4[<;<><q<r5v<p<s<v<w5g<u<x=*=+5Y<z=,=/=05J=.=1=4=5
5?<a4t<_=:=;=<==<C6[=>=A=B=C=D<[4y:3=E=I=J=E836H=K=O=P=Q=<=M4r=H*:=65+4P
=@=W=X5h=Z4x=V=]4z=_6Y<B=b5g=d:2=8<*=\=g4v=i6J<B8s=n5]=p=9=k=U=m=t4s=v=N
=W;W>*5M>,=U=x9^=z>0>2584[5Z=f>0=u=T:V5S7U>5>=>+>?574Z>65P=f>/>D5I>8=a;4
:d7z9*907;9Y>S;*:f6A>8>G>?><8M>R6\>I>M5P>O>4>_:e;@:9>i:v;>:06H>\56>O>c5+
:E>b::>d5V>f>A6N>h:E8V:`949q9<>m>L6>>q55>s53>Y>w>y5X?*5b>B?-;M7j9a:U;N8?
?;6I?754?9?:9Z>w?5?=5>??5n;-=l?F:v9o;=9G:B>U>V6h?K53?M?N58>h?R5N?T5z?A=z
9F9=;R8y?G:9;k68?a52?c7q?O51>K?g5O?i63?,?l?]:Q:x?q7b:x?s67?u51?w>`;:5/?f
@+5K@-6=?W7c>Y9C:z8=;F>v6Y@950@;5-@K50@*@@5L@B:X=y7R?r:.@28V;J:a?`>F>r>^
>t7v>a?z@d@T5E@V?V@X>M@M5/4P<K>;>.@i@A>^>g@h=]@o5.*9<L@s@u@U@w?+=9@y=XA*
65@*?QA/?bA1?@@/>dA660@?A:5D@k;v@D>DA@;gA4AC>9A<?UAF@mAH@a6@ABAL5<AE<6AU
=gAI6.AZAV59AX?kA?AS6?<B<nAgAhAi<c=G@xAc=@AjApAqAr4`AlA2AG>=A\A_;q>P9A9q
>j@7;ZAyAz;mB+:b;.>l<-B1B2;iB4;7?_?n<.B9B:;eB<9i8h>xB/;fBABB;ZBD?[8g?I<1
BJBK:sBD:4?4?pB@AdBS;xBU8l72?3>Z;qBR5t=RBeBfBg<SAuA=A3B^BE;*BH9zBc5sBhBt
BuBvAfBjAOAY@0>QB`:<A9BIBZ;\AKB[5-AaA>@nC169A^C4@pAN?jC7AR=[=sC<A;ByC?Bl
C8=[>xCD?vC>@.CHCAAD4ZA.CL?8CN@CAQAxC9@N4YC35G@SCU@:CW@W>CCICR=GC^@_54C;
Ca=cCc@lCeCQ?S@c?x?X5.C`CmA+CoAPCqCZ@jCtCuBa5,ClCy4wC6CPD-Cg=`Ci9PCk@tD4
CzCFCOAw>7C[C=Ch?NBpCYD?5,D6DC:?:8?/<3Br4r@O5.DI@XC/CyDMDJ:hBP<8DS*7DU@P
DYD:DKDF=`Am>Q;6Dd;sD`Db5,DW>CDlCUD[D,8iBG?\<sDnD/52DqD3DfDTD*C*8A9l;;Dq
;GE*@r=-D>E/CnDACXDv:oBN<rDnA-E:E<DLE1Ab>X>T@5DsBbDE66A8EG4xDu?B@E8bEN;p
D`5kE.E/EUC+:^9LDQ<2E[5jE]DfE_An<:D;D?EiCf=eElD4EnCr6XAfAsEwExEyE>CdEg=0
Ee5i*:EyF1F2AjF*CpF,=/F.ESAeDiEtF:;fB4DDF>B3F<D8FBF?FDFAFFFGAvD\=tF9FJEQ
FH9v:=FSEM>SEKE7EPFP<:FD>n;38eEAEY6JFO5fBwFfFg=PF5D+EV79B5>i9x9OB0FZAAFh
FuFv==EIC@;2?oFo:KBV:MFd5eF7ErFyD7BX9H>U:@8pEc8PG05dG2DZG4DN;2;LFWFq>oG/
FsAJCCFJEsCKB`?0B>9QFV;eG=5_CxGLGACYF^:R@_;FFrD.4YCTF[E0FjE2E5B,GP;NBX>V
E66?E*4XEq5=GWFFGMFICsDG50B_57G?CmGu>*E*Gx7AFbGsFBH-FNGI5*DoDpFbDvFPH5=n
H/De?d?eE;H=GYH<H6D.H0GyE-GqH,HFH+<xH@5`GqE6H3F>H>A[H7E=HAHK5?HMCaHX=bHR
:2ElGmDrGcDaHOH_<wHc81He:QD=HhGdDhFLHGH?HZ4y@q<JA.H;B[H-@^9XC,FXGl8B>k6i
EDE95XHPDtHjE3:RGO@JB-:87uGU6K@tI,BBGMF`EXFnGRGF8w7tID5]I:CLIIDyI099:`9/
@=6ZIQ5\ISCDIU;OELGD9IFTIM7FI]5[I_C<Ia9[:H9bIK@ED1?JHx6+IkC4Im:i:n:69SI?
8zIG60Ii@sF3J3J4<hGeEJ9D;B:k9lJ-;?IPIu5wF0J5JCJD4kJ7FzGkJ:?[IB8TEB7QIhJ@
Hr6>F@H.JQJRC:FHJUJW</JYHHJ[9-JTJ^J_8PJaHwJc8QJeHYJgJdJ]JfJk7tJiHbJVJo6-
Jq@zJsJtIvJmJjJy6jJT;J?/9KC.J/6XJ1K,I^FR:I@ZEWI[;iK5K6>;F]?]Ea@[B-EOK?6h
B]?E::KDIsG_KGF\HuFlC,@IJ<I4?yGTJx<9FwK[<VJGD79+?HK98r;yK>;lK\Kg<QI<Dk8r
G7Kc;xKeB;Hk;rGuF^C-:qK<C0>yIw;lI.IOIg:mK2KsKY<8=rCK<=HaJwKzHD<>L7A5L2<7
L*K=KjF=>0CxK3BqLBFE9.IfH1G;53?BLF9TL<=6Kp5ZB=6OInIGLEL6LHGvLJH1LX6;>ILP
9-LR=5LT5Y9/=s;A:_9+BWDe73L[K^GBJn6jKm;1KK:cIO:l:f@?Lc8QLe=4Lg5XLiGEDOKn
9s7DLZ<<M/=1M15WM3;;M5:pB,M8LbLqHtBkDCFSJK>TKW;zM=5VM?DxMAIMKa5*M9<9Iy@G
J;<7MO5PMQGQJO?0@]E4HSHQLH8<;3K;DRL><3HVD_L\?O@3D^KdMl<2L@KyMGBzJ8M49dMK
M-JPL98ZN.LdL\J>GiKM;wM]:MMwKXLrGZIX;^MoN0HlMgKLN@M\Mu<1N;;[KtMcFXHfLGNB
<vM;F-NH<.EvJENX4\N=HvK+>MJBNYN`GaMyCGLsN]KO=qK*JrNg=eNiL8NkNhKQKrDzNUNo
6KNmL=Nu6IJvNxNy6GO*LSNtO,K@NqEjN^KhO6<MN[KR9BE4IJN-J,N26.N9</O7OD<HNDKn
L.IJ:4MsN/>dNJKN5`KAOH9hG^B5NO69OB9TOOFYO9E`IgOTKbBmOWOXO0;zL4O@M.NDFT@^
:OO>M`NPONL:MFOQO3F_@[:g>kM_LQOe;yO[:sMYO?GEI/G+Oc66OYJ`E;;KK18*NKOGIz?1
BmKJN35iJLH]5;P:N2?-FmDwBGLWP<O]IX@6:_I3PSMhOp5gPD@<5:GD5lOr9GPJ7CN<NcDB
FMLt5fL-PY;TJ+5FAUP^GkKKOP=jOuLC5_8c:lM*G89W>WM`KaFaPnHdDx:[6`PJOh6/NSF8
P+CuIo:m:\Kw7xM[:bLzKwO_HJBF6RQ1PLO\PbE?P-BQQ7PEJ*MBMTKVGOLnOv:e:D;WGsPm
QEPSP.N4JbPfJ.OxKbFpMA?;>n;C:j7B>_LpGNPKL5QoPBQIF+NrECQMPhIcPwQ<G-J9PjBo
J<GGDXPnMc8XPp;+PrLI;j;DGRG9K/MdJIPjQ*O<MMN\MXQ^Pe>=MnNGPOEo>DQKPVPqMHPd
NfRGIFQuRJM@RW9AGhB8Qv;rRMP*RV>lI@R/N8R\B*Qt;mIyOI?2RcDmRe;pR^QqOtRPD,8p
EW@f<,P6JhRgL+P=9j;9RlL1L9NaS24VR`Ru;RI5MtKzS3S;4SS5KB87N?BYO16FF@R-RaS8
KoRnSC=2JYK0Qi@QS9SKATNwO/SRSSR6L]SV68O.LfSJSZ5lSTS]S_;\SaM0S^KqOESi<DR`
SYLDSjSoRERRSnMfSlJZOqStQrF6S*OsRL*:GKT+R5RsRpMNSgF?OrM:OjG[QWKU:]Kx6jRy
JdT*MxRrMzFzR;FVQgK9SHJ?N0QlN+R27?K1RX6@P/LnC-RjB>P465T?E,Iq5]9BMV@0TMPo
Q2BFQlTfQDGnS,Qy9kS?9;T=I6T45=G[P`6VQALoThTgTdTzDwTyQn?6TjQAR-QdIoTYJ0Tq
;aTJS/5D?3QjMEFmPu9E91LjU@N1UB8cTSU/N,OyQ99tN7I\U6PFIqLkR>IcG6TvP>TwP_UD
PoU?U\UEU^Qp?tUHS.UCIW:pU4Q4UOPZLv6zG\Pv@HQ;?2P0H\UYU,TcU+TeUxUYU.S>B7OJ
QPU1Q]:tIKNMQVR*LK@FUrMeTbUu?DU*UvV>Q35YIUPX9?FUR>N5R_6:KuLw:uMUG^U;;MM,
TxQnV<UwV=VTU`@8SqNjVIV29PVLKTQTQQ96HDPzR1SOTRLMVYSuQ_67TH9KUSKvEL?YL/QX
TAPaTCNdRQV[;iUgVcVXRISyFkVvNA;[OL5xW2R4=wSXSvW4RB5IER<qQ5=,T[JpW7QHVxPc
RCNnO5SxWGQJWEEdUiBTWOGHVkRFSsNCWUSr>*NWS<S3S>K:NN;<R9UM7EWC7FN_W]W^W0Gf
G*GjN?OTU9G<WQSc56BMT;R,@1R=V0Wt<?R6PuUlL5T9:nToICWsX+LNORTkQUKcQSX*X6AA
ORUZVsX18RWdT>X5X>@RX@O>MZ@4OoWFXHJuX@Q;SAQ,WmPNXPA]XRVrG\UIEaLAXXXYW:Vl
X`;nSeM<XGXdMVXfNTXiJzXbWVXm61XkQ6Xq<tXsWBXhXuROTDG5W;XzXrXoWZY.<yXw=+Wf
XzS\SfY25rY8XgY:Y/T1WSSBY>EfY4=*Y6XuY<XlYCF/YEWL>]Wi<eBBYIXtA`YP<dYA=,YS
Xx5:YG5KT2<xYZY5J@Y]=2YX=+YaYFYcXy5VY_<wYhYN@bOCYRYMWXYUYr?LCS=/YoYuAMYw
A;Gp=0Z*NRYjDHDdHpL.>JH_DUW,Q-NpY@O4>]T\KxRwGSW.PkZ9E+CvU7ZBF;Y0W*Z@PEI[
UoB6XE59HPZ:OhSPX3JAYtZ2Y\DES6T_>oIfMJ8nGrZGQCTlUK8wQa?FQ=LmXaZ>RKYqZPMj
@HEBM*QbLPZVZHM6I4Vb;1SPRbU-Z[ZMWJZOPhZuRw:uV45D[*Zh[.:KVOV3I=X]X?[4O+Z,
ZtX9P@Vb[;5>[=Us[,QbUW:yU0Ve6,Z1NsZ^ZAZyMS[MVMV`ZT[OMe7eV_UW92Q=8WWqYD[F
SUYvT\V-MaIeX[EbKUB7CwZg[PZi[UV7G:Tm[t[EZqPsCEOZZGI8:AL?Z\[Y[nP7?8EE98Z;
KP\0R7CVZ-5OViB\\8RU\:RzYs[lSb\JT@\L\ASmYx\DA_[X\I[H\;B:\WW@YjSo=>\QY+Ne
ZN>r\_\`\[\H\]YKYL\MY9\kY3\mY=\oFe\iL;YkY:\\\v\s\t\qYJ]*GV\uT/].Ij]0T7]2
]/],YT]6K7]8Y[]:];\RY-HYNbYY]4RDDDZ/Yz]EW3XcNe\F\6;G\y]1[5Hn\>Ds\?XQ]<Yb
\SFMZY>uV@]X]@]L[GQ.[T?47w;EOa=@]JW/]bHGV-UnMdZx\@\bVz]S\dY,GjV<Km[zVUKH
]kMk][]n9ePgIYTI]_\p]aXp]c]T:/?.G-Zx]W5h]Q]5]A]xQ-TQMbP2^-]YYiDD\5\E^6^7
]tWI^:Hb\=^OWg^.WPJk^@^A^YQL]>]?^RYmRd^`]3^KYp^e>J^^YB^i5W^B]F^m^n^kR[^q
^r^gZ+^u5N^o]K^y5M_*]l_,5L_.^/_0_-^sRx\wY2_2^Z_4_1_6T3_<_=^wZ]_@SL_B\9_D
5x_>SQ_HC__JSI_L_I_F\X_P[<_N^d_TS`_R\j_X_U_Z\z_\[N_VRm_`_a_^]R_dWu_bS0_h
=7_f^C_lZU_jKF_p_q_n^p_tH*_rEZYjS2C5NX`-`,]+^8Y1CMNaC3NX`6S2Yf6\_zRhZ3Bd
`8E\`@`?^QVy^S[m\YY;`BF/`J`I`DWH^c_c\O`A`-`SEH;n`:?z`<S+[Z`C`VEf`L61`XXI
_v_+ZsBs``Fe`h`_`NWNZ?`f`M`^`K`T`]G1`ZX_`RHKLw[<`j:AW=H^`s8hT.7v_1`b@>`v
TB[6HBX<Uz?<=YC[@3P\a/QD?QV@`P5-_:^_`xPYa:ZT^;a=[IYeaAPKN2DlaED2a6Vwa8[[
QWRYHq`qDV6yS.aK[>D5=MUlP;P;91QEafa<G>aWXW`H[o[:DIE.A*Q@7WX[aF`h8sX/QGb,
b+b+@Ra4CwanW8\T55M?W5D2a+H:KEV6C/ataeQ[P_b.N1QpDsaU;t`d_/`o[[[QaL^E=oa>
ZD[^b>azQFb-a;bELNb1aFb3XObKD0bMasb:;.UnQP[waQU-ahbWaiaRbAb/\c=-b]X=aYb`
Zi8fa]aN`yUcb=b0bhQZblX0PLagbk]d`ubI_3ap`Uby`ra^56aDb[aVc6_;c8`kc<`ibh?:
a3`lQs`n\C`tH8Xyb?58^6bGXjcAaHcCc;c:^AbccF`1^bc?`*`\`gcGG>c\G1c`cU`2]wb5
cccEcgcdc[cJSzcLcl`pcZ<ycfcecrW1ctA;OD`-K\d/O7d*Wl\B?LOEC5Kgd8d.c^`EcT`[
_x_ycV^ld@CkbrWTdD55aGdCdH`YdB^tdLX7dN_7dPdQcj]vdTc@dV^TdXbHdZ`Gd\b\dR_?
d`b2db_Kddd]c_d,dhY*d=chd?dlcidjZrdqWMcKdtYx`0a=JEY`dFRN@b`5`/JCdo]sdndk
Cb`WcpIEe,df_OaIcqcnczYne-VHcXe?cwc]<vdJdOeEcxe9IRe3Nle<_WeLeHcOc9<seJdS
e>eMe@GVePEueCRqbtPMIjbcb*8EbAZUe_Z=ds\1CMDVI^c\boThbXbxeXeaOicbeheqe9bj
Tta@eBeR`QeTetc/CCegejeNbCakak[2@>ekNzexWreza2f.f6bBf8e]bDbCbmfKal<reYdc
f3UzfMfFfHeGbnU>bDfLeuaye;d^\NfRbYf5fGHCf,ajbVfUZEW-f0f_\nfac0bmfcfqfjbp
>Ef*bWf:fdb,[ceIfAX4fC7OfZg1fcfTf>ffaBc1fzfiVuf^emd5\2;_[NcyGbewf1_kfo7A
ZfeNf+flg=^0e75FZzgBEFgLe5dxg?cveVcDg,gE_sgGgKfWeAg[fm\rg^eegJgfgT`Of?b^
cMcmg`e^g<gUenCbd;a=d0gi`mgV?vd7DLd9gxQsYVh0>:du96>gh1h64Xh3h4Huh9AL=3h<
ON>4h?A:h>hBRGhAhE@i82\fhKhLhMhNhO<`?+h7hShThUhVhUhDhH=thYhZ=gh\h]=]h_h`
=6hbhc=4hehfZ0hGhih@h;Hie+hlYOJDdmWHE0JDgk_p`7htE?HscYhqcue\W9Rsi,eFi.gW
i0<*hGRyd>dLi:>I;]i=i5gmi4>3hni@iAi6eUiDi2HieWiGDgi-iJ^Ri3b;U8fViNiO@eR/
Oc@?i?C9OUgAiWgO]O:Li[i>i9C1[pf/iaD@]^iZLci\iga_^<DPWbg5ikilicLmZaH*ifiE
ihDyFpUVT`iwix@ec+]reviQ.N.S83?uRuZnI2b9j3gg:JBNb8jAR5.R4Nj<j.TGWw[ahx_l
?KTsj7bZPq-Xi+iLir[RUdjTacjB4ujRUQQO[L;Yipj-bz8Kc*a-bOj_fvimbvVtG,f]T0iR
jYiPjmbP;V5<jfiKiFjxETJxHfk+juk-k.jyTrK3k2`EiSiIk5jnjwi]iMk=k;cojtk:jviC
kBkGi7j9hukJk<kBk4kLjXHzFwkIj`A,K[i*CdDTh-kVk\gwi1juk^gbkbkcfOhkkf<qhhki
R]khkl<<kkkoFC?+hPkukvkwkxhN<@/-l+l,l-l.l/l0l1-]5bl2l5l6l7l8l9l:-c4-.M3q
3zl@lAlB0J.:.<l>lClHlIlJ1/../D.f4?4KlQlRlSlTlUlVlW.WlP4/lXl\l]l^l_l`lal`
%%Trailer


==>  Routines with new options

  o  Subroutine HIDOPT
     =================
     Options PROS or PROE are displayed with option SHOW

  o  Subroutine HRESET
     =================
     Can reset ntuples as well.

  o  Subroutine HFITH or HFITV
     =========================
     New option 'K' with option 'M'. When 'KM' is given, the parameters
     set in Application HMINUIT are not reset.

  o  Subroutine HBPROF
     =================
     Profile histograms can be filled with weights.

     The computation of the errors is based on a proposal by
          Stephane Coutu. Below is a copy of Coutu's proposal.
          ONLY options 'S' and 'I' are implemented now.

    I realized that there is another case where this kind of trouble
    occurs: if a bin has N data points all with the same value Y (especially
    possible when dealing with integers), the spread in Y for that bin
    is zero, and the uncertainty assigned is also zero, and the bin is
    ignored in making subsequent fits. If SQRT(Y) was the correct error
    in the case above, then SQRT(Y)/SQRT(N) would be the correct error here.
    In fact, any bin with non-zero number of entries N but with zero spread
    should have an uncertainty SQRT(Y)/SQRT(N).

    Now, is SQRT(Y)/SQRT(N) really the correct uncertainty? I believe
    that it is only in the case where the Y variable is some sort
    of counting statistics, following a Poisson distribution. This should
    probably be set as the default case. However, Y can be any variable
    from an original NTUPLE, not necessarily distributed "Poissonly",
    and perhaps extra options could be offered with the command:
    PROFILE id title ncx xmin xmax ymin ymax [ chopt ]
    to allow the user to choose how errors are calculated. We could have,
    for example:
    CHOPT
     ' '  (Default) Errors are Spread/SQRT(N) for Spread.ne.0. ,
                      "     "  SQRT(Y)/SQRT(N) for Spread.eq.0,N.gt.0 ,
                      "     "  0.  for N.eq.0
     'S'            Errors are Spread  for Spread.ne.0. ,
                      "     "  SQRT(Y)  for Spread.eq.0,N.gt.0 ,
                      "     "  0.  for N.eq.0
     'I'            Errors are Spread/SQRT(N) for Spread.ne.0. ,
                      "     "  1./SQRT(12.*N) for Spread.eq.0,N.gt.0 ,
                      "     "  0.  for N.eq.0

    The third case above corresponds to Integer Y values for which the
    uncertainty is +-0.5, with the assumption that the probability that Y
    takes any value between Y-0.5 and Y+0.5 is uniform (the same argument
    goes for Y uniformly distributed between Y and Y+1); this would be
    useful if Y is an ADC measurement, for example. Other, fancier options
    would be possible, at the cost of adding one more parameter to the PROFILE
    command. For example, if all Y variables are distributed according to some
    known Gaussian of standard deviation Sigma, then:
     'G'            Errors are Spread/SQRT(N) for Spread.ne.0. ,
                      "     "  Sigma/SQRT(N) for Spread.eq.0,N.gt.0 ,
                      "     "  0.  for N.eq.0
    For example, this would be useful when all Y's are experimental quantities
    measured with the same instrument with precision Sigma.

    Stephane Coutu
    coutu@roo.physics.lsa.umich.edu

  o  Subroutine HLNEXT
     =================
     Routine HLNEXT supports RLOGIN directories (This means now all
     possible combinations of directories).

  o  Subroutine HFITH
     ================
     Mods in HMINUT to compute an equivalent chisquare in case
     of a log-likelihood fit.

  o  Subroutine HFITV
     ================
     2-D vectors may now be specified.
     Also apply to PAW command Vector/Fit.

  o  Several changes in patch HMCSTAT (Christine Beeston)
     ====================================================
    1) Bug fixed with the number of entries - Now use HSUM instead
    of HNOENT to get the number of entries in a histogram, since including
    the underflows and overflows messes up the normalisation of the result.

    2) The user can now do multiple simultaneous fits (this was requested and
    seems useful) - to do this they must call HMCINI once for each set of
    histograms (each fit will have a data histogram and a set of monte carlo
    and weight histograms), and then
    HMCLNL must be called with the histogram identifiers and number of MC
    sources, as well as the fractions.

    HMCMLL already uses the new HMCLNL, old HMCLNL renamed as HMCLNO,
    but will be deleted in a couple of months.

    HMCINI and the new and old versions of HMCLNL both contain a banner
    announcing the change, as it's not backwards compatible.

    The weight histograms may be used for more than one of the
    fits if necessary - a check is made to make sure that they are not
    normalised more than once.

==>  Routines with bug fixes

  o Changes in HDIFF to solve numerical problems (precision).

  o Extend range of formats in HINDEX and HINPRX.

  o Bug corrected in HRESETM1 and HREZ0M in case of profile histograms
    or histograms with error bars (bug reported by W.Brueckner)

  o Protection in HFCXY for very large real numbers

  o Routine HALLOC:force refill of Ntuple cache also when event range changes.

  o Routine HBALLOC: pass also first event (to define event range).

  o Routine HGNT1: accepts dynamic buffer offsets as argument (used by
    HGNTBF).

  o Routine HGNT2: check for the usage of the cache for each variable
    instead of only once.

  o Routine HGNTBF: completely re-written. Does not read a whole column
    in cache anymore. Is now a convenient front-end for HGNT2 with the
    IVOFF cache offsets set.

  o Protection in HSCR in file in READ only mode

  o Mods in HMINUT.
    Set the FNIX and FEPS parameters in agreement with the MINUIT definition.
    Defaults are unchanged. FNIX and FEPS can be modified via
    the routine HSETPR or PAW command HSETPR.
    Set NARG=0 before calling MNEXCM when MINOS errors are requested.

  o Hfithc - protection against deviation being 0 is introduced.

  o Protection in HNTNAM in case of misalignement (INTEGER*4 mixed
    with REAL*8 variables in the same block).

  o Bug fixed in HCDIR in case of subdirectories (hrout, option T, then HREND)

  o Protection in HREND (NCHTOP was changed in the loop)

  o Bug corrected in HFC1 in case of empty histograms with one bin only

  o Bug fixed in HBOOKN for disk-resident tuples.
    This bug affected HBOOK jobs calling HPROJ1,HPROJ2, HGN or HGNF when
    the ntuple header was not written to the file.


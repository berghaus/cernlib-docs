<![CDATA[/* slice_proj.cpp */
#include <iostream.h>
#include <iomanip.h> 		// Formatting output string.
#include "HTL/Histograms.h" // Transient histograms.
class Histo_App 
{
public:
  Histo_App() {}
public:
  void run();
private:
  void slice ();
  void project ();
  Histo2D *histo;
};
//
// Implementation:
//
void Histo_App::run() {
  // Create a 2D histo using Weighted_Bin and Even_Partition:
  histo = new Histo2D( "Histo_2D",10, 5., 15., 10, 5., 15. );
  // Let's fill the histo with 50000 points:
  double x, w = 0.5;
  for( long i=0; i<50000; i++ ) {
    x = -i*sin(float(i));
    histo->fill(x,x,w);
    histo->fill(20.-x,x,w);
  }
  cout << "2D histogram content" << endl;
  for( long y=0; y<histo->partition_Y().bin_count(); y++ )
    for( long x=0; x<histo->partition_X().bin_count(); x++ ) {
	cout << "bin(" << x << "," << y << "): "
	     << histo->bin(x,y).value() << " -/+ "
	     << histo->bin(x,y).error() << endl;
    }
  // Make two slices
  slice();
  // and two projections
  project();
  delete histo;
}
void Histo_App::slice() {
  long x;
  HSlicer mySlicer;
  // First slice in X . The 2nd parameter is the bin no. along y (0->first bin)
  Histo1DVar *slice1 = mySlicer.xBand (*histo,0);
  // First slice in Y . The 2nd parameter is the x coordinate
  Histo1DVar *slice2 = mySlicer.yBand (*histo,5.);
  cout << endl << "First slice";
  for( x=0; x<slice1->bin_count(); x++ ) {
    cout << endl << ". " << setw(2) << x << ": "
	 << setw(9) << slice1->i_bin(x).value() << " +/- "
	 << setw(4) << slice1->i_bin(x).error();
  }
  cout << endl << endl << "Second slice";
  for( x=0; x<slice2->bin_count(); x++ ) {
    cout << endl << ". " << setw(2) << x << ": "
	 << setw(9) << slice2->i_bin(x).value() << " +/- "
	 << setw(4) << slice2->i_bin(x).error();
  }
  delete slice1;
  delete slice2;
}
void Histo_App::project() {
  long x;
  HSlicer myProjector;
  Histo1DVar *proj1 = myProjector.xProject (*histo);
  Histo1DVar *proj2 = myProjector.yProject (*histo);
  cout << endl << endl << "First projection";
  for( x=0; x<proj1->bin_count(); x++ ) {
    cout << endl << ". " << setw(2) << x << ": "
	 << setw(9) << proj1->i_bin(x).value() << " +/- "
	 << setw(4) << proj1->i_bin(x).error();
  }
  cout << endl << endl << "Second projection";
  for( x=0; x<proj2->bin_count(); x++ ) {
    cout << endl << ". " << setw(2) << x << ": "
	 << setw(9) << proj2->i_bin(x).value() << " +/- "
	 << setw(4) << proj2->i_bin(x).error();
  }
  cout << endl;
  delete proj1;
  delete proj2;
}
int main( int argc, char **argv )
{
  Histo_App app;
  app.run();
}]]>

<![CDATA[/* name_histos.cpp */
#include <iostream.h>
#include <iomanip.h>
#include "HTL/HNaming.h"
class Histo_App : public HepDbApplication
{
public:
  Histo_App ()  {}
  void create();
public:
  void init();
};
void Histo_App::init()
{    
  Init();
  startUpdate();
}
void Histo_App::create()
{
  const int noBins=20;
  HNamingFactory myFactory(HNamingFactory::Override);
  // Create histograms in DB "gepo", Container "sbaffini" and name them
  // in /usr/.../Histograms/MC
  if (myFactory.init(this,"Histograms/MC","gepo","sbaffini")) {
    // Create two histograms. They're named 10 and "p2" in the name tree
    HepRef(PHisto1D) h1 = myFactory.Histo1D(10,"Histo-1",noBins,0.0,20.0);
    HepRef(PHisto1D) h2 = myFactory.Histo1D("p2","Histo-2",noBins,0.0,20.0);
    // Fill histos with different weights:
    for( int i = 0; i < 50000; i++) {   
      double x = (i % 22) - 1;          
      h1->fill(x, (x-9.5)*(x-9.5)+3);
      h2->fill(x, (x-9.5)*(x-9.5)+30);
    }
  }
  // Create histograms in user database, container "Histograms" and name them
  // in /usr/.../Histograms/Data
  
  if (myFactory.init(this,"Histograms/Data")) {
    // Create two histograms. They're named 10 and "p2" in the name tree
    HepRef(PHisto1D) h1 = myFactory.Histo1D(10,"Histo-11",noBins,0.0,20.0);
    HepRef(PHisto1D) h2 = myFactory.Histo1D("p2","Histo-22",noBins,0.0,20.0);
    // Fill histos with different weights:
    for( int i = 0; i < 50000; i++) {   
      double x = (i % 22) - 1;          
      h1->fill(x, (x-9.5)*(x-9.5)+3);
      h2->fill(x, (x-9.5)*(x-9.5)+30);
    }
  }
  // Locate Histogram /usr/.../Histograms/Data/p2
  HLocator myLocator;
  HPrinter hp(cout);
  myLocator.init(this);
  HepRef(PHisto1D) h = myLocator.Histo1D("p2");
  if (h != 0) 
    hp.print(*h);
  h = myLocator.Histo1D(10);
  if (h != 0) 
    hp.print(*h);
}
int main( int argc, char **argv)
{
  // Create application object:
  Histo_App my_app;
  my_app.init();
  my_app.create();
  my_app.commit();
}]]>
